/* soapH.h
   Generated by gSOAP 2.8.63 for zbxhwbservice.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap *soap, struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

inline void soap_default_byte(struct soap *soap, char *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_byte
	*a = SOAP_DEFAULT_byte;
#else
	*a = (char)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_byte(soap, p, "byte", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_byte(struct soap *soap, const char *URL, char *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_byte(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_byte(struct soap *soap, char *p)
{
	if (::soap_read_byte(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

inline void soap_default_int(struct soap *soap, int *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_int
	*a = SOAP_DEFAULT_int;
#else
	*a = (int)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_int(soap, p, "int", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_int(struct soap *soap, const char *URL, int *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_int(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_int(struct soap *soap, int *p)
{
	if (::soap_read_int(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_LONG64_DEFINED
#define SOAP_TYPE_LONG64_DEFINED

inline void soap_default_LONG64(struct soap *soap, LONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_LONG64
	*a = SOAP_DEFAULT_LONG64;
#else
	*a = (LONG64)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_new_LONG64(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

inline int soap_write_LONG64(struct soap *soap, LONG64 const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_LONG64(soap, p, "long", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_LONG64(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_LONG64(soap, p, "long", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_LONG64(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_LONG64(soap, p, "long", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

inline int soap_read_LONG64(struct soap *soap, LONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_LONG64(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_LONG64(struct soap *soap, const char *URL, LONG64 *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_LONG64(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_LONG64(struct soap *soap, LONG64 *p)
{
	if (::soap_read_LONG64(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_unsignedByte_DEFINED
#define SOAP_TYPE_unsignedByte_DEFINED

inline void soap_default_unsignedByte(struct soap *soap, unsigned char *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_unsignedByte
	*a = SOAP_DEFAULT_unsignedByte;
#else
	*a = (unsigned char)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_new_unsignedByte(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

inline int soap_write_unsignedByte(struct soap *soap, unsigned char const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_unsignedByte(soap, p, "unsignedByte", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_unsignedByte(struct soap *soap, const char *URL, unsigned char const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_unsignedByte(soap, p, "unsignedByte", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_unsignedByte(struct soap *soap, const char *URL, unsigned char const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_unsignedByte(soap, p, "unsignedByte", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

inline int soap_read_unsignedByte(struct soap *soap, unsigned char *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_unsignedByte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_unsignedByte(struct soap *soap, const char *URL, unsigned char *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_unsignedByte(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_unsignedByte(struct soap *soap, unsigned char *p)
{
	if (::soap_read_unsignedByte(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_unsignedInt_DEFINED
#define SOAP_TYPE_unsignedInt_DEFINED

inline void soap_default_unsignedInt(struct soap *soap, unsigned int *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_unsignedInt
	*a = SOAP_DEFAULT_unsignedInt;
#else
	*a = (unsigned int)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_new_unsignedInt(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

inline int soap_write_unsignedInt(struct soap *soap, unsigned int const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_unsignedInt(soap, p, "unsignedInt", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_unsignedInt(struct soap *soap, const char *URL, unsigned int const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_unsignedInt(soap, p, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_unsignedInt(struct soap *soap, const char *URL, unsigned int const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_unsignedInt(soap, p, "unsignedInt", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

inline int soap_read_unsignedInt(struct soap *soap, unsigned int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_unsignedInt(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_unsignedInt(struct soap *soap, const char *URL, unsigned int *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_unsignedInt(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_unsignedInt(struct soap *soap, unsigned int *p)
{
	if (::soap_read_unsignedInt(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_bool_DEFINED
#define SOAP_TYPE_bool_DEFINED

inline void soap_default_bool(struct soap *soap, bool *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_bool
	*a = SOAP_DEFAULT_bool;
#else
	*a = (bool)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 bool * SOAP_FMAC4 soap_new_bool(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

inline int soap_write_bool(struct soap *soap, bool const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_bool(soap, p, "boolean", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_bool(struct soap *soap, const char *URL, bool const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_bool(soap, p, "boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_bool(struct soap *soap, const char *URL, bool const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_bool(soap, p, "boolean", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

inline int soap_read_bool(struct soap *soap, bool *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_bool(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_bool(struct soap *soap, const char *URL, bool *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_bool(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_bool(struct soap *soap, bool *p)
{
	if (::soap_read_bool(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskAlarmTypesResponse_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskAlarmTypesResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskAlarmTypesResponse(struct soap*, const char*, int, const _ns1__GetYjzhZskAlarmTypesResponse *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskAlarmTypesResponse * SOAP_FMAC4 soap_in__ns1__GetYjzhZskAlarmTypesResponse(struct soap*, const char*, _ns1__GetYjzhZskAlarmTypesResponse *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskAlarmTypesResponse * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskAlarmTypesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskAlarmTypesResponse * soap_new__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskAlarmTypesResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskAlarmTypesResponse * soap_new_req__ns1__GetYjzhZskAlarmTypesResponse(
	struct soap *soap)
{
	_ns1__GetYjzhZskAlarmTypesResponse *_p = ::soap_new__ns1__GetYjzhZskAlarmTypesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskAlarmTypesResponse * soap_new_set__ns1__GetYjzhZskAlarmTypesResponse(
	struct soap *soap,
	char *GetYjzhZskAlarmTypesResult)
{
	_ns1__GetYjzhZskAlarmTypesResponse *_p = ::soap_new__ns1__GetYjzhZskAlarmTypesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskAlarmTypesResponse::GetYjzhZskAlarmTypesResult = GetYjzhZskAlarmTypesResult;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, _ns1__GetYjzhZskAlarmTypesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskAlarmTypesResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskAlarmTypesResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskAlarmTypesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskAlarmTypesResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskAlarmTypesResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskAlarmTypesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskAlarmTypesResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskAlarmTypesResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskAlarmTypesResponse * SOAP_FMAC4 soap_get__ns1__GetYjzhZskAlarmTypesResponse(struct soap*, _ns1__GetYjzhZskAlarmTypesResponse *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, _ns1__GetYjzhZskAlarmTypesResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskAlarmTypesResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskAlarmTypesResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskAlarmTypesResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskAlarmTypesResponse(struct soap *soap, _ns1__GetYjzhZskAlarmTypesResponse *p)
{
	if (::soap_read__ns1__GetYjzhZskAlarmTypesResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskAlarmTypes_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskAlarmTypes_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskAlarmTypes(struct soap*, const char*, int, const _ns1__GetYjzhZskAlarmTypes *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskAlarmTypes * SOAP_FMAC4 soap_in__ns1__GetYjzhZskAlarmTypes(struct soap*, const char*, _ns1__GetYjzhZskAlarmTypes *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskAlarmTypes * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskAlarmTypes(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskAlarmTypes * soap_new__ns1__GetYjzhZskAlarmTypes(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskAlarmTypes(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskAlarmTypes * soap_new_req__ns1__GetYjzhZskAlarmTypes(
	struct soap *soap)
{
	_ns1__GetYjzhZskAlarmTypes *_p = ::soap_new__ns1__GetYjzhZskAlarmTypes(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskAlarmTypes * soap_new_set__ns1__GetYjzhZskAlarmTypes(
	struct soap *soap,
	char *xb,
	char *cz,
	char *devtypeid,
	char *devname)
{
	_ns1__GetYjzhZskAlarmTypes *_p = ::soap_new__ns1__GetYjzhZskAlarmTypes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskAlarmTypes::xb = xb;
		_p->_ns1__GetYjzhZskAlarmTypes::cz = cz;
		_p->_ns1__GetYjzhZskAlarmTypes::devtypeid = devtypeid;
		_p->_ns1__GetYjzhZskAlarmTypes::devname = devname;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskAlarmTypes(struct soap *soap, _ns1__GetYjzhZskAlarmTypes const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskAlarmTypes", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskAlarmTypes ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *URL, _ns1__GetYjzhZskAlarmTypes const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskAlarmTypes", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskAlarmTypes ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *URL, _ns1__GetYjzhZskAlarmTypes const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskAlarmTypes", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskAlarmTypes ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskAlarmTypes * SOAP_FMAC4 soap_get__ns1__GetYjzhZskAlarmTypes(struct soap*, _ns1__GetYjzhZskAlarmTypes *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskAlarmTypes(struct soap *soap, _ns1__GetYjzhZskAlarmTypes *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskAlarmTypes(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *URL, _ns1__GetYjzhZskAlarmTypes *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskAlarmTypes(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskAlarmTypes(struct soap *soap, _ns1__GetYjzhZskAlarmTypes *p)
{
	if (::soap_read__ns1__GetYjzhZskAlarmTypes(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SelectYjzhDeviceResponse_DEFINED
#define SOAP_TYPE__ns1__SelectYjzhDeviceResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectYjzhDeviceResponse(struct soap*, const char*, int, const _ns1__SelectYjzhDeviceResponse *, const char*);
SOAP_FMAC3 _ns1__SelectYjzhDeviceResponse * SOAP_FMAC4 soap_in__ns1__SelectYjzhDeviceResponse(struct soap*, const char*, _ns1__SelectYjzhDeviceResponse *, const char*);
SOAP_FMAC1 _ns1__SelectYjzhDeviceResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectYjzhDeviceResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SelectYjzhDeviceResponse * soap_new__ns1__SelectYjzhDeviceResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SelectYjzhDeviceResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__SelectYjzhDeviceResponse * soap_new_req__ns1__SelectYjzhDeviceResponse(
	struct soap *soap)
{
	_ns1__SelectYjzhDeviceResponse *_p = ::soap_new__ns1__SelectYjzhDeviceResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SelectYjzhDeviceResponse * soap_new_set__ns1__SelectYjzhDeviceResponse(
	struct soap *soap,
	char *SelectYjzhDeviceResult)
{
	_ns1__SelectYjzhDeviceResponse *_p = ::soap_new__ns1__SelectYjzhDeviceResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SelectYjzhDeviceResponse::SelectYjzhDeviceResult = SelectYjzhDeviceResult;
	}
	return _p;
}

inline int soap_write__ns1__SelectYjzhDeviceResponse(struct soap *soap, _ns1__SelectYjzhDeviceResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhDeviceResponse", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhDeviceResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SelectYjzhDeviceResponse(struct soap *soap, const char *URL, _ns1__SelectYjzhDeviceResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhDeviceResponse", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhDeviceResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SelectYjzhDeviceResponse(struct soap *soap, const char *URL, _ns1__SelectYjzhDeviceResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhDeviceResponse", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhDeviceResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SelectYjzhDeviceResponse * SOAP_FMAC4 soap_get__ns1__SelectYjzhDeviceResponse(struct soap*, _ns1__SelectYjzhDeviceResponse *, const char*, const char*);

inline int soap_read__ns1__SelectYjzhDeviceResponse(struct soap *soap, _ns1__SelectYjzhDeviceResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SelectYjzhDeviceResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SelectYjzhDeviceResponse(struct soap *soap, const char *URL, _ns1__SelectYjzhDeviceResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SelectYjzhDeviceResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SelectYjzhDeviceResponse(struct soap *soap, _ns1__SelectYjzhDeviceResponse *p)
{
	if (::soap_read__ns1__SelectYjzhDeviceResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SelectYjzhDevice_DEFINED
#define SOAP_TYPE__ns1__SelectYjzhDevice_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectYjzhDevice(struct soap*, const char*, int, const _ns1__SelectYjzhDevice *, const char*);
SOAP_FMAC3 _ns1__SelectYjzhDevice * SOAP_FMAC4 soap_in__ns1__SelectYjzhDevice(struct soap*, const char*, _ns1__SelectYjzhDevice *, const char*);
SOAP_FMAC1 _ns1__SelectYjzhDevice * SOAP_FMAC2 soap_instantiate__ns1__SelectYjzhDevice(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SelectYjzhDevice * soap_new__ns1__SelectYjzhDevice(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SelectYjzhDevice(soap, n, NULL, NULL, NULL);
}

inline _ns1__SelectYjzhDevice * soap_new_req__ns1__SelectYjzhDevice(
	struct soap *soap)
{
	_ns1__SelectYjzhDevice *_p = ::soap_new__ns1__SelectYjzhDevice(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SelectYjzhDevice * soap_new_set__ns1__SelectYjzhDevice(
	struct soap *soap,
	char *xb,
	char *station,
	char *typeid_)
{
	_ns1__SelectYjzhDevice *_p = ::soap_new__ns1__SelectYjzhDevice(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SelectYjzhDevice::xb = xb;
		_p->_ns1__SelectYjzhDevice::station = station;
		_p->_ns1__SelectYjzhDevice::typeid_ = typeid_;
	}
	return _p;
}

inline int soap_write__ns1__SelectYjzhDevice(struct soap *soap, _ns1__SelectYjzhDevice const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhDevice", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhDevice ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SelectYjzhDevice(struct soap *soap, const char *URL, _ns1__SelectYjzhDevice const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhDevice", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhDevice ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SelectYjzhDevice(struct soap *soap, const char *URL, _ns1__SelectYjzhDevice const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhDevice", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhDevice ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SelectYjzhDevice * SOAP_FMAC4 soap_get__ns1__SelectYjzhDevice(struct soap*, _ns1__SelectYjzhDevice *, const char*, const char*);

inline int soap_read__ns1__SelectYjzhDevice(struct soap *soap, _ns1__SelectYjzhDevice *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SelectYjzhDevice(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SelectYjzhDevice(struct soap *soap, const char *URL, _ns1__SelectYjzhDevice *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SelectYjzhDevice(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SelectYjzhDevice(struct soap *soap, _ns1__SelectYjzhDevice *p)
{
	if (::soap_read__ns1__SelectYjzhDevice(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SelectYjzhStationResponse_DEFINED
#define SOAP_TYPE__ns1__SelectYjzhStationResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectYjzhStationResponse(struct soap*, const char*, int, const _ns1__SelectYjzhStationResponse *, const char*);
SOAP_FMAC3 _ns1__SelectYjzhStationResponse * SOAP_FMAC4 soap_in__ns1__SelectYjzhStationResponse(struct soap*, const char*, _ns1__SelectYjzhStationResponse *, const char*);
SOAP_FMAC1 _ns1__SelectYjzhStationResponse * SOAP_FMAC2 soap_instantiate__ns1__SelectYjzhStationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SelectYjzhStationResponse * soap_new__ns1__SelectYjzhStationResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SelectYjzhStationResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__SelectYjzhStationResponse * soap_new_req__ns1__SelectYjzhStationResponse(
	struct soap *soap)
{
	_ns1__SelectYjzhStationResponse *_p = ::soap_new__ns1__SelectYjzhStationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SelectYjzhStationResponse * soap_new_set__ns1__SelectYjzhStationResponse(
	struct soap *soap,
	char *SelectYjzhStationResult)
{
	_ns1__SelectYjzhStationResponse *_p = ::soap_new__ns1__SelectYjzhStationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SelectYjzhStationResponse::SelectYjzhStationResult = SelectYjzhStationResult;
	}
	return _p;
}

inline int soap_write__ns1__SelectYjzhStationResponse(struct soap *soap, _ns1__SelectYjzhStationResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhStationResponse", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhStationResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SelectYjzhStationResponse(struct soap *soap, const char *URL, _ns1__SelectYjzhStationResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhStationResponse", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhStationResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SelectYjzhStationResponse(struct soap *soap, const char *URL, _ns1__SelectYjzhStationResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhStationResponse", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhStationResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SelectYjzhStationResponse * SOAP_FMAC4 soap_get__ns1__SelectYjzhStationResponse(struct soap*, _ns1__SelectYjzhStationResponse *, const char*, const char*);

inline int soap_read__ns1__SelectYjzhStationResponse(struct soap *soap, _ns1__SelectYjzhStationResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SelectYjzhStationResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SelectYjzhStationResponse(struct soap *soap, const char *URL, _ns1__SelectYjzhStationResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SelectYjzhStationResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SelectYjzhStationResponse(struct soap *soap, _ns1__SelectYjzhStationResponse *p)
{
	if (::soap_read__ns1__SelectYjzhStationResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SelectYjzhStation_DEFINED
#define SOAP_TYPE__ns1__SelectYjzhStation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SelectYjzhStation(struct soap*, const char*, int, const _ns1__SelectYjzhStation *, const char*);
SOAP_FMAC3 _ns1__SelectYjzhStation * SOAP_FMAC4 soap_in__ns1__SelectYjzhStation(struct soap*, const char*, _ns1__SelectYjzhStation *, const char*);
SOAP_FMAC1 _ns1__SelectYjzhStation * SOAP_FMAC2 soap_instantiate__ns1__SelectYjzhStation(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SelectYjzhStation * soap_new__ns1__SelectYjzhStation(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SelectYjzhStation(soap, n, NULL, NULL, NULL);
}

inline _ns1__SelectYjzhStation * soap_new_req__ns1__SelectYjzhStation(
	struct soap *soap)
{
	_ns1__SelectYjzhStation *_p = ::soap_new__ns1__SelectYjzhStation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SelectYjzhStation * soap_new_set__ns1__SelectYjzhStation(
	struct soap *soap,
	char *xb)
{
	_ns1__SelectYjzhStation *_p = ::soap_new__ns1__SelectYjzhStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SelectYjzhStation::xb = xb;
	}
	return _p;
}

inline int soap_write__ns1__SelectYjzhStation(struct soap *soap, _ns1__SelectYjzhStation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhStation", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhStation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SelectYjzhStation(struct soap *soap, const char *URL, _ns1__SelectYjzhStation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhStation", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhStation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SelectYjzhStation(struct soap *soap, const char *URL, _ns1__SelectYjzhStation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SelectYjzhStation", p->soap_type() == SOAP_TYPE__ns1__SelectYjzhStation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SelectYjzhStation * SOAP_FMAC4 soap_get__ns1__SelectYjzhStation(struct soap*, _ns1__SelectYjzhStation *, const char*, const char*);

inline int soap_read__ns1__SelectYjzhStation(struct soap *soap, _ns1__SelectYjzhStation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SelectYjzhStation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SelectYjzhStation(struct soap *soap, const char *URL, _ns1__SelectYjzhStation *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SelectYjzhStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SelectYjzhStation(struct soap *soap, _ns1__SelectYjzhStation *p)
{
	if (::soap_read__ns1__SelectYjzhStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SaveMapFileResponse_DEFINED
#define SOAP_TYPE__ns1__SaveMapFileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveMapFileResponse(struct soap*, const char*, int, const _ns1__SaveMapFileResponse *, const char*);
SOAP_FMAC3 _ns1__SaveMapFileResponse * SOAP_FMAC4 soap_in__ns1__SaveMapFileResponse(struct soap*, const char*, _ns1__SaveMapFileResponse *, const char*);
SOAP_FMAC1 _ns1__SaveMapFileResponse * SOAP_FMAC2 soap_instantiate__ns1__SaveMapFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveMapFileResponse * soap_new__ns1__SaveMapFileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SaveMapFileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__SaveMapFileResponse * soap_new_req__ns1__SaveMapFileResponse(
	struct soap *soap)
{
	_ns1__SaveMapFileResponse *_p = ::soap_new__ns1__SaveMapFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SaveMapFileResponse * soap_new_set__ns1__SaveMapFileResponse(
	struct soap *soap,
	char *SaveMapFileResult)
{
	_ns1__SaveMapFileResponse *_p = ::soap_new__ns1__SaveMapFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SaveMapFileResponse::SaveMapFileResult = SaveMapFileResult;
	}
	return _p;
}

inline int soap_write__ns1__SaveMapFileResponse(struct soap *soap, _ns1__SaveMapFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveMapFileResponse", p->soap_type() == SOAP_TYPE__ns1__SaveMapFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SaveMapFileResponse(struct soap *soap, const char *URL, _ns1__SaveMapFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveMapFileResponse", p->soap_type() == SOAP_TYPE__ns1__SaveMapFileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SaveMapFileResponse(struct soap *soap, const char *URL, _ns1__SaveMapFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveMapFileResponse", p->soap_type() == SOAP_TYPE__ns1__SaveMapFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SaveMapFileResponse * SOAP_FMAC4 soap_get__ns1__SaveMapFileResponse(struct soap*, _ns1__SaveMapFileResponse *, const char*, const char*);

inline int soap_read__ns1__SaveMapFileResponse(struct soap *soap, _ns1__SaveMapFileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SaveMapFileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SaveMapFileResponse(struct soap *soap, const char *URL, _ns1__SaveMapFileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SaveMapFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SaveMapFileResponse(struct soap *soap, _ns1__SaveMapFileResponse *p)
{
	if (::soap_read__ns1__SaveMapFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SaveMapFile_DEFINED
#define SOAP_TYPE__ns1__SaveMapFile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveMapFile(struct soap*, const char*, int, const _ns1__SaveMapFile *, const char*);
SOAP_FMAC3 _ns1__SaveMapFile * SOAP_FMAC4 soap_in__ns1__SaveMapFile(struct soap*, const char*, _ns1__SaveMapFile *, const char*);
SOAP_FMAC1 _ns1__SaveMapFile * SOAP_FMAC2 soap_instantiate__ns1__SaveMapFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveMapFile * soap_new__ns1__SaveMapFile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SaveMapFile(soap, n, NULL, NULL, NULL);
}

inline _ns1__SaveMapFile * soap_new_req__ns1__SaveMapFile(
	struct soap *soap)
{
	_ns1__SaveMapFile *_p = ::soap_new__ns1__SaveMapFile(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SaveMapFile * soap_new_set__ns1__SaveMapFile(
	struct soap *soap,
	char *Lh,
	char *mapid,
	char *page)
{
	_ns1__SaveMapFile *_p = ::soap_new__ns1__SaveMapFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SaveMapFile::Lh = Lh;
		_p->_ns1__SaveMapFile::mapid = mapid;
		_p->_ns1__SaveMapFile::page = page;
	}
	return _p;
}

inline int soap_write__ns1__SaveMapFile(struct soap *soap, _ns1__SaveMapFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveMapFile", p->soap_type() == SOAP_TYPE__ns1__SaveMapFile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SaveMapFile(struct soap *soap, const char *URL, _ns1__SaveMapFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveMapFile", p->soap_type() == SOAP_TYPE__ns1__SaveMapFile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SaveMapFile(struct soap *soap, const char *URL, _ns1__SaveMapFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveMapFile", p->soap_type() == SOAP_TYPE__ns1__SaveMapFile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SaveMapFile * SOAP_FMAC4 soap_get__ns1__SaveMapFile(struct soap*, _ns1__SaveMapFile *, const char*, const char*);

inline int soap_read__ns1__SaveMapFile(struct soap *soap, _ns1__SaveMapFile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SaveMapFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SaveMapFile(struct soap *soap, const char *URL, _ns1__SaveMapFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SaveMapFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SaveMapFile(struct soap *soap, _ns1__SaveMapFile *p)
{
	if (::soap_read__ns1__SaveMapFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GzGetDeviceStructResponse_DEFINED
#define SOAP_TYPE__ns1__GzGetDeviceStructResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GzGetDeviceStructResponse(struct soap*, const char*, int, const _ns1__GzGetDeviceStructResponse *, const char*);
SOAP_FMAC3 _ns1__GzGetDeviceStructResponse * SOAP_FMAC4 soap_in__ns1__GzGetDeviceStructResponse(struct soap*, const char*, _ns1__GzGetDeviceStructResponse *, const char*);
SOAP_FMAC1 _ns1__GzGetDeviceStructResponse * SOAP_FMAC2 soap_instantiate__ns1__GzGetDeviceStructResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GzGetDeviceStructResponse * soap_new__ns1__GzGetDeviceStructResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GzGetDeviceStructResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GzGetDeviceStructResponse * soap_new_req__ns1__GzGetDeviceStructResponse(
	struct soap *soap)
{
	_ns1__GzGetDeviceStructResponse *_p = ::soap_new__ns1__GzGetDeviceStructResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GzGetDeviceStructResponse * soap_new_set__ns1__GzGetDeviceStructResponse(
	struct soap *soap,
	char *GzGetDeviceStructResult)
{
	_ns1__GzGetDeviceStructResponse *_p = ::soap_new__ns1__GzGetDeviceStructResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GzGetDeviceStructResponse::GzGetDeviceStructResult = GzGetDeviceStructResult;
	}
	return _p;
}

inline int soap_write__ns1__GzGetDeviceStructResponse(struct soap *soap, _ns1__GzGetDeviceStructResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetDeviceStructResponse", p->soap_type() == SOAP_TYPE__ns1__GzGetDeviceStructResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GzGetDeviceStructResponse(struct soap *soap, const char *URL, _ns1__GzGetDeviceStructResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetDeviceStructResponse", p->soap_type() == SOAP_TYPE__ns1__GzGetDeviceStructResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GzGetDeviceStructResponse(struct soap *soap, const char *URL, _ns1__GzGetDeviceStructResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetDeviceStructResponse", p->soap_type() == SOAP_TYPE__ns1__GzGetDeviceStructResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GzGetDeviceStructResponse * SOAP_FMAC4 soap_get__ns1__GzGetDeviceStructResponse(struct soap*, _ns1__GzGetDeviceStructResponse *, const char*, const char*);

inline int soap_read__ns1__GzGetDeviceStructResponse(struct soap *soap, _ns1__GzGetDeviceStructResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GzGetDeviceStructResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GzGetDeviceStructResponse(struct soap *soap, const char *URL, _ns1__GzGetDeviceStructResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GzGetDeviceStructResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GzGetDeviceStructResponse(struct soap *soap, _ns1__GzGetDeviceStructResponse *p)
{
	if (::soap_read__ns1__GzGetDeviceStructResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GzGetDeviceStruct_DEFINED
#define SOAP_TYPE__ns1__GzGetDeviceStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GzGetDeviceStruct(struct soap*, const char*, int, const _ns1__GzGetDeviceStruct *, const char*);
SOAP_FMAC3 _ns1__GzGetDeviceStruct * SOAP_FMAC4 soap_in__ns1__GzGetDeviceStruct(struct soap*, const char*, _ns1__GzGetDeviceStruct *, const char*);
SOAP_FMAC1 _ns1__GzGetDeviceStruct * SOAP_FMAC2 soap_instantiate__ns1__GzGetDeviceStruct(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GzGetDeviceStruct * soap_new__ns1__GzGetDeviceStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GzGetDeviceStruct(soap, n, NULL, NULL, NULL);
}

inline _ns1__GzGetDeviceStruct * soap_new_req__ns1__GzGetDeviceStruct(
	struct soap *soap)
{
	_ns1__GzGetDeviceStruct *_p = ::soap_new__ns1__GzGetDeviceStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GzGetDeviceStruct * soap_new_set__ns1__GzGetDeviceStruct(
	struct soap *soap,
	char *tztype,
	char *xb,
	char *station)
{
	_ns1__GzGetDeviceStruct *_p = ::soap_new__ns1__GzGetDeviceStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GzGetDeviceStruct::tztype = tztype;
		_p->_ns1__GzGetDeviceStruct::xb = xb;
		_p->_ns1__GzGetDeviceStruct::station = station;
	}
	return _p;
}

inline int soap_write__ns1__GzGetDeviceStruct(struct soap *soap, _ns1__GzGetDeviceStruct const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetDeviceStruct", p->soap_type() == SOAP_TYPE__ns1__GzGetDeviceStruct ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GzGetDeviceStruct(struct soap *soap, const char *URL, _ns1__GzGetDeviceStruct const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetDeviceStruct", p->soap_type() == SOAP_TYPE__ns1__GzGetDeviceStruct ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GzGetDeviceStruct(struct soap *soap, const char *URL, _ns1__GzGetDeviceStruct const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetDeviceStruct", p->soap_type() == SOAP_TYPE__ns1__GzGetDeviceStruct ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GzGetDeviceStruct * SOAP_FMAC4 soap_get__ns1__GzGetDeviceStruct(struct soap*, _ns1__GzGetDeviceStruct *, const char*, const char*);

inline int soap_read__ns1__GzGetDeviceStruct(struct soap *soap, _ns1__GzGetDeviceStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GzGetDeviceStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GzGetDeviceStruct(struct soap *soap, const char *URL, _ns1__GzGetDeviceStruct *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GzGetDeviceStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GzGetDeviceStruct(struct soap *soap, _ns1__GzGetDeviceStruct *p)
{
	if (::soap_read__ns1__GzGetDeviceStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GzGetTypeListResponse_DEFINED
#define SOAP_TYPE__ns1__GzGetTypeListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GzGetTypeListResponse(struct soap*, const char*, int, const _ns1__GzGetTypeListResponse *, const char*);
SOAP_FMAC3 _ns1__GzGetTypeListResponse * SOAP_FMAC4 soap_in__ns1__GzGetTypeListResponse(struct soap*, const char*, _ns1__GzGetTypeListResponse *, const char*);
SOAP_FMAC1 _ns1__GzGetTypeListResponse * SOAP_FMAC2 soap_instantiate__ns1__GzGetTypeListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GzGetTypeListResponse * soap_new__ns1__GzGetTypeListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GzGetTypeListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GzGetTypeListResponse * soap_new_req__ns1__GzGetTypeListResponse(
	struct soap *soap)
{
	_ns1__GzGetTypeListResponse *_p = ::soap_new__ns1__GzGetTypeListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GzGetTypeListResponse * soap_new_set__ns1__GzGetTypeListResponse(
	struct soap *soap,
	char *GzGetTypeListResult)
{
	_ns1__GzGetTypeListResponse *_p = ::soap_new__ns1__GzGetTypeListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GzGetTypeListResponse::GzGetTypeListResult = GzGetTypeListResult;
	}
	return _p;
}

inline int soap_write__ns1__GzGetTypeListResponse(struct soap *soap, _ns1__GzGetTypeListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetTypeListResponse", p->soap_type() == SOAP_TYPE__ns1__GzGetTypeListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GzGetTypeListResponse(struct soap *soap, const char *URL, _ns1__GzGetTypeListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetTypeListResponse", p->soap_type() == SOAP_TYPE__ns1__GzGetTypeListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GzGetTypeListResponse(struct soap *soap, const char *URL, _ns1__GzGetTypeListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetTypeListResponse", p->soap_type() == SOAP_TYPE__ns1__GzGetTypeListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GzGetTypeListResponse * SOAP_FMAC4 soap_get__ns1__GzGetTypeListResponse(struct soap*, _ns1__GzGetTypeListResponse *, const char*, const char*);

inline int soap_read__ns1__GzGetTypeListResponse(struct soap *soap, _ns1__GzGetTypeListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GzGetTypeListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GzGetTypeListResponse(struct soap *soap, const char *URL, _ns1__GzGetTypeListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GzGetTypeListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GzGetTypeListResponse(struct soap *soap, _ns1__GzGetTypeListResponse *p)
{
	if (::soap_read__ns1__GzGetTypeListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GzGetTypeList_DEFINED
#define SOAP_TYPE__ns1__GzGetTypeList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GzGetTypeList(struct soap*, const char*, int, const _ns1__GzGetTypeList *, const char*);
SOAP_FMAC3 _ns1__GzGetTypeList * SOAP_FMAC4 soap_in__ns1__GzGetTypeList(struct soap*, const char*, _ns1__GzGetTypeList *, const char*);
SOAP_FMAC1 _ns1__GzGetTypeList * SOAP_FMAC2 soap_instantiate__ns1__GzGetTypeList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GzGetTypeList * soap_new__ns1__GzGetTypeList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GzGetTypeList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GzGetTypeList * soap_new_req__ns1__GzGetTypeList(
	struct soap *soap)
{
	_ns1__GzGetTypeList *_p = ::soap_new__ns1__GzGetTypeList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GzGetTypeList * soap_new_set__ns1__GzGetTypeList(
	struct soap *soap,
	char *tztype)
{
	_ns1__GzGetTypeList *_p = ::soap_new__ns1__GzGetTypeList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GzGetTypeList::tztype = tztype;
	}
	return _p;
}

inline int soap_write__ns1__GzGetTypeList(struct soap *soap, _ns1__GzGetTypeList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetTypeList", p->soap_type() == SOAP_TYPE__ns1__GzGetTypeList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GzGetTypeList(struct soap *soap, const char *URL, _ns1__GzGetTypeList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetTypeList", p->soap_type() == SOAP_TYPE__ns1__GzGetTypeList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GzGetTypeList(struct soap *soap, const char *URL, _ns1__GzGetTypeList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GzGetTypeList", p->soap_type() == SOAP_TYPE__ns1__GzGetTypeList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GzGetTypeList * SOAP_FMAC4 soap_get__ns1__GzGetTypeList(struct soap*, _ns1__GzGetTypeList *, const char*, const char*);

inline int soap_read__ns1__GzGetTypeList(struct soap *soap, _ns1__GzGetTypeList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GzGetTypeList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GzGetTypeList(struct soap *soap, const char *URL, _ns1__GzGetTypeList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GzGetTypeList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GzGetTypeList(struct soap *soap, _ns1__GzGetTypeList *p)
{
	if (::soap_read__ns1__GzGetTypeList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SGCDrawEmfResponse_DEFINED
#define SOAP_TYPE__ns1__SGCDrawEmfResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SGCDrawEmfResponse(struct soap*, const char*, int, const _ns1__SGCDrawEmfResponse *, const char*);
SOAP_FMAC3 _ns1__SGCDrawEmfResponse * SOAP_FMAC4 soap_in__ns1__SGCDrawEmfResponse(struct soap*, const char*, _ns1__SGCDrawEmfResponse *, const char*);
SOAP_FMAC1 _ns1__SGCDrawEmfResponse * SOAP_FMAC2 soap_instantiate__ns1__SGCDrawEmfResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SGCDrawEmfResponse * soap_new__ns1__SGCDrawEmfResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SGCDrawEmfResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__SGCDrawEmfResponse * soap_new_req__ns1__SGCDrawEmfResponse(
	struct soap *soap)
{
	_ns1__SGCDrawEmfResponse *_p = ::soap_new__ns1__SGCDrawEmfResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SGCDrawEmfResponse * soap_new_set__ns1__SGCDrawEmfResponse(
	struct soap *soap,
	char *SGCDrawEmfResult)
{
	_ns1__SGCDrawEmfResponse *_p = ::soap_new__ns1__SGCDrawEmfResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SGCDrawEmfResponse::SGCDrawEmfResult = SGCDrawEmfResult;
	}
	return _p;
}

inline int soap_write__ns1__SGCDrawEmfResponse(struct soap *soap, _ns1__SGCDrawEmfResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SGCDrawEmfResponse", p->soap_type() == SOAP_TYPE__ns1__SGCDrawEmfResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SGCDrawEmfResponse(struct soap *soap, const char *URL, _ns1__SGCDrawEmfResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SGCDrawEmfResponse", p->soap_type() == SOAP_TYPE__ns1__SGCDrawEmfResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SGCDrawEmfResponse(struct soap *soap, const char *URL, _ns1__SGCDrawEmfResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SGCDrawEmfResponse", p->soap_type() == SOAP_TYPE__ns1__SGCDrawEmfResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SGCDrawEmfResponse * SOAP_FMAC4 soap_get__ns1__SGCDrawEmfResponse(struct soap*, _ns1__SGCDrawEmfResponse *, const char*, const char*);

inline int soap_read__ns1__SGCDrawEmfResponse(struct soap *soap, _ns1__SGCDrawEmfResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SGCDrawEmfResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SGCDrawEmfResponse(struct soap *soap, const char *URL, _ns1__SGCDrawEmfResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SGCDrawEmfResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SGCDrawEmfResponse(struct soap *soap, _ns1__SGCDrawEmfResponse *p)
{
	if (::soap_read__ns1__SGCDrawEmfResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SGCDrawEmf_DEFINED
#define SOAP_TYPE__ns1__SGCDrawEmf_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SGCDrawEmf(struct soap*, const char*, int, const _ns1__SGCDrawEmf *, const char*);
SOAP_FMAC3 _ns1__SGCDrawEmf * SOAP_FMAC4 soap_in__ns1__SGCDrawEmf(struct soap*, const char*, _ns1__SGCDrawEmf *, const char*);
SOAP_FMAC1 _ns1__SGCDrawEmf * SOAP_FMAC2 soap_instantiate__ns1__SGCDrawEmf(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SGCDrawEmf * soap_new__ns1__SGCDrawEmf(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SGCDrawEmf(soap, n, NULL, NULL, NULL);
}

inline _ns1__SGCDrawEmf * soap_new_req__ns1__SGCDrawEmf(
	struct soap *soap)
{
	_ns1__SGCDrawEmf *_p = ::soap_new__ns1__SGCDrawEmf(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SGCDrawEmf * soap_new_set__ns1__SGCDrawEmf(
	struct soap *soap,
	char *guid,
	char *rel)
{
	_ns1__SGCDrawEmf *_p = ::soap_new__ns1__SGCDrawEmf(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SGCDrawEmf::guid = guid;
		_p->_ns1__SGCDrawEmf::rel = rel;
	}
	return _p;
}

inline int soap_write__ns1__SGCDrawEmf(struct soap *soap, _ns1__SGCDrawEmf const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SGCDrawEmf", p->soap_type() == SOAP_TYPE__ns1__SGCDrawEmf ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SGCDrawEmf(struct soap *soap, const char *URL, _ns1__SGCDrawEmf const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SGCDrawEmf", p->soap_type() == SOAP_TYPE__ns1__SGCDrawEmf ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SGCDrawEmf(struct soap *soap, const char *URL, _ns1__SGCDrawEmf const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SGCDrawEmf", p->soap_type() == SOAP_TYPE__ns1__SGCDrawEmf ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SGCDrawEmf * SOAP_FMAC4 soap_get__ns1__SGCDrawEmf(struct soap*, _ns1__SGCDrawEmf *, const char*, const char*);

inline int soap_read__ns1__SGCDrawEmf(struct soap *soap, _ns1__SGCDrawEmf *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SGCDrawEmf(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SGCDrawEmf(struct soap *soap, const char *URL, _ns1__SGCDrawEmf *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SGCDrawEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SGCDrawEmf(struct soap *soap, _ns1__SGCDrawEmf *p)
{
	if (::soap_read__ns1__SGCDrawEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__FlowChartEmfResponse_DEFINED
#define SOAP_TYPE__ns1__FlowChartEmfResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__FlowChartEmfResponse(struct soap*, const char*, int, const _ns1__FlowChartEmfResponse *, const char*);
SOAP_FMAC3 _ns1__FlowChartEmfResponse * SOAP_FMAC4 soap_in__ns1__FlowChartEmfResponse(struct soap*, const char*, _ns1__FlowChartEmfResponse *, const char*);
SOAP_FMAC1 _ns1__FlowChartEmfResponse * SOAP_FMAC2 soap_instantiate__ns1__FlowChartEmfResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__FlowChartEmfResponse * soap_new__ns1__FlowChartEmfResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__FlowChartEmfResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__FlowChartEmfResponse * soap_new_req__ns1__FlowChartEmfResponse(
	struct soap *soap)
{
	_ns1__FlowChartEmfResponse *_p = ::soap_new__ns1__FlowChartEmfResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__FlowChartEmfResponse * soap_new_set__ns1__FlowChartEmfResponse(
	struct soap *soap,
	char *FlowChartEmfResult)
{
	_ns1__FlowChartEmfResponse *_p = ::soap_new__ns1__FlowChartEmfResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__FlowChartEmfResponse::FlowChartEmfResult = FlowChartEmfResult;
	}
	return _p;
}

inline int soap_write__ns1__FlowChartEmfResponse(struct soap *soap, _ns1__FlowChartEmfResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:FlowChartEmfResponse", p->soap_type() == SOAP_TYPE__ns1__FlowChartEmfResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__FlowChartEmfResponse(struct soap *soap, const char *URL, _ns1__FlowChartEmfResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:FlowChartEmfResponse", p->soap_type() == SOAP_TYPE__ns1__FlowChartEmfResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__FlowChartEmfResponse(struct soap *soap, const char *URL, _ns1__FlowChartEmfResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:FlowChartEmfResponse", p->soap_type() == SOAP_TYPE__ns1__FlowChartEmfResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__FlowChartEmfResponse * SOAP_FMAC4 soap_get__ns1__FlowChartEmfResponse(struct soap*, _ns1__FlowChartEmfResponse *, const char*, const char*);

inline int soap_read__ns1__FlowChartEmfResponse(struct soap *soap, _ns1__FlowChartEmfResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__FlowChartEmfResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__FlowChartEmfResponse(struct soap *soap, const char *URL, _ns1__FlowChartEmfResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__FlowChartEmfResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__FlowChartEmfResponse(struct soap *soap, _ns1__FlowChartEmfResponse *p)
{
	if (::soap_read__ns1__FlowChartEmfResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__FlowChartEmf_DEFINED
#define SOAP_TYPE__ns1__FlowChartEmf_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__FlowChartEmf(struct soap*, const char*, int, const _ns1__FlowChartEmf *, const char*);
SOAP_FMAC3 _ns1__FlowChartEmf * SOAP_FMAC4 soap_in__ns1__FlowChartEmf(struct soap*, const char*, _ns1__FlowChartEmf *, const char*);
SOAP_FMAC1 _ns1__FlowChartEmf * SOAP_FMAC2 soap_instantiate__ns1__FlowChartEmf(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__FlowChartEmf * soap_new__ns1__FlowChartEmf(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__FlowChartEmf(soap, n, NULL, NULL, NULL);
}

inline _ns1__FlowChartEmf * soap_new_req__ns1__FlowChartEmf(
	struct soap *soap)
{
	_ns1__FlowChartEmf *_p = ::soap_new__ns1__FlowChartEmf(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__FlowChartEmf * soap_new_set__ns1__FlowChartEmf(
	struct soap *soap,
	char *guid)
{
	_ns1__FlowChartEmf *_p = ::soap_new__ns1__FlowChartEmf(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__FlowChartEmf::guid = guid;
	}
	return _p;
}

inline int soap_write__ns1__FlowChartEmf(struct soap *soap, _ns1__FlowChartEmf const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:FlowChartEmf", p->soap_type() == SOAP_TYPE__ns1__FlowChartEmf ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__FlowChartEmf(struct soap *soap, const char *URL, _ns1__FlowChartEmf const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:FlowChartEmf", p->soap_type() == SOAP_TYPE__ns1__FlowChartEmf ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__FlowChartEmf(struct soap *soap, const char *URL, _ns1__FlowChartEmf const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:FlowChartEmf", p->soap_type() == SOAP_TYPE__ns1__FlowChartEmf ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__FlowChartEmf * SOAP_FMAC4 soap_get__ns1__FlowChartEmf(struct soap*, _ns1__FlowChartEmf *, const char*, const char*);

inline int soap_read__ns1__FlowChartEmf(struct soap *soap, _ns1__FlowChartEmf *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__FlowChartEmf(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__FlowChartEmf(struct soap *soap, const char *URL, _ns1__FlowChartEmf *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__FlowChartEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__FlowChartEmf(struct soap *soap, _ns1__FlowChartEmf *p)
{
	if (::soap_read__ns1__FlowChartEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetZhouQiResponse_DEFINED
#define SOAP_TYPE__ns1__GetZhouQiResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetZhouQiResponse(struct soap*, const char*, int, const _ns1__GetZhouQiResponse *, const char*);
SOAP_FMAC3 _ns1__GetZhouQiResponse * SOAP_FMAC4 soap_in__ns1__GetZhouQiResponse(struct soap*, const char*, _ns1__GetZhouQiResponse *, const char*);
SOAP_FMAC1 _ns1__GetZhouQiResponse * SOAP_FMAC2 soap_instantiate__ns1__GetZhouQiResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetZhouQiResponse * soap_new__ns1__GetZhouQiResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetZhouQiResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetZhouQiResponse * soap_new_req__ns1__GetZhouQiResponse(
	struct soap *soap)
{
	_ns1__GetZhouQiResponse *_p = ::soap_new__ns1__GetZhouQiResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetZhouQiResponse * soap_new_set__ns1__GetZhouQiResponse(
	struct soap *soap,
	char *GetZhouQiResult)
{
	_ns1__GetZhouQiResponse *_p = ::soap_new__ns1__GetZhouQiResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetZhouQiResponse::GetZhouQiResult = GetZhouQiResult;
	}
	return _p;
}

inline int soap_write__ns1__GetZhouQiResponse(struct soap *soap, _ns1__GetZhouQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetZhouQiResponse", p->soap_type() == SOAP_TYPE__ns1__GetZhouQiResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetZhouQiResponse(struct soap *soap, const char *URL, _ns1__GetZhouQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetZhouQiResponse", p->soap_type() == SOAP_TYPE__ns1__GetZhouQiResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetZhouQiResponse(struct soap *soap, const char *URL, _ns1__GetZhouQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetZhouQiResponse", p->soap_type() == SOAP_TYPE__ns1__GetZhouQiResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetZhouQiResponse * SOAP_FMAC4 soap_get__ns1__GetZhouQiResponse(struct soap*, _ns1__GetZhouQiResponse *, const char*, const char*);

inline int soap_read__ns1__GetZhouQiResponse(struct soap *soap, _ns1__GetZhouQiResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetZhouQiResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetZhouQiResponse(struct soap *soap, const char *URL, _ns1__GetZhouQiResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetZhouQiResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetZhouQiResponse(struct soap *soap, _ns1__GetZhouQiResponse *p)
{
	if (::soap_read__ns1__GetZhouQiResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetZhouQi_DEFINED
#define SOAP_TYPE__ns1__GetZhouQi_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetZhouQi(struct soap*, const char*, int, const _ns1__GetZhouQi *, const char*);
SOAP_FMAC3 _ns1__GetZhouQi * SOAP_FMAC4 soap_in__ns1__GetZhouQi(struct soap*, const char*, _ns1__GetZhouQi *, const char*);
SOAP_FMAC1 _ns1__GetZhouQi * SOAP_FMAC2 soap_instantiate__ns1__GetZhouQi(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetZhouQi * soap_new__ns1__GetZhouQi(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetZhouQi(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetZhouQi * soap_new_req__ns1__GetZhouQi(
	struct soap *soap)
{
	_ns1__GetZhouQi *_p = ::soap_new__ns1__GetZhouQi(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetZhouQi * soap_new_set__ns1__GetZhouQi(
	struct soap *soap)
{
	_ns1__GetZhouQi *_p = ::soap_new__ns1__GetZhouQi(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetZhouQi(struct soap *soap, _ns1__GetZhouQi const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetZhouQi", p->soap_type() == SOAP_TYPE__ns1__GetZhouQi ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetZhouQi(struct soap *soap, const char *URL, _ns1__GetZhouQi const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetZhouQi", p->soap_type() == SOAP_TYPE__ns1__GetZhouQi ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetZhouQi(struct soap *soap, const char *URL, _ns1__GetZhouQi const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetZhouQi", p->soap_type() == SOAP_TYPE__ns1__GetZhouQi ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetZhouQi * SOAP_FMAC4 soap_get__ns1__GetZhouQi(struct soap*, _ns1__GetZhouQi *, const char*, const char*);

inline int soap_read__ns1__GetZhouQi(struct soap *soap, _ns1__GetZhouQi *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetZhouQi(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetZhouQi(struct soap *soap, const char *URL, _ns1__GetZhouQi *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetZhouQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetZhouQi(struct soap *soap, _ns1__GetZhouQi *p)
{
	if (::soap_read__ns1__GetZhouQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__JiChaoQiResponse_DEFINED
#define SOAP_TYPE__ns1__JiChaoQiResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__JiChaoQiResponse(struct soap*, const char*, int, const _ns1__JiChaoQiResponse *, const char*);
SOAP_FMAC3 _ns1__JiChaoQiResponse * SOAP_FMAC4 soap_in__ns1__JiChaoQiResponse(struct soap*, const char*, _ns1__JiChaoQiResponse *, const char*);
SOAP_FMAC1 _ns1__JiChaoQiResponse * SOAP_FMAC2 soap_instantiate__ns1__JiChaoQiResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__JiChaoQiResponse * soap_new__ns1__JiChaoQiResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__JiChaoQiResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__JiChaoQiResponse * soap_new_req__ns1__JiChaoQiResponse(
	struct soap *soap)
{
	_ns1__JiChaoQiResponse *_p = ::soap_new__ns1__JiChaoQiResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__JiChaoQiResponse * soap_new_set__ns1__JiChaoQiResponse(
	struct soap *soap,
	char *JiChaoQiResult)
{
	_ns1__JiChaoQiResponse *_p = ::soap_new__ns1__JiChaoQiResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__JiChaoQiResponse::JiChaoQiResult = JiChaoQiResult;
	}
	return _p;
}

inline int soap_write__ns1__JiChaoQiResponse(struct soap *soap, _ns1__JiChaoQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:JiChaoQiResponse", p->soap_type() == SOAP_TYPE__ns1__JiChaoQiResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__JiChaoQiResponse(struct soap *soap, const char *URL, _ns1__JiChaoQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:JiChaoQiResponse", p->soap_type() == SOAP_TYPE__ns1__JiChaoQiResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__JiChaoQiResponse(struct soap *soap, const char *URL, _ns1__JiChaoQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:JiChaoQiResponse", p->soap_type() == SOAP_TYPE__ns1__JiChaoQiResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__JiChaoQiResponse * SOAP_FMAC4 soap_get__ns1__JiChaoQiResponse(struct soap*, _ns1__JiChaoQiResponse *, const char*, const char*);

inline int soap_read__ns1__JiChaoQiResponse(struct soap *soap, _ns1__JiChaoQiResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__JiChaoQiResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__JiChaoQiResponse(struct soap *soap, const char *URL, _ns1__JiChaoQiResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__JiChaoQiResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__JiChaoQiResponse(struct soap *soap, _ns1__JiChaoQiResponse *p)
{
	if (::soap_read__ns1__JiChaoQiResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__JiChaoQi_DEFINED
#define SOAP_TYPE__ns1__JiChaoQi_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__JiChaoQi(struct soap*, const char*, int, const _ns1__JiChaoQi *, const char*);
SOAP_FMAC3 _ns1__JiChaoQi * SOAP_FMAC4 soap_in__ns1__JiChaoQi(struct soap*, const char*, _ns1__JiChaoQi *, const char*);
SOAP_FMAC1 _ns1__JiChaoQi * SOAP_FMAC2 soap_instantiate__ns1__JiChaoQi(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__JiChaoQi * soap_new__ns1__JiChaoQi(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__JiChaoQi(soap, n, NULL, NULL, NULL);
}

inline _ns1__JiChaoQi * soap_new_req__ns1__JiChaoQi(
	struct soap *soap)
{
	_ns1__JiChaoQi *_p = ::soap_new__ns1__JiChaoQi(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__JiChaoQi * soap_new_set__ns1__JiChaoQi(
	struct soap *soap,
	char *type)
{
	_ns1__JiChaoQi *_p = ::soap_new__ns1__JiChaoQi(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__JiChaoQi::type = type;
	}
	return _p;
}

inline int soap_write__ns1__JiChaoQi(struct soap *soap, _ns1__JiChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:JiChaoQi", p->soap_type() == SOAP_TYPE__ns1__JiChaoQi ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__JiChaoQi(struct soap *soap, const char *URL, _ns1__JiChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:JiChaoQi", p->soap_type() == SOAP_TYPE__ns1__JiChaoQi ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__JiChaoQi(struct soap *soap, const char *URL, _ns1__JiChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:JiChaoQi", p->soap_type() == SOAP_TYPE__ns1__JiChaoQi ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__JiChaoQi * SOAP_FMAC4 soap_get__ns1__JiChaoQi(struct soap*, _ns1__JiChaoQi *, const char*, const char*);

inline int soap_read__ns1__JiChaoQi(struct soap *soap, _ns1__JiChaoQi *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__JiChaoQi(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__JiChaoQi(struct soap *soap, const char *URL, _ns1__JiChaoQi *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__JiChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__JiChaoQi(struct soap *soap, _ns1__JiChaoQi *p)
{
	if (::soap_read__ns1__JiChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ChaoQiResponse_DEFINED
#define SOAP_TYPE__ns1__ChaoQiResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChaoQiResponse(struct soap*, const char*, int, const _ns1__ChaoQiResponse *, const char*);
SOAP_FMAC3 _ns1__ChaoQiResponse * SOAP_FMAC4 soap_in__ns1__ChaoQiResponse(struct soap*, const char*, _ns1__ChaoQiResponse *, const char*);
SOAP_FMAC1 _ns1__ChaoQiResponse * SOAP_FMAC2 soap_instantiate__ns1__ChaoQiResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChaoQiResponse * soap_new__ns1__ChaoQiResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChaoQiResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChaoQiResponse * soap_new_req__ns1__ChaoQiResponse(
	struct soap *soap)
{
	_ns1__ChaoQiResponse *_p = ::soap_new__ns1__ChaoQiResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChaoQiResponse * soap_new_set__ns1__ChaoQiResponse(
	struct soap *soap,
	char *ChaoQiResult)
{
	_ns1__ChaoQiResponse *_p = ::soap_new__ns1__ChaoQiResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChaoQiResponse::ChaoQiResult = ChaoQiResult;
	}
	return _p;
}

inline int soap_write__ns1__ChaoQiResponse(struct soap *soap, _ns1__ChaoQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChaoQiResponse", p->soap_type() == SOAP_TYPE__ns1__ChaoQiResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChaoQiResponse(struct soap *soap, const char *URL, _ns1__ChaoQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChaoQiResponse", p->soap_type() == SOAP_TYPE__ns1__ChaoQiResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChaoQiResponse(struct soap *soap, const char *URL, _ns1__ChaoQiResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChaoQiResponse", p->soap_type() == SOAP_TYPE__ns1__ChaoQiResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChaoQiResponse * SOAP_FMAC4 soap_get__ns1__ChaoQiResponse(struct soap*, _ns1__ChaoQiResponse *, const char*, const char*);

inline int soap_read__ns1__ChaoQiResponse(struct soap *soap, _ns1__ChaoQiResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChaoQiResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChaoQiResponse(struct soap *soap, const char *URL, _ns1__ChaoQiResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChaoQiResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ChaoQiResponse(struct soap *soap, _ns1__ChaoQiResponse *p)
{
	if (::soap_read__ns1__ChaoQiResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ChaoQi_DEFINED
#define SOAP_TYPE__ns1__ChaoQi_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ChaoQi(struct soap*, const char*, int, const _ns1__ChaoQi *, const char*);
SOAP_FMAC3 _ns1__ChaoQi * SOAP_FMAC4 soap_in__ns1__ChaoQi(struct soap*, const char*, _ns1__ChaoQi *, const char*);
SOAP_FMAC1 _ns1__ChaoQi * SOAP_FMAC2 soap_instantiate__ns1__ChaoQi(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ChaoQi * soap_new__ns1__ChaoQi(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ChaoQi(soap, n, NULL, NULL, NULL);
}

inline _ns1__ChaoQi * soap_new_req__ns1__ChaoQi(
	struct soap *soap)
{
	_ns1__ChaoQi *_p = ::soap_new__ns1__ChaoQi(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ChaoQi * soap_new_set__ns1__ChaoQi(
	struct soap *soap,
	char *type)
{
	_ns1__ChaoQi *_p = ::soap_new__ns1__ChaoQi(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ChaoQi::type = type;
	}
	return _p;
}

inline int soap_write__ns1__ChaoQi(struct soap *soap, _ns1__ChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChaoQi", p->soap_type() == SOAP_TYPE__ns1__ChaoQi ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ChaoQi(struct soap *soap, const char *URL, _ns1__ChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChaoQi", p->soap_type() == SOAP_TYPE__ns1__ChaoQi ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ChaoQi(struct soap *soap, const char *URL, _ns1__ChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ChaoQi", p->soap_type() == SOAP_TYPE__ns1__ChaoQi ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ChaoQi * SOAP_FMAC4 soap_get__ns1__ChaoQi(struct soap*, _ns1__ChaoQi *, const char*, const char*);

inline int soap_read__ns1__ChaoQi(struct soap *soap, _ns1__ChaoQi *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ChaoQi(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ChaoQi(struct soap *soap, const char *URL, _ns1__ChaoQi *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ChaoQi(struct soap *soap, _ns1__ChaoQi *p)
{
	if (::soap_read__ns1__ChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__OpenMapExeResponse_DEFINED
#define SOAP_TYPE__ns1__OpenMapExeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__OpenMapExeResponse(struct soap*, const char*, int, const _ns1__OpenMapExeResponse *, const char*);
SOAP_FMAC3 _ns1__OpenMapExeResponse * SOAP_FMAC4 soap_in__ns1__OpenMapExeResponse(struct soap*, const char*, _ns1__OpenMapExeResponse *, const char*);
SOAP_FMAC1 _ns1__OpenMapExeResponse * SOAP_FMAC2 soap_instantiate__ns1__OpenMapExeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__OpenMapExeResponse * soap_new__ns1__OpenMapExeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__OpenMapExeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__OpenMapExeResponse * soap_new_req__ns1__OpenMapExeResponse(
	struct soap *soap)
{
	_ns1__OpenMapExeResponse *_p = ::soap_new__ns1__OpenMapExeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__OpenMapExeResponse * soap_new_set__ns1__OpenMapExeResponse(
	struct soap *soap,
	char *OpenMapExeResult)
{
	_ns1__OpenMapExeResponse *_p = ::soap_new__ns1__OpenMapExeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__OpenMapExeResponse::OpenMapExeResult = OpenMapExeResult;
	}
	return _p;
}

inline int soap_write__ns1__OpenMapExeResponse(struct soap *soap, _ns1__OpenMapExeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenMapExeResponse", p->soap_type() == SOAP_TYPE__ns1__OpenMapExeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__OpenMapExeResponse(struct soap *soap, const char *URL, _ns1__OpenMapExeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenMapExeResponse", p->soap_type() == SOAP_TYPE__ns1__OpenMapExeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__OpenMapExeResponse(struct soap *soap, const char *URL, _ns1__OpenMapExeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenMapExeResponse", p->soap_type() == SOAP_TYPE__ns1__OpenMapExeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__OpenMapExeResponse * SOAP_FMAC4 soap_get__ns1__OpenMapExeResponse(struct soap*, _ns1__OpenMapExeResponse *, const char*, const char*);

inline int soap_read__ns1__OpenMapExeResponse(struct soap *soap, _ns1__OpenMapExeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__OpenMapExeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__OpenMapExeResponse(struct soap *soap, const char *URL, _ns1__OpenMapExeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__OpenMapExeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__OpenMapExeResponse(struct soap *soap, _ns1__OpenMapExeResponse *p)
{
	if (::soap_read__ns1__OpenMapExeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__OpenMapExe_DEFINED
#define SOAP_TYPE__ns1__OpenMapExe_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__OpenMapExe(struct soap*, const char*, int, const _ns1__OpenMapExe *, const char*);
SOAP_FMAC3 _ns1__OpenMapExe * SOAP_FMAC4 soap_in__ns1__OpenMapExe(struct soap*, const char*, _ns1__OpenMapExe *, const char*);
SOAP_FMAC1 _ns1__OpenMapExe * SOAP_FMAC2 soap_instantiate__ns1__OpenMapExe(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__OpenMapExe * soap_new__ns1__OpenMapExe(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__OpenMapExe(soap, n, NULL, NULL, NULL);
}

inline _ns1__OpenMapExe * soap_new_req__ns1__OpenMapExe(
	struct soap *soap)
{
	_ns1__OpenMapExe *_p = ::soap_new__ns1__OpenMapExe(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__OpenMapExe * soap_new_set__ns1__OpenMapExe(
	struct soap *soap)
{
	_ns1__OpenMapExe *_p = ::soap_new__ns1__OpenMapExe(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__OpenMapExe(struct soap *soap, _ns1__OpenMapExe const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenMapExe", p->soap_type() == SOAP_TYPE__ns1__OpenMapExe ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__OpenMapExe(struct soap *soap, const char *URL, _ns1__OpenMapExe const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenMapExe", p->soap_type() == SOAP_TYPE__ns1__OpenMapExe ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__OpenMapExe(struct soap *soap, const char *URL, _ns1__OpenMapExe const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenMapExe", p->soap_type() == SOAP_TYPE__ns1__OpenMapExe ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__OpenMapExe * SOAP_FMAC4 soap_get__ns1__OpenMapExe(struct soap*, _ns1__OpenMapExe *, const char*, const char*);

inline int soap_read__ns1__OpenMapExe(struct soap *soap, _ns1__OpenMapExe *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__OpenMapExe(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__OpenMapExe(struct soap *soap, const char *URL, _ns1__OpenMapExe *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__OpenMapExe(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__OpenMapExe(struct soap *soap, _ns1__OpenMapExe *p)
{
	if (::soap_read__ns1__OpenMapExe(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetEmfPngFileResponse_DEFINED
#define SOAP_TYPE__ns1__GetEmfPngFileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetEmfPngFileResponse(struct soap*, const char*, int, const _ns1__GetEmfPngFileResponse *, const char*);
SOAP_FMAC3 _ns1__GetEmfPngFileResponse * SOAP_FMAC4 soap_in__ns1__GetEmfPngFileResponse(struct soap*, const char*, _ns1__GetEmfPngFileResponse *, const char*);
SOAP_FMAC1 _ns1__GetEmfPngFileResponse * SOAP_FMAC2 soap_instantiate__ns1__GetEmfPngFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetEmfPngFileResponse * soap_new__ns1__GetEmfPngFileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetEmfPngFileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetEmfPngFileResponse * soap_new_req__ns1__GetEmfPngFileResponse(
	struct soap *soap)
{
	_ns1__GetEmfPngFileResponse *_p = ::soap_new__ns1__GetEmfPngFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetEmfPngFileResponse * soap_new_set__ns1__GetEmfPngFileResponse(
	struct soap *soap,
	char *GetEmfPngFileResult)
{
	_ns1__GetEmfPngFileResponse *_p = ::soap_new__ns1__GetEmfPngFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetEmfPngFileResponse::GetEmfPngFileResult = GetEmfPngFileResult;
	}
	return _p;
}

inline int soap_write__ns1__GetEmfPngFileResponse(struct soap *soap, _ns1__GetEmfPngFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngFileResponse", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetEmfPngFileResponse(struct soap *soap, const char *URL, _ns1__GetEmfPngFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngFileResponse", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngFileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetEmfPngFileResponse(struct soap *soap, const char *URL, _ns1__GetEmfPngFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngFileResponse", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetEmfPngFileResponse * SOAP_FMAC4 soap_get__ns1__GetEmfPngFileResponse(struct soap*, _ns1__GetEmfPngFileResponse *, const char*, const char*);

inline int soap_read__ns1__GetEmfPngFileResponse(struct soap *soap, _ns1__GetEmfPngFileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetEmfPngFileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetEmfPngFileResponse(struct soap *soap, const char *URL, _ns1__GetEmfPngFileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetEmfPngFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetEmfPngFileResponse(struct soap *soap, _ns1__GetEmfPngFileResponse *p)
{
	if (::soap_read__ns1__GetEmfPngFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetEmfPngFile_DEFINED
#define SOAP_TYPE__ns1__GetEmfPngFile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetEmfPngFile(struct soap*, const char*, int, const _ns1__GetEmfPngFile *, const char*);
SOAP_FMAC3 _ns1__GetEmfPngFile * SOAP_FMAC4 soap_in__ns1__GetEmfPngFile(struct soap*, const char*, _ns1__GetEmfPngFile *, const char*);
SOAP_FMAC1 _ns1__GetEmfPngFile * SOAP_FMAC2 soap_instantiate__ns1__GetEmfPngFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetEmfPngFile * soap_new__ns1__GetEmfPngFile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetEmfPngFile(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetEmfPngFile * soap_new_req__ns1__GetEmfPngFile(
	struct soap *soap)
{
	_ns1__GetEmfPngFile *_p = ::soap_new__ns1__GetEmfPngFile(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetEmfPngFile * soap_new_set__ns1__GetEmfPngFile(
	struct soap *soap,
	char *mapid,
	char *pagename)
{
	_ns1__GetEmfPngFile *_p = ::soap_new__ns1__GetEmfPngFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetEmfPngFile::mapid = mapid;
		_p->_ns1__GetEmfPngFile::pagename = pagename;
	}
	return _p;
}

inline int soap_write__ns1__GetEmfPngFile(struct soap *soap, _ns1__GetEmfPngFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngFile", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngFile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetEmfPngFile(struct soap *soap, const char *URL, _ns1__GetEmfPngFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngFile", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngFile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetEmfPngFile(struct soap *soap, const char *URL, _ns1__GetEmfPngFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngFile", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngFile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetEmfPngFile * SOAP_FMAC4 soap_get__ns1__GetEmfPngFile(struct soap*, _ns1__GetEmfPngFile *, const char*, const char*);

inline int soap_read__ns1__GetEmfPngFile(struct soap *soap, _ns1__GetEmfPngFile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetEmfPngFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetEmfPngFile(struct soap *soap, const char *URL, _ns1__GetEmfPngFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetEmfPngFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetEmfPngFile(struct soap *soap, _ns1__GetEmfPngFile *p)
{
	if (::soap_read__ns1__GetEmfPngFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetEmfPngVerResponse_DEFINED
#define SOAP_TYPE__ns1__GetEmfPngVerResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetEmfPngVerResponse(struct soap*, const char*, int, const _ns1__GetEmfPngVerResponse *, const char*);
SOAP_FMAC3 _ns1__GetEmfPngVerResponse * SOAP_FMAC4 soap_in__ns1__GetEmfPngVerResponse(struct soap*, const char*, _ns1__GetEmfPngVerResponse *, const char*);
SOAP_FMAC1 _ns1__GetEmfPngVerResponse * SOAP_FMAC2 soap_instantiate__ns1__GetEmfPngVerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetEmfPngVerResponse * soap_new__ns1__GetEmfPngVerResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetEmfPngVerResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetEmfPngVerResponse * soap_new_req__ns1__GetEmfPngVerResponse(
	struct soap *soap)
{
	_ns1__GetEmfPngVerResponse *_p = ::soap_new__ns1__GetEmfPngVerResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetEmfPngVerResponse * soap_new_set__ns1__GetEmfPngVerResponse(
	struct soap *soap,
	char *GetEmfPngVerResult)
{
	_ns1__GetEmfPngVerResponse *_p = ::soap_new__ns1__GetEmfPngVerResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetEmfPngVerResponse::GetEmfPngVerResult = GetEmfPngVerResult;
	}
	return _p;
}

inline int soap_write__ns1__GetEmfPngVerResponse(struct soap *soap, _ns1__GetEmfPngVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngVerResponse", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngVerResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetEmfPngVerResponse(struct soap *soap, const char *URL, _ns1__GetEmfPngVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngVerResponse", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngVerResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetEmfPngVerResponse(struct soap *soap, const char *URL, _ns1__GetEmfPngVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngVerResponse", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngVerResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetEmfPngVerResponse * SOAP_FMAC4 soap_get__ns1__GetEmfPngVerResponse(struct soap*, _ns1__GetEmfPngVerResponse *, const char*, const char*);

inline int soap_read__ns1__GetEmfPngVerResponse(struct soap *soap, _ns1__GetEmfPngVerResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetEmfPngVerResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetEmfPngVerResponse(struct soap *soap, const char *URL, _ns1__GetEmfPngVerResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetEmfPngVerResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetEmfPngVerResponse(struct soap *soap, _ns1__GetEmfPngVerResponse *p)
{
	if (::soap_read__ns1__GetEmfPngVerResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetEmfPngVer_DEFINED
#define SOAP_TYPE__ns1__GetEmfPngVer_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetEmfPngVer(struct soap*, const char*, int, const _ns1__GetEmfPngVer *, const char*);
SOAP_FMAC3 _ns1__GetEmfPngVer * SOAP_FMAC4 soap_in__ns1__GetEmfPngVer(struct soap*, const char*, _ns1__GetEmfPngVer *, const char*);
SOAP_FMAC1 _ns1__GetEmfPngVer * SOAP_FMAC2 soap_instantiate__ns1__GetEmfPngVer(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetEmfPngVer * soap_new__ns1__GetEmfPngVer(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetEmfPngVer(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetEmfPngVer * soap_new_req__ns1__GetEmfPngVer(
	struct soap *soap)
{
	_ns1__GetEmfPngVer *_p = ::soap_new__ns1__GetEmfPngVer(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetEmfPngVer * soap_new_set__ns1__GetEmfPngVer(
	struct soap *soap)
{
	_ns1__GetEmfPngVer *_p = ::soap_new__ns1__GetEmfPngVer(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetEmfPngVer(struct soap *soap, _ns1__GetEmfPngVer const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngVer", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngVer ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetEmfPngVer(struct soap *soap, const char *URL, _ns1__GetEmfPngVer const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngVer", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngVer ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetEmfPngVer(struct soap *soap, const char *URL, _ns1__GetEmfPngVer const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetEmfPngVer", p->soap_type() == SOAP_TYPE__ns1__GetEmfPngVer ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetEmfPngVer * SOAP_FMAC4 soap_get__ns1__GetEmfPngVer(struct soap*, _ns1__GetEmfPngVer *, const char*, const char*);

inline int soap_read__ns1__GetEmfPngVer(struct soap *soap, _ns1__GetEmfPngVer *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetEmfPngVer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetEmfPngVer(struct soap *soap, const char *URL, _ns1__GetEmfPngVer *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetEmfPngVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetEmfPngVer(struct soap *soap, _ns1__GetEmfPngVer *p)
{
	if (::soap_read__ns1__GetEmfPngVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__OpenProcessResponse_DEFINED
#define SOAP_TYPE__ns1__OpenProcessResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__OpenProcessResponse(struct soap*, const char*, int, const _ns1__OpenProcessResponse *, const char*);
SOAP_FMAC3 _ns1__OpenProcessResponse * SOAP_FMAC4 soap_in__ns1__OpenProcessResponse(struct soap*, const char*, _ns1__OpenProcessResponse *, const char*);
SOAP_FMAC1 _ns1__OpenProcessResponse * SOAP_FMAC2 soap_instantiate__ns1__OpenProcessResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__OpenProcessResponse * soap_new__ns1__OpenProcessResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__OpenProcessResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__OpenProcessResponse * soap_new_req__ns1__OpenProcessResponse(
	struct soap *soap)
{
	_ns1__OpenProcessResponse *_p = ::soap_new__ns1__OpenProcessResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__OpenProcessResponse * soap_new_set__ns1__OpenProcessResponse(
	struct soap *soap,
	char *OpenProcessResult)
{
	_ns1__OpenProcessResponse *_p = ::soap_new__ns1__OpenProcessResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__OpenProcessResponse::OpenProcessResult = OpenProcessResult;
	}
	return _p;
}

inline int soap_write__ns1__OpenProcessResponse(struct soap *soap, _ns1__OpenProcessResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenProcessResponse", p->soap_type() == SOAP_TYPE__ns1__OpenProcessResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__OpenProcessResponse(struct soap *soap, const char *URL, _ns1__OpenProcessResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenProcessResponse", p->soap_type() == SOAP_TYPE__ns1__OpenProcessResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__OpenProcessResponse(struct soap *soap, const char *URL, _ns1__OpenProcessResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenProcessResponse", p->soap_type() == SOAP_TYPE__ns1__OpenProcessResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__OpenProcessResponse * SOAP_FMAC4 soap_get__ns1__OpenProcessResponse(struct soap*, _ns1__OpenProcessResponse *, const char*, const char*);

inline int soap_read__ns1__OpenProcessResponse(struct soap *soap, _ns1__OpenProcessResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__OpenProcessResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__OpenProcessResponse(struct soap *soap, const char *URL, _ns1__OpenProcessResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__OpenProcessResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__OpenProcessResponse(struct soap *soap, _ns1__OpenProcessResponse *p)
{
	if (::soap_read__ns1__OpenProcessResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__OpenProcess_DEFINED
#define SOAP_TYPE__ns1__OpenProcess_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__OpenProcess(struct soap*, const char*, int, const _ns1__OpenProcess *, const char*);
SOAP_FMAC3 _ns1__OpenProcess * SOAP_FMAC4 soap_in__ns1__OpenProcess(struct soap*, const char*, _ns1__OpenProcess *, const char*);
SOAP_FMAC1 _ns1__OpenProcess * SOAP_FMAC2 soap_instantiate__ns1__OpenProcess(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__OpenProcess * soap_new__ns1__OpenProcess(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__OpenProcess(soap, n, NULL, NULL, NULL);
}

inline _ns1__OpenProcess * soap_new_req__ns1__OpenProcess(
	struct soap *soap)
{
	_ns1__OpenProcess *_p = ::soap_new__ns1__OpenProcess(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__OpenProcess * soap_new_set__ns1__OpenProcess(
	struct soap *soap,
	char *name,
	char *param)
{
	_ns1__OpenProcess *_p = ::soap_new__ns1__OpenProcess(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__OpenProcess::name = name;
		_p->_ns1__OpenProcess::param = param;
	}
	return _p;
}

inline int soap_write__ns1__OpenProcess(struct soap *soap, _ns1__OpenProcess const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenProcess", p->soap_type() == SOAP_TYPE__ns1__OpenProcess ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__OpenProcess(struct soap *soap, const char *URL, _ns1__OpenProcess const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenProcess", p->soap_type() == SOAP_TYPE__ns1__OpenProcess ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__OpenProcess(struct soap *soap, const char *URL, _ns1__OpenProcess const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:OpenProcess", p->soap_type() == SOAP_TYPE__ns1__OpenProcess ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__OpenProcess * SOAP_FMAC4 soap_get__ns1__OpenProcess(struct soap*, _ns1__OpenProcess *, const char*, const char*);

inline int soap_read__ns1__OpenProcess(struct soap *soap, _ns1__OpenProcess *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__OpenProcess(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__OpenProcess(struct soap *soap, const char *URL, _ns1__OpenProcess *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__OpenProcess(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__OpenProcess(struct soap *soap, _ns1__OpenProcess *p)
{
	if (::soap_read__ns1__OpenProcess(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMangeMapUpdateResponse_DEFINED
#define SOAP_TYPE__ns1__GetMangeMapUpdateResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMangeMapUpdateResponse(struct soap*, const char*, int, const _ns1__GetMangeMapUpdateResponse *, const char*);
SOAP_FMAC3 _ns1__GetMangeMapUpdateResponse * SOAP_FMAC4 soap_in__ns1__GetMangeMapUpdateResponse(struct soap*, const char*, _ns1__GetMangeMapUpdateResponse *, const char*);
SOAP_FMAC1 _ns1__GetMangeMapUpdateResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMangeMapUpdateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMangeMapUpdateResponse * soap_new__ns1__GetMangeMapUpdateResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMangeMapUpdateResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMangeMapUpdateResponse * soap_new_req__ns1__GetMangeMapUpdateResponse(
	struct soap *soap)
{
	_ns1__GetMangeMapUpdateResponse *_p = ::soap_new__ns1__GetMangeMapUpdateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMangeMapUpdateResponse * soap_new_set__ns1__GetMangeMapUpdateResponse(
	struct soap *soap,
	char *GetMangeMapUpdateResult)
{
	_ns1__GetMangeMapUpdateResponse *_p = ::soap_new__ns1__GetMangeMapUpdateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMangeMapUpdateResponse::GetMangeMapUpdateResult = GetMangeMapUpdateResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMangeMapUpdateResponse(struct soap *soap, _ns1__GetMangeMapUpdateResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeMapUpdateResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeMapUpdateResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMangeMapUpdateResponse(struct soap *soap, const char *URL, _ns1__GetMangeMapUpdateResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeMapUpdateResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeMapUpdateResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMangeMapUpdateResponse(struct soap *soap, const char *URL, _ns1__GetMangeMapUpdateResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeMapUpdateResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeMapUpdateResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMangeMapUpdateResponse * SOAP_FMAC4 soap_get__ns1__GetMangeMapUpdateResponse(struct soap*, _ns1__GetMangeMapUpdateResponse *, const char*, const char*);

inline int soap_read__ns1__GetMangeMapUpdateResponse(struct soap *soap, _ns1__GetMangeMapUpdateResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMangeMapUpdateResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMangeMapUpdateResponse(struct soap *soap, const char *URL, _ns1__GetMangeMapUpdateResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMangeMapUpdateResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMangeMapUpdateResponse(struct soap *soap, _ns1__GetMangeMapUpdateResponse *p)
{
	if (::soap_read__ns1__GetMangeMapUpdateResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMangeMapUpdate_DEFINED
#define SOAP_TYPE__ns1__GetMangeMapUpdate_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMangeMapUpdate(struct soap*, const char*, int, const _ns1__GetMangeMapUpdate *, const char*);
SOAP_FMAC3 _ns1__GetMangeMapUpdate * SOAP_FMAC4 soap_in__ns1__GetMangeMapUpdate(struct soap*, const char*, _ns1__GetMangeMapUpdate *, const char*);
SOAP_FMAC1 _ns1__GetMangeMapUpdate * SOAP_FMAC2 soap_instantiate__ns1__GetMangeMapUpdate(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMangeMapUpdate * soap_new__ns1__GetMangeMapUpdate(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMangeMapUpdate(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMangeMapUpdate * soap_new_req__ns1__GetMangeMapUpdate(
	struct soap *soap)
{
	_ns1__GetMangeMapUpdate *_p = ::soap_new__ns1__GetMangeMapUpdate(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMangeMapUpdate * soap_new_set__ns1__GetMangeMapUpdate(
	struct soap *soap,
	char *dname)
{
	_ns1__GetMangeMapUpdate *_p = ::soap_new__ns1__GetMangeMapUpdate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMangeMapUpdate::dname = dname;
	}
	return _p;
}

inline int soap_write__ns1__GetMangeMapUpdate(struct soap *soap, _ns1__GetMangeMapUpdate const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeMapUpdate", p->soap_type() == SOAP_TYPE__ns1__GetMangeMapUpdate ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMangeMapUpdate(struct soap *soap, const char *URL, _ns1__GetMangeMapUpdate const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeMapUpdate", p->soap_type() == SOAP_TYPE__ns1__GetMangeMapUpdate ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMangeMapUpdate(struct soap *soap, const char *URL, _ns1__GetMangeMapUpdate const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeMapUpdate", p->soap_type() == SOAP_TYPE__ns1__GetMangeMapUpdate ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMangeMapUpdate * SOAP_FMAC4 soap_get__ns1__GetMangeMapUpdate(struct soap*, _ns1__GetMangeMapUpdate *, const char*, const char*);

inline int soap_read__ns1__GetMangeMapUpdate(struct soap *soap, _ns1__GetMangeMapUpdate *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMangeMapUpdate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMangeMapUpdate(struct soap *soap, const char *URL, _ns1__GetMangeMapUpdate *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMangeMapUpdate(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMangeMapUpdate(struct soap *soap, _ns1__GetMangeMapUpdate *p)
{
	if (::soap_read__ns1__GetMangeMapUpdate(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitMapVerResponse_DEFINED
#define SOAP_TYPE__ns1__GetUnitMapVerResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitMapVerResponse(struct soap*, const char*, int, const _ns1__GetUnitMapVerResponse *, const char*);
SOAP_FMAC3 _ns1__GetUnitMapVerResponse * SOAP_FMAC4 soap_in__ns1__GetUnitMapVerResponse(struct soap*, const char*, _ns1__GetUnitMapVerResponse *, const char*);
SOAP_FMAC1 _ns1__GetUnitMapVerResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUnitMapVerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitMapVerResponse * soap_new__ns1__GetUnitMapVerResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitMapVerResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitMapVerResponse * soap_new_req__ns1__GetUnitMapVerResponse(
	struct soap *soap)
{
	_ns1__GetUnitMapVerResponse *_p = ::soap_new__ns1__GetUnitMapVerResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetUnitMapVerResponse * soap_new_set__ns1__GetUnitMapVerResponse(
	struct soap *soap,
	char *GetUnitMapVerResult)
{
	_ns1__GetUnitMapVerResponse *_p = ::soap_new__ns1__GetUnitMapVerResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitMapVerResponse::GetUnitMapVerResult = GetUnitMapVerResult;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitMapVerResponse(struct soap *soap, _ns1__GetUnitMapVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitMapVerResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitMapVerResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitMapVerResponse(struct soap *soap, const char *URL, _ns1__GetUnitMapVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitMapVerResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitMapVerResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitMapVerResponse(struct soap *soap, const char *URL, _ns1__GetUnitMapVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitMapVerResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitMapVerResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitMapVerResponse * SOAP_FMAC4 soap_get__ns1__GetUnitMapVerResponse(struct soap*, _ns1__GetUnitMapVerResponse *, const char*, const char*);

inline int soap_read__ns1__GetUnitMapVerResponse(struct soap *soap, _ns1__GetUnitMapVerResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitMapVerResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitMapVerResponse(struct soap *soap, const char *URL, _ns1__GetUnitMapVerResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitMapVerResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitMapVerResponse(struct soap *soap, _ns1__GetUnitMapVerResponse *p)
{
	if (::soap_read__ns1__GetUnitMapVerResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitMapVer_DEFINED
#define SOAP_TYPE__ns1__GetUnitMapVer_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitMapVer(struct soap*, const char*, int, const _ns1__GetUnitMapVer *, const char*);
SOAP_FMAC3 _ns1__GetUnitMapVer * SOAP_FMAC4 soap_in__ns1__GetUnitMapVer(struct soap*, const char*, _ns1__GetUnitMapVer *, const char*);
SOAP_FMAC1 _ns1__GetUnitMapVer * SOAP_FMAC2 soap_instantiate__ns1__GetUnitMapVer(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitMapVer * soap_new__ns1__GetUnitMapVer(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitMapVer(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitMapVer * soap_new_req__ns1__GetUnitMapVer(
	struct soap *soap)
{
	_ns1__GetUnitMapVer *_p = ::soap_new__ns1__GetUnitMapVer(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetUnitMapVer * soap_new_set__ns1__GetUnitMapVer(
	struct soap *soap,
	char *dwname,
	char *unitname)
{
	_ns1__GetUnitMapVer *_p = ::soap_new__ns1__GetUnitMapVer(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitMapVer::dwname = dwname;
		_p->_ns1__GetUnitMapVer::unitname = unitname;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitMapVer(struct soap *soap, _ns1__GetUnitMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitMapVer", p->soap_type() == SOAP_TYPE__ns1__GetUnitMapVer ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitMapVer(struct soap *soap, const char *URL, _ns1__GetUnitMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitMapVer", p->soap_type() == SOAP_TYPE__ns1__GetUnitMapVer ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitMapVer(struct soap *soap, const char *URL, _ns1__GetUnitMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitMapVer", p->soap_type() == SOAP_TYPE__ns1__GetUnitMapVer ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitMapVer * SOAP_FMAC4 soap_get__ns1__GetUnitMapVer(struct soap*, _ns1__GetUnitMapVer *, const char*, const char*);

inline int soap_read__ns1__GetUnitMapVer(struct soap *soap, _ns1__GetUnitMapVer *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitMapVer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitMapVer(struct soap *soap, const char *URL, _ns1__GetUnitMapVer *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitMapVer(struct soap *soap, _ns1__GetUnitMapVer *p)
{
	if (::soap_read__ns1__GetUnitMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__UpdateGzclMapResponse_DEFINED
#define SOAP_TYPE__ns1__UpdateGzclMapResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateGzclMapResponse(struct soap*, const char*, int, const _ns1__UpdateGzclMapResponse *, const char*);
SOAP_FMAC3 _ns1__UpdateGzclMapResponse * SOAP_FMAC4 soap_in__ns1__UpdateGzclMapResponse(struct soap*, const char*, _ns1__UpdateGzclMapResponse *, const char*);
SOAP_FMAC1 _ns1__UpdateGzclMapResponse * SOAP_FMAC2 soap_instantiate__ns1__UpdateGzclMapResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateGzclMapResponse * soap_new__ns1__UpdateGzclMapResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__UpdateGzclMapResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__UpdateGzclMapResponse * soap_new_req__ns1__UpdateGzclMapResponse(
	struct soap *soap)
{
	_ns1__UpdateGzclMapResponse *_p = ::soap_new__ns1__UpdateGzclMapResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__UpdateGzclMapResponse * soap_new_set__ns1__UpdateGzclMapResponse(
	struct soap *soap,
	char *UpdateGzclMapResult)
{
	_ns1__UpdateGzclMapResponse *_p = ::soap_new__ns1__UpdateGzclMapResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpdateGzclMapResponse::UpdateGzclMapResult = UpdateGzclMapResult;
	}
	return _p;
}

inline int soap_write__ns1__UpdateGzclMapResponse(struct soap *soap, _ns1__UpdateGzclMapResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpdateGzclMapResponse", p->soap_type() == SOAP_TYPE__ns1__UpdateGzclMapResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__UpdateGzclMapResponse(struct soap *soap, const char *URL, _ns1__UpdateGzclMapResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpdateGzclMapResponse", p->soap_type() == SOAP_TYPE__ns1__UpdateGzclMapResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__UpdateGzclMapResponse(struct soap *soap, const char *URL, _ns1__UpdateGzclMapResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpdateGzclMapResponse", p->soap_type() == SOAP_TYPE__ns1__UpdateGzclMapResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__UpdateGzclMapResponse * SOAP_FMAC4 soap_get__ns1__UpdateGzclMapResponse(struct soap*, _ns1__UpdateGzclMapResponse *, const char*, const char*);

inline int soap_read__ns1__UpdateGzclMapResponse(struct soap *soap, _ns1__UpdateGzclMapResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__UpdateGzclMapResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__UpdateGzclMapResponse(struct soap *soap, const char *URL, _ns1__UpdateGzclMapResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__UpdateGzclMapResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__UpdateGzclMapResponse(struct soap *soap, _ns1__UpdateGzclMapResponse *p)
{
	if (::soap_read__ns1__UpdateGzclMapResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__UpdateGzclMap_DEFINED
#define SOAP_TYPE__ns1__UpdateGzclMap_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpdateGzclMap(struct soap*, const char*, int, const _ns1__UpdateGzclMap *, const char*);
SOAP_FMAC3 _ns1__UpdateGzclMap * SOAP_FMAC4 soap_in__ns1__UpdateGzclMap(struct soap*, const char*, _ns1__UpdateGzclMap *, const char*);
SOAP_FMAC1 _ns1__UpdateGzclMap * SOAP_FMAC2 soap_instantiate__ns1__UpdateGzclMap(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpdateGzclMap * soap_new__ns1__UpdateGzclMap(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__UpdateGzclMap(soap, n, NULL, NULL, NULL);
}

inline _ns1__UpdateGzclMap * soap_new_req__ns1__UpdateGzclMap(
	struct soap *soap)
{
	_ns1__UpdateGzclMap *_p = ::soap_new__ns1__UpdateGzclMap(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__UpdateGzclMap * soap_new_set__ns1__UpdateGzclMap(
	struct soap *soap,
	char *xml)
{
	_ns1__UpdateGzclMap *_p = ::soap_new__ns1__UpdateGzclMap(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpdateGzclMap::xml = xml;
	}
	return _p;
}

inline int soap_write__ns1__UpdateGzclMap(struct soap *soap, _ns1__UpdateGzclMap const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpdateGzclMap", p->soap_type() == SOAP_TYPE__ns1__UpdateGzclMap ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__UpdateGzclMap(struct soap *soap, const char *URL, _ns1__UpdateGzclMap const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpdateGzclMap", p->soap_type() == SOAP_TYPE__ns1__UpdateGzclMap ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__UpdateGzclMap(struct soap *soap, const char *URL, _ns1__UpdateGzclMap const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpdateGzclMap", p->soap_type() == SOAP_TYPE__ns1__UpdateGzclMap ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__UpdateGzclMap * SOAP_FMAC4 soap_get__ns1__UpdateGzclMap(struct soap*, _ns1__UpdateGzclMap *, const char*, const char*);

inline int soap_read__ns1__UpdateGzclMap(struct soap *soap, _ns1__UpdateGzclMap *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__UpdateGzclMap(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__UpdateGzclMap(struct soap *soap, const char *URL, _ns1__UpdateGzclMap *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__UpdateGzclMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__UpdateGzclMap(struct soap *soap, _ns1__UpdateGzclMap *p)
{
	if (::soap_read__ns1__UpdateGzclMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapListTimeResponse_DEFINED
#define SOAP_TYPE__ns1__GetMapListTimeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapListTimeResponse(struct soap*, const char*, int, const _ns1__GetMapListTimeResponse *, const char*);
SOAP_FMAC3 _ns1__GetMapListTimeResponse * SOAP_FMAC4 soap_in__ns1__GetMapListTimeResponse(struct soap*, const char*, _ns1__GetMapListTimeResponse *, const char*);
SOAP_FMAC1 _ns1__GetMapListTimeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMapListTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapListTimeResponse * soap_new__ns1__GetMapListTimeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapListTimeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapListTimeResponse * soap_new_req__ns1__GetMapListTimeResponse(
	struct soap *soap)
{
	_ns1__GetMapListTimeResponse *_p = ::soap_new__ns1__GetMapListTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapListTimeResponse * soap_new_set__ns1__GetMapListTimeResponse(
	struct soap *soap,
	char *GetMapListTimeResult)
{
	_ns1__GetMapListTimeResponse *_p = ::soap_new__ns1__GetMapListTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapListTimeResponse::GetMapListTimeResult = GetMapListTimeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMapListTimeResponse(struct soap *soap, _ns1__GetMapListTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapListTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapListTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapListTimeResponse(struct soap *soap, const char *URL, _ns1__GetMapListTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapListTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapListTimeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapListTimeResponse(struct soap *soap, const char *URL, _ns1__GetMapListTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapListTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapListTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapListTimeResponse * SOAP_FMAC4 soap_get__ns1__GetMapListTimeResponse(struct soap*, _ns1__GetMapListTimeResponse *, const char*, const char*);

inline int soap_read__ns1__GetMapListTimeResponse(struct soap *soap, _ns1__GetMapListTimeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapListTimeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapListTimeResponse(struct soap *soap, const char *URL, _ns1__GetMapListTimeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapListTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapListTimeResponse(struct soap *soap, _ns1__GetMapListTimeResponse *p)
{
	if (::soap_read__ns1__GetMapListTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapListTime_DEFINED
#define SOAP_TYPE__ns1__GetMapListTime_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapListTime(struct soap*, const char*, int, const _ns1__GetMapListTime *, const char*);
SOAP_FMAC3 _ns1__GetMapListTime * SOAP_FMAC4 soap_in__ns1__GetMapListTime(struct soap*, const char*, _ns1__GetMapListTime *, const char*);
SOAP_FMAC1 _ns1__GetMapListTime * SOAP_FMAC2 soap_instantiate__ns1__GetMapListTime(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapListTime * soap_new__ns1__GetMapListTime(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapListTime(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapListTime * soap_new_req__ns1__GetMapListTime(
	struct soap *soap)
{
	_ns1__GetMapListTime *_p = ::soap_new__ns1__GetMapListTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapListTime * soap_new_set__ns1__GetMapListTime(
	struct soap *soap,
	char *uptime,
	char *dwname,
	char *filename)
{
	_ns1__GetMapListTime *_p = ::soap_new__ns1__GetMapListTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapListTime::uptime = uptime;
		_p->_ns1__GetMapListTime::dwname = dwname;
		_p->_ns1__GetMapListTime::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMapListTime(struct soap *soap, _ns1__GetMapListTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapListTime", p->soap_type() == SOAP_TYPE__ns1__GetMapListTime ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapListTime(struct soap *soap, const char *URL, _ns1__GetMapListTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapListTime", p->soap_type() == SOAP_TYPE__ns1__GetMapListTime ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapListTime(struct soap *soap, const char *URL, _ns1__GetMapListTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapListTime", p->soap_type() == SOAP_TYPE__ns1__GetMapListTime ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapListTime * SOAP_FMAC4 soap_get__ns1__GetMapListTime(struct soap*, _ns1__GetMapListTime *, const char*, const char*);

inline int soap_read__ns1__GetMapListTime(struct soap *soap, _ns1__GetMapListTime *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapListTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapListTime(struct soap *soap, const char *URL, _ns1__GetMapListTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapListTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapListTime(struct soap *soap, _ns1__GetMapListTime *p)
{
	if (::soap_read__ns1__GetMapListTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ServerLevelResponse_DEFINED
#define SOAP_TYPE__ns1__ServerLevelResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ServerLevelResponse(struct soap*, const char*, int, const _ns1__ServerLevelResponse *, const char*);
SOAP_FMAC3 _ns1__ServerLevelResponse * SOAP_FMAC4 soap_in__ns1__ServerLevelResponse(struct soap*, const char*, _ns1__ServerLevelResponse *, const char*);
SOAP_FMAC1 _ns1__ServerLevelResponse * SOAP_FMAC2 soap_instantiate__ns1__ServerLevelResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ServerLevelResponse * soap_new__ns1__ServerLevelResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ServerLevelResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ServerLevelResponse * soap_new_req__ns1__ServerLevelResponse(
	struct soap *soap)
{
	_ns1__ServerLevelResponse *_p = ::soap_new__ns1__ServerLevelResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ServerLevelResponse * soap_new_set__ns1__ServerLevelResponse(
	struct soap *soap,
	char *ServerLevelResult)
{
	_ns1__ServerLevelResponse *_p = ::soap_new__ns1__ServerLevelResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ServerLevelResponse::ServerLevelResult = ServerLevelResult;
	}
	return _p;
}

inline int soap_write__ns1__ServerLevelResponse(struct soap *soap, _ns1__ServerLevelResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ServerLevelResponse", p->soap_type() == SOAP_TYPE__ns1__ServerLevelResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ServerLevelResponse(struct soap *soap, const char *URL, _ns1__ServerLevelResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ServerLevelResponse", p->soap_type() == SOAP_TYPE__ns1__ServerLevelResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ServerLevelResponse(struct soap *soap, const char *URL, _ns1__ServerLevelResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ServerLevelResponse", p->soap_type() == SOAP_TYPE__ns1__ServerLevelResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ServerLevelResponse * SOAP_FMAC4 soap_get__ns1__ServerLevelResponse(struct soap*, _ns1__ServerLevelResponse *, const char*, const char*);

inline int soap_read__ns1__ServerLevelResponse(struct soap *soap, _ns1__ServerLevelResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ServerLevelResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ServerLevelResponse(struct soap *soap, const char *URL, _ns1__ServerLevelResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ServerLevelResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ServerLevelResponse(struct soap *soap, _ns1__ServerLevelResponse *p)
{
	if (::soap_read__ns1__ServerLevelResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ServerLevel_DEFINED
#define SOAP_TYPE__ns1__ServerLevel_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ServerLevel(struct soap*, const char*, int, const _ns1__ServerLevel *, const char*);
SOAP_FMAC3 _ns1__ServerLevel * SOAP_FMAC4 soap_in__ns1__ServerLevel(struct soap*, const char*, _ns1__ServerLevel *, const char*);
SOAP_FMAC1 _ns1__ServerLevel * SOAP_FMAC2 soap_instantiate__ns1__ServerLevel(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ServerLevel * soap_new__ns1__ServerLevel(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ServerLevel(soap, n, NULL, NULL, NULL);
}

inline _ns1__ServerLevel * soap_new_req__ns1__ServerLevel(
	struct soap *soap)
{
	_ns1__ServerLevel *_p = ::soap_new__ns1__ServerLevel(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ServerLevel * soap_new_set__ns1__ServerLevel(
	struct soap *soap)
{
	_ns1__ServerLevel *_p = ::soap_new__ns1__ServerLevel(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__ServerLevel(struct soap *soap, _ns1__ServerLevel const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ServerLevel", p->soap_type() == SOAP_TYPE__ns1__ServerLevel ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ServerLevel(struct soap *soap, const char *URL, _ns1__ServerLevel const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ServerLevel", p->soap_type() == SOAP_TYPE__ns1__ServerLevel ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ServerLevel(struct soap *soap, const char *URL, _ns1__ServerLevel const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ServerLevel", p->soap_type() == SOAP_TYPE__ns1__ServerLevel ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ServerLevel * SOAP_FMAC4 soap_get__ns1__ServerLevel(struct soap*, _ns1__ServerLevel *, const char*, const char*);

inline int soap_read__ns1__ServerLevel(struct soap *soap, _ns1__ServerLevel *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ServerLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ServerLevel(struct soap *soap, const char *URL, _ns1__ServerLevel *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ServerLevel(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ServerLevel(struct soap *soap, _ns1__ServerLevel *p)
{
	if (::soap_read__ns1__ServerLevel(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetTableDataResponse_DEFINED
#define SOAP_TYPE__ns1__GetTableDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetTableDataResponse(struct soap*, const char*, int, const _ns1__GetTableDataResponse *, const char*);
SOAP_FMAC3 _ns1__GetTableDataResponse * SOAP_FMAC4 soap_in__ns1__GetTableDataResponse(struct soap*, const char*, _ns1__GetTableDataResponse *, const char*);
SOAP_FMAC1 _ns1__GetTableDataResponse * SOAP_FMAC2 soap_instantiate__ns1__GetTableDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetTableDataResponse * soap_new__ns1__GetTableDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetTableDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetTableDataResponse * soap_new_req__ns1__GetTableDataResponse(
	struct soap *soap)
{
	_ns1__GetTableDataResponse *_p = ::soap_new__ns1__GetTableDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetTableDataResponse * soap_new_set__ns1__GetTableDataResponse(
	struct soap *soap,
	char *GetTableDataResult)
{
	_ns1__GetTableDataResponse *_p = ::soap_new__ns1__GetTableDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetTableDataResponse::GetTableDataResult = GetTableDataResult;
	}
	return _p;
}

inline int soap_write__ns1__GetTableDataResponse(struct soap *soap, _ns1__GetTableDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTableDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetTableDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetTableDataResponse(struct soap *soap, const char *URL, _ns1__GetTableDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTableDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetTableDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetTableDataResponse(struct soap *soap, const char *URL, _ns1__GetTableDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTableDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetTableDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetTableDataResponse * SOAP_FMAC4 soap_get__ns1__GetTableDataResponse(struct soap*, _ns1__GetTableDataResponse *, const char*, const char*);

inline int soap_read__ns1__GetTableDataResponse(struct soap *soap, _ns1__GetTableDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetTableDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetTableDataResponse(struct soap *soap, const char *URL, _ns1__GetTableDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetTableDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetTableDataResponse(struct soap *soap, _ns1__GetTableDataResponse *p)
{
	if (::soap_read__ns1__GetTableDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetTableData_DEFINED
#define SOAP_TYPE__ns1__GetTableData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetTableData(struct soap*, const char*, int, const _ns1__GetTableData *, const char*);
SOAP_FMAC3 _ns1__GetTableData * SOAP_FMAC4 soap_in__ns1__GetTableData(struct soap*, const char*, _ns1__GetTableData *, const char*);
SOAP_FMAC1 _ns1__GetTableData * SOAP_FMAC2 soap_instantiate__ns1__GetTableData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetTableData * soap_new__ns1__GetTableData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetTableData(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetTableData * soap_new_req__ns1__GetTableData(
	struct soap *soap)
{
	_ns1__GetTableData *_p = ::soap_new__ns1__GetTableData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetTableData * soap_new_set__ns1__GetTableData(
	struct soap *soap,
	char *tabname,
	char *filename)
{
	_ns1__GetTableData *_p = ::soap_new__ns1__GetTableData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetTableData::tabname = tabname;
		_p->_ns1__GetTableData::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetTableData(struct soap *soap, _ns1__GetTableData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTableData", p->soap_type() == SOAP_TYPE__ns1__GetTableData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetTableData(struct soap *soap, const char *URL, _ns1__GetTableData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTableData", p->soap_type() == SOAP_TYPE__ns1__GetTableData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetTableData(struct soap *soap, const char *URL, _ns1__GetTableData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTableData", p->soap_type() == SOAP_TYPE__ns1__GetTableData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetTableData * SOAP_FMAC4 soap_get__ns1__GetTableData(struct soap*, _ns1__GetTableData *, const char*, const char*);

inline int soap_read__ns1__GetTableData(struct soap *soap, _ns1__GetTableData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetTableData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetTableData(struct soap *soap, const char *URL, _ns1__GetTableData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetTableData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetTableData(struct soap *soap, _ns1__GetTableData *p)
{
	if (::soap_read__ns1__GetTableData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapResponse_DEFINED
#define SOAP_TYPE__ns1__GetMapResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapResponse(struct soap*, const char*, int, const _ns1__GetMapResponse *, const char*);
SOAP_FMAC3 _ns1__GetMapResponse * SOAP_FMAC4 soap_in__ns1__GetMapResponse(struct soap*, const char*, _ns1__GetMapResponse *, const char*);
SOAP_FMAC1 _ns1__GetMapResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMapResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapResponse * soap_new__ns1__GetMapResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapResponse * soap_new_req__ns1__GetMapResponse(
	struct soap *soap)
{
	_ns1__GetMapResponse *_p = ::soap_new__ns1__GetMapResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapResponse * soap_new_set__ns1__GetMapResponse(
	struct soap *soap,
	char *GetMapResult)
{
	_ns1__GetMapResponse *_p = ::soap_new__ns1__GetMapResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapResponse::GetMapResult = GetMapResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMapResponse(struct soap *soap, _ns1__GetMapResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapResponse(struct soap *soap, const char *URL, _ns1__GetMapResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapResponse(struct soap *soap, const char *URL, _ns1__GetMapResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapResponse * SOAP_FMAC4 soap_get__ns1__GetMapResponse(struct soap*, _ns1__GetMapResponse *, const char*, const char*);

inline int soap_read__ns1__GetMapResponse(struct soap *soap, _ns1__GetMapResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapResponse(struct soap *soap, const char *URL, _ns1__GetMapResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapResponse(struct soap *soap, _ns1__GetMapResponse *p)
{
	if (::soap_read__ns1__GetMapResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMap_DEFINED
#define SOAP_TYPE__ns1__GetMap_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMap(struct soap*, const char*, int, const _ns1__GetMap *, const char*);
SOAP_FMAC3 _ns1__GetMap * SOAP_FMAC4 soap_in__ns1__GetMap(struct soap*, const char*, _ns1__GetMap *, const char*);
SOAP_FMAC1 _ns1__GetMap * SOAP_FMAC2 soap_instantiate__ns1__GetMap(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMap * soap_new__ns1__GetMap(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMap(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMap * soap_new_req__ns1__GetMap(
	struct soap *soap)
{
	_ns1__GetMap *_p = ::soap_new__ns1__GetMap(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMap * soap_new_set__ns1__GetMap(
	struct soap *soap,
	char *filename)
{
	_ns1__GetMap *_p = ::soap_new__ns1__GetMap(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMap::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMap(struct soap *soap, _ns1__GetMap const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMap", p->soap_type() == SOAP_TYPE__ns1__GetMap ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMap(struct soap *soap, const char *URL, _ns1__GetMap const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMap", p->soap_type() == SOAP_TYPE__ns1__GetMap ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMap(struct soap *soap, const char *URL, _ns1__GetMap const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMap", p->soap_type() == SOAP_TYPE__ns1__GetMap ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMap * SOAP_FMAC4 soap_get__ns1__GetMap(struct soap*, _ns1__GetMap *, const char*, const char*);

inline int soap_read__ns1__GetMap(struct soap *soap, _ns1__GetMap *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMap(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMap(struct soap *soap, const char *URL, _ns1__GetMap *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMap(struct soap *soap, _ns1__GetMap *p)
{
	if (::soap_read__ns1__GetMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__CheckMapVerResponse_DEFINED
#define SOAP_TYPE__ns1__CheckMapVerResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckMapVerResponse(struct soap*, const char*, int, const _ns1__CheckMapVerResponse *, const char*);
SOAP_FMAC3 _ns1__CheckMapVerResponse * SOAP_FMAC4 soap_in__ns1__CheckMapVerResponse(struct soap*, const char*, _ns1__CheckMapVerResponse *, const char*);
SOAP_FMAC1 _ns1__CheckMapVerResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckMapVerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckMapVerResponse * soap_new__ns1__CheckMapVerResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CheckMapVerResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__CheckMapVerResponse * soap_new_req__ns1__CheckMapVerResponse(
	struct soap *soap)
{
	_ns1__CheckMapVerResponse *_p = ::soap_new__ns1__CheckMapVerResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CheckMapVerResponse * soap_new_set__ns1__CheckMapVerResponse(
	struct soap *soap,
	char *CheckMapVerResult)
{
	_ns1__CheckMapVerResponse *_p = ::soap_new__ns1__CheckMapVerResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckMapVerResponse::CheckMapVerResult = CheckMapVerResult;
	}
	return _p;
}

inline int soap_write__ns1__CheckMapVerResponse(struct soap *soap, _ns1__CheckMapVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckMapVerResponse", p->soap_type() == SOAP_TYPE__ns1__CheckMapVerResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CheckMapVerResponse(struct soap *soap, const char *URL, _ns1__CheckMapVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckMapVerResponse", p->soap_type() == SOAP_TYPE__ns1__CheckMapVerResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CheckMapVerResponse(struct soap *soap, const char *URL, _ns1__CheckMapVerResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckMapVerResponse", p->soap_type() == SOAP_TYPE__ns1__CheckMapVerResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CheckMapVerResponse * SOAP_FMAC4 soap_get__ns1__CheckMapVerResponse(struct soap*, _ns1__CheckMapVerResponse *, const char*, const char*);

inline int soap_read__ns1__CheckMapVerResponse(struct soap *soap, _ns1__CheckMapVerResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CheckMapVerResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CheckMapVerResponse(struct soap *soap, const char *URL, _ns1__CheckMapVerResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CheckMapVerResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__CheckMapVerResponse(struct soap *soap, _ns1__CheckMapVerResponse *p)
{
	if (::soap_read__ns1__CheckMapVerResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__CheckMapVer_DEFINED
#define SOAP_TYPE__ns1__CheckMapVer_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckMapVer(struct soap*, const char*, int, const _ns1__CheckMapVer *, const char*);
SOAP_FMAC3 _ns1__CheckMapVer * SOAP_FMAC4 soap_in__ns1__CheckMapVer(struct soap*, const char*, _ns1__CheckMapVer *, const char*);
SOAP_FMAC1 _ns1__CheckMapVer * SOAP_FMAC2 soap_instantiate__ns1__CheckMapVer(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckMapVer * soap_new__ns1__CheckMapVer(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CheckMapVer(soap, n, NULL, NULL, NULL);
}

inline _ns1__CheckMapVer * soap_new_req__ns1__CheckMapVer(
	struct soap *soap)
{
	_ns1__CheckMapVer *_p = ::soap_new__ns1__CheckMapVer(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CheckMapVer * soap_new_set__ns1__CheckMapVer(
	struct soap *soap,
	char *ver)
{
	_ns1__CheckMapVer *_p = ::soap_new__ns1__CheckMapVer(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckMapVer::ver = ver;
	}
	return _p;
}

inline int soap_write__ns1__CheckMapVer(struct soap *soap, _ns1__CheckMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckMapVer", p->soap_type() == SOAP_TYPE__ns1__CheckMapVer ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CheckMapVer(struct soap *soap, const char *URL, _ns1__CheckMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckMapVer", p->soap_type() == SOAP_TYPE__ns1__CheckMapVer ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CheckMapVer(struct soap *soap, const char *URL, _ns1__CheckMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckMapVer", p->soap_type() == SOAP_TYPE__ns1__CheckMapVer ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CheckMapVer * SOAP_FMAC4 soap_get__ns1__CheckMapVer(struct soap*, _ns1__CheckMapVer *, const char*, const char*);

inline int soap_read__ns1__CheckMapVer(struct soap *soap, _ns1__CheckMapVer *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CheckMapVer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CheckMapVer(struct soap *soap, const char *URL, _ns1__CheckMapVer *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CheckMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__CheckMapVer(struct soap *soap, _ns1__CheckMapVer *p)
{
	if (::soap_read__ns1__CheckMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMangeXbResponse_DEFINED
#define SOAP_TYPE__ns1__GetMangeXbResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMangeXbResponse(struct soap*, const char*, int, const _ns1__GetMangeXbResponse *, const char*);
SOAP_FMAC3 _ns1__GetMangeXbResponse * SOAP_FMAC4 soap_in__ns1__GetMangeXbResponse(struct soap*, const char*, _ns1__GetMangeXbResponse *, const char*);
SOAP_FMAC1 _ns1__GetMangeXbResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMangeXbResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMangeXbResponse * soap_new__ns1__GetMangeXbResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMangeXbResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMangeXbResponse * soap_new_req__ns1__GetMangeXbResponse(
	struct soap *soap)
{
	_ns1__GetMangeXbResponse *_p = ::soap_new__ns1__GetMangeXbResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMangeXbResponse * soap_new_set__ns1__GetMangeXbResponse(
	struct soap *soap,
	char *GetMangeXbResult)
{
	_ns1__GetMangeXbResponse *_p = ::soap_new__ns1__GetMangeXbResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMangeXbResponse::GetMangeXbResult = GetMangeXbResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMangeXbResponse(struct soap *soap, _ns1__GetMangeXbResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeXbResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeXbResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMangeXbResponse(struct soap *soap, const char *URL, _ns1__GetMangeXbResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeXbResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeXbResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMangeXbResponse(struct soap *soap, const char *URL, _ns1__GetMangeXbResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeXbResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeXbResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMangeXbResponse * SOAP_FMAC4 soap_get__ns1__GetMangeXbResponse(struct soap*, _ns1__GetMangeXbResponse *, const char*, const char*);

inline int soap_read__ns1__GetMangeXbResponse(struct soap *soap, _ns1__GetMangeXbResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMangeXbResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMangeXbResponse(struct soap *soap, const char *URL, _ns1__GetMangeXbResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMangeXbResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMangeXbResponse(struct soap *soap, _ns1__GetMangeXbResponse *p)
{
	if (::soap_read__ns1__GetMangeXbResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMangeXb_DEFINED
#define SOAP_TYPE__ns1__GetMangeXb_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMangeXb(struct soap*, const char*, int, const _ns1__GetMangeXb *, const char*);
SOAP_FMAC3 _ns1__GetMangeXb * SOAP_FMAC4 soap_in__ns1__GetMangeXb(struct soap*, const char*, _ns1__GetMangeXb *, const char*);
SOAP_FMAC1 _ns1__GetMangeXb * SOAP_FMAC2 soap_instantiate__ns1__GetMangeXb(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMangeXb * soap_new__ns1__GetMangeXb(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMangeXb(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMangeXb * soap_new_req__ns1__GetMangeXb(
	struct soap *soap)
{
	_ns1__GetMangeXb *_p = ::soap_new__ns1__GetMangeXb(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMangeXb * soap_new_set__ns1__GetMangeXb(
	struct soap *soap,
	char *dwname,
	char *filename)
{
	_ns1__GetMangeXb *_p = ::soap_new__ns1__GetMangeXb(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMangeXb::dwname = dwname;
		_p->_ns1__GetMangeXb::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMangeXb(struct soap *soap, _ns1__GetMangeXb const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeXb", p->soap_type() == SOAP_TYPE__ns1__GetMangeXb ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMangeXb(struct soap *soap, const char *URL, _ns1__GetMangeXb const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeXb", p->soap_type() == SOAP_TYPE__ns1__GetMangeXb ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMangeXb(struct soap *soap, const char *URL, _ns1__GetMangeXb const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeXb", p->soap_type() == SOAP_TYPE__ns1__GetMangeXb ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMangeXb * SOAP_FMAC4 soap_get__ns1__GetMangeXb(struct soap*, _ns1__GetMangeXb *, const char*, const char*);

inline int soap_read__ns1__GetMangeXb(struct soap *soap, _ns1__GetMangeXb *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMangeXb(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMangeXb(struct soap *soap, const char *URL, _ns1__GetMangeXb *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMangeXb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMangeXb(struct soap *soap, _ns1__GetMangeXb *p)
{
	if (::soap_read__ns1__GetMangeXb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMangeUnitResponse_DEFINED
#define SOAP_TYPE__ns1__GetMangeUnitResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMangeUnitResponse(struct soap*, const char*, int, const _ns1__GetMangeUnitResponse *, const char*);
SOAP_FMAC3 _ns1__GetMangeUnitResponse * SOAP_FMAC4 soap_in__ns1__GetMangeUnitResponse(struct soap*, const char*, _ns1__GetMangeUnitResponse *, const char*);
SOAP_FMAC1 _ns1__GetMangeUnitResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMangeUnitResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMangeUnitResponse * soap_new__ns1__GetMangeUnitResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMangeUnitResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMangeUnitResponse * soap_new_req__ns1__GetMangeUnitResponse(
	struct soap *soap)
{
	_ns1__GetMangeUnitResponse *_p = ::soap_new__ns1__GetMangeUnitResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMangeUnitResponse * soap_new_set__ns1__GetMangeUnitResponse(
	struct soap *soap,
	char *GetMangeUnitResult)
{
	_ns1__GetMangeUnitResponse *_p = ::soap_new__ns1__GetMangeUnitResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMangeUnitResponse::GetMangeUnitResult = GetMangeUnitResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMangeUnitResponse(struct soap *soap, _ns1__GetMangeUnitResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeUnitResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeUnitResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMangeUnitResponse(struct soap *soap, const char *URL, _ns1__GetMangeUnitResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeUnitResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeUnitResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMangeUnitResponse(struct soap *soap, const char *URL, _ns1__GetMangeUnitResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeUnitResponse", p->soap_type() == SOAP_TYPE__ns1__GetMangeUnitResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMangeUnitResponse * SOAP_FMAC4 soap_get__ns1__GetMangeUnitResponse(struct soap*, _ns1__GetMangeUnitResponse *, const char*, const char*);

inline int soap_read__ns1__GetMangeUnitResponse(struct soap *soap, _ns1__GetMangeUnitResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMangeUnitResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMangeUnitResponse(struct soap *soap, const char *URL, _ns1__GetMangeUnitResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMangeUnitResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMangeUnitResponse(struct soap *soap, _ns1__GetMangeUnitResponse *p)
{
	if (::soap_read__ns1__GetMangeUnitResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMangeUnit_DEFINED
#define SOAP_TYPE__ns1__GetMangeUnit_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMangeUnit(struct soap*, const char*, int, const _ns1__GetMangeUnit *, const char*);
SOAP_FMAC3 _ns1__GetMangeUnit * SOAP_FMAC4 soap_in__ns1__GetMangeUnit(struct soap*, const char*, _ns1__GetMangeUnit *, const char*);
SOAP_FMAC1 _ns1__GetMangeUnit * SOAP_FMAC2 soap_instantiate__ns1__GetMangeUnit(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMangeUnit * soap_new__ns1__GetMangeUnit(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMangeUnit(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMangeUnit * soap_new_req__ns1__GetMangeUnit(
	struct soap *soap)
{
	_ns1__GetMangeUnit *_p = ::soap_new__ns1__GetMangeUnit(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMangeUnit * soap_new_set__ns1__GetMangeUnit(
	struct soap *soap,
	char *dwname,
	char *filename)
{
	_ns1__GetMangeUnit *_p = ::soap_new__ns1__GetMangeUnit(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMangeUnit::dwname = dwname;
		_p->_ns1__GetMangeUnit::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMangeUnit(struct soap *soap, _ns1__GetMangeUnit const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeUnit", p->soap_type() == SOAP_TYPE__ns1__GetMangeUnit ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMangeUnit(struct soap *soap, const char *URL, _ns1__GetMangeUnit const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeUnit", p->soap_type() == SOAP_TYPE__ns1__GetMangeUnit ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMangeUnit(struct soap *soap, const char *URL, _ns1__GetMangeUnit const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMangeUnit", p->soap_type() == SOAP_TYPE__ns1__GetMangeUnit ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMangeUnit * SOAP_FMAC4 soap_get__ns1__GetMangeUnit(struct soap*, _ns1__GetMangeUnit *, const char*, const char*);

inline int soap_read__ns1__GetMangeUnit(struct soap *soap, _ns1__GetMangeUnit *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMangeUnit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMangeUnit(struct soap *soap, const char *URL, _ns1__GetMangeUnit *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMangeUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMangeUnit(struct soap *soap, _ns1__GetMangeUnit *p)
{
	if (::soap_read__ns1__GetMangeUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMaListResponse_DEFINED
#define SOAP_TYPE__ns1__GetMaListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMaListResponse(struct soap*, const char*, int, const _ns1__GetMaListResponse *, const char*);
SOAP_FMAC3 _ns1__GetMaListResponse * SOAP_FMAC4 soap_in__ns1__GetMaListResponse(struct soap*, const char*, _ns1__GetMaListResponse *, const char*);
SOAP_FMAC1 _ns1__GetMaListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMaListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMaListResponse * soap_new__ns1__GetMaListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMaListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMaListResponse * soap_new_req__ns1__GetMaListResponse(
	struct soap *soap)
{
	_ns1__GetMaListResponse *_p = ::soap_new__ns1__GetMaListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMaListResponse * soap_new_set__ns1__GetMaListResponse(
	struct soap *soap,
	char *GetMaListResult)
{
	_ns1__GetMaListResponse *_p = ::soap_new__ns1__GetMaListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMaListResponse::GetMaListResult = GetMaListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMaListResponse(struct soap *soap, _ns1__GetMaListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMaListResponse", p->soap_type() == SOAP_TYPE__ns1__GetMaListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMaListResponse(struct soap *soap, const char *URL, _ns1__GetMaListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMaListResponse", p->soap_type() == SOAP_TYPE__ns1__GetMaListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMaListResponse(struct soap *soap, const char *URL, _ns1__GetMaListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMaListResponse", p->soap_type() == SOAP_TYPE__ns1__GetMaListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMaListResponse * SOAP_FMAC4 soap_get__ns1__GetMaListResponse(struct soap*, _ns1__GetMaListResponse *, const char*, const char*);

inline int soap_read__ns1__GetMaListResponse(struct soap *soap, _ns1__GetMaListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMaListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMaListResponse(struct soap *soap, const char *URL, _ns1__GetMaListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMaListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMaListResponse(struct soap *soap, _ns1__GetMaListResponse *p)
{
	if (::soap_read__ns1__GetMaListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMaList_DEFINED
#define SOAP_TYPE__ns1__GetMaList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMaList(struct soap*, const char*, int, const _ns1__GetMaList *, const char*);
SOAP_FMAC3 _ns1__GetMaList * SOAP_FMAC4 soap_in__ns1__GetMaList(struct soap*, const char*, _ns1__GetMaList *, const char*);
SOAP_FMAC1 _ns1__GetMaList * SOAP_FMAC2 soap_instantiate__ns1__GetMaList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMaList * soap_new__ns1__GetMaList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMaList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMaList * soap_new_req__ns1__GetMaList(
	struct soap *soap)
{
	_ns1__GetMaList *_p = ::soap_new__ns1__GetMaList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMaList * soap_new_set__ns1__GetMaList(
	struct soap *soap,
	char *Lh,
	char *mapid,
	char *mflag,
	char *filename)
{
	_ns1__GetMaList *_p = ::soap_new__ns1__GetMaList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMaList::Lh = Lh;
		_p->_ns1__GetMaList::mapid = mapid;
		_p->_ns1__GetMaList::mflag = mflag;
		_p->_ns1__GetMaList::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMaList(struct soap *soap, _ns1__GetMaList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMaList", p->soap_type() == SOAP_TYPE__ns1__GetMaList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMaList(struct soap *soap, const char *URL, _ns1__GetMaList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMaList", p->soap_type() == SOAP_TYPE__ns1__GetMaList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMaList(struct soap *soap, const char *URL, _ns1__GetMaList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMaList", p->soap_type() == SOAP_TYPE__ns1__GetMaList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMaList * SOAP_FMAC4 soap_get__ns1__GetMaList(struct soap*, _ns1__GetMaList *, const char*, const char*);

inline int soap_read__ns1__GetMaList(struct soap *soap, _ns1__GetMaList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMaList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMaList(struct soap *soap, const char *URL, _ns1__GetMaList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMaList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMaList(struct soap *soap, _ns1__GetMaList *p)
{
	if (::soap_read__ns1__GetMaList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapDeviceDataResponse_DEFINED
#define SOAP_TYPE__ns1__GetMapDeviceDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapDeviceDataResponse(struct soap*, const char*, int, const _ns1__GetMapDeviceDataResponse *, const char*);
SOAP_FMAC3 _ns1__GetMapDeviceDataResponse * SOAP_FMAC4 soap_in__ns1__GetMapDeviceDataResponse(struct soap*, const char*, _ns1__GetMapDeviceDataResponse *, const char*);
SOAP_FMAC1 _ns1__GetMapDeviceDataResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMapDeviceDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapDeviceDataResponse * soap_new__ns1__GetMapDeviceDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapDeviceDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapDeviceDataResponse * soap_new_req__ns1__GetMapDeviceDataResponse(
	struct soap *soap)
{
	_ns1__GetMapDeviceDataResponse *_p = ::soap_new__ns1__GetMapDeviceDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapDeviceDataResponse * soap_new_set__ns1__GetMapDeviceDataResponse(
	struct soap *soap,
	char *GetMapDeviceDataResult)
{
	_ns1__GetMapDeviceDataResponse *_p = ::soap_new__ns1__GetMapDeviceDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapDeviceDataResponse::GetMapDeviceDataResult = GetMapDeviceDataResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMapDeviceDataResponse(struct soap *soap, _ns1__GetMapDeviceDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapDeviceDataResponse(struct soap *soap, const char *URL, _ns1__GetMapDeviceDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapDeviceDataResponse(struct soap *soap, const char *URL, _ns1__GetMapDeviceDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapDeviceDataResponse * SOAP_FMAC4 soap_get__ns1__GetMapDeviceDataResponse(struct soap*, _ns1__GetMapDeviceDataResponse *, const char*, const char*);

inline int soap_read__ns1__GetMapDeviceDataResponse(struct soap *soap, _ns1__GetMapDeviceDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapDeviceDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapDeviceDataResponse(struct soap *soap, const char *URL, _ns1__GetMapDeviceDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapDeviceDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapDeviceDataResponse(struct soap *soap, _ns1__GetMapDeviceDataResponse *p)
{
	if (::soap_read__ns1__GetMapDeviceDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapDeviceData_DEFINED
#define SOAP_TYPE__ns1__GetMapDeviceData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapDeviceData(struct soap*, const char*, int, const _ns1__GetMapDeviceData *, const char*);
SOAP_FMAC3 _ns1__GetMapDeviceData * SOAP_FMAC4 soap_in__ns1__GetMapDeviceData(struct soap*, const char*, _ns1__GetMapDeviceData *, const char*);
SOAP_FMAC1 _ns1__GetMapDeviceData * SOAP_FMAC2 soap_instantiate__ns1__GetMapDeviceData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapDeviceData * soap_new__ns1__GetMapDeviceData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapDeviceData(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapDeviceData * soap_new_req__ns1__GetMapDeviceData(
	struct soap *soap)
{
	_ns1__GetMapDeviceData *_p = ::soap_new__ns1__GetMapDeviceData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapDeviceData * soap_new_set__ns1__GetMapDeviceData(
	struct soap *soap,
	char *tabname,
	char *Lh,
	char *mapid,
	char *filename)
{
	_ns1__GetMapDeviceData *_p = ::soap_new__ns1__GetMapDeviceData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapDeviceData::tabname = tabname;
		_p->_ns1__GetMapDeviceData::Lh = Lh;
		_p->_ns1__GetMapDeviceData::mapid = mapid;
		_p->_ns1__GetMapDeviceData::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMapDeviceData(struct soap *soap, _ns1__GetMapDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceData", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapDeviceData(struct soap *soap, const char *URL, _ns1__GetMapDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceData", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapDeviceData(struct soap *soap, const char *URL, _ns1__GetMapDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceData", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapDeviceData * SOAP_FMAC4 soap_get__ns1__GetMapDeviceData(struct soap*, _ns1__GetMapDeviceData *, const char*, const char*);

inline int soap_read__ns1__GetMapDeviceData(struct soap *soap, _ns1__GetMapDeviceData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapDeviceData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapDeviceData(struct soap *soap, const char *URL, _ns1__GetMapDeviceData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapDeviceData(struct soap *soap, _ns1__GetMapDeviceData *p)
{
	if (::soap_read__ns1__GetMapDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapTabNameResponse_DEFINED
#define SOAP_TYPE__ns1__GetMapTabNameResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapTabNameResponse(struct soap*, const char*, int, const _ns1__GetMapTabNameResponse *, const char*);
SOAP_FMAC3 _ns1__GetMapTabNameResponse * SOAP_FMAC4 soap_in__ns1__GetMapTabNameResponse(struct soap*, const char*, _ns1__GetMapTabNameResponse *, const char*);
SOAP_FMAC1 _ns1__GetMapTabNameResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMapTabNameResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapTabNameResponse * soap_new__ns1__GetMapTabNameResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapTabNameResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapTabNameResponse * soap_new_req__ns1__GetMapTabNameResponse(
	struct soap *soap)
{
	_ns1__GetMapTabNameResponse *_p = ::soap_new__ns1__GetMapTabNameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapTabNameResponse * soap_new_set__ns1__GetMapTabNameResponse(
	struct soap *soap,
	char *GetMapTabNameResult)
{
	_ns1__GetMapTabNameResponse *_p = ::soap_new__ns1__GetMapTabNameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapTabNameResponse::GetMapTabNameResult = GetMapTabNameResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMapTabNameResponse(struct soap *soap, _ns1__GetMapTabNameResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapTabNameResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapTabNameResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapTabNameResponse(struct soap *soap, const char *URL, _ns1__GetMapTabNameResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapTabNameResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapTabNameResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapTabNameResponse(struct soap *soap, const char *URL, _ns1__GetMapTabNameResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapTabNameResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapTabNameResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapTabNameResponse * SOAP_FMAC4 soap_get__ns1__GetMapTabNameResponse(struct soap*, _ns1__GetMapTabNameResponse *, const char*, const char*);

inline int soap_read__ns1__GetMapTabNameResponse(struct soap *soap, _ns1__GetMapTabNameResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapTabNameResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapTabNameResponse(struct soap *soap, const char *URL, _ns1__GetMapTabNameResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapTabNameResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapTabNameResponse(struct soap *soap, _ns1__GetMapTabNameResponse *p)
{
	if (::soap_read__ns1__GetMapTabNameResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapTabName_DEFINED
#define SOAP_TYPE__ns1__GetMapTabName_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapTabName(struct soap*, const char*, int, const _ns1__GetMapTabName *, const char*);
SOAP_FMAC3 _ns1__GetMapTabName * SOAP_FMAC4 soap_in__ns1__GetMapTabName(struct soap*, const char*, _ns1__GetMapTabName *, const char*);
SOAP_FMAC1 _ns1__GetMapTabName * SOAP_FMAC2 soap_instantiate__ns1__GetMapTabName(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapTabName * soap_new__ns1__GetMapTabName(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapTabName(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapTabName * soap_new_req__ns1__GetMapTabName(
	struct soap *soap)
{
	_ns1__GetMapTabName *_p = ::soap_new__ns1__GetMapTabName(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapTabName * soap_new_set__ns1__GetMapTabName(
	struct soap *soap,
	char *maptype,
	char *filename)
{
	_ns1__GetMapTabName *_p = ::soap_new__ns1__GetMapTabName(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapTabName::maptype = maptype;
		_p->_ns1__GetMapTabName::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMapTabName(struct soap *soap, _ns1__GetMapTabName const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapTabName", p->soap_type() == SOAP_TYPE__ns1__GetMapTabName ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapTabName(struct soap *soap, const char *URL, _ns1__GetMapTabName const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapTabName", p->soap_type() == SOAP_TYPE__ns1__GetMapTabName ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapTabName(struct soap *soap, const char *URL, _ns1__GetMapTabName const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapTabName", p->soap_type() == SOAP_TYPE__ns1__GetMapTabName ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapTabName * SOAP_FMAC4 soap_get__ns1__GetMapTabName(struct soap*, _ns1__GetMapTabName *, const char*, const char*);

inline int soap_read__ns1__GetMapTabName(struct soap *soap, _ns1__GetMapTabName *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapTabName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapTabName(struct soap *soap, const char *URL, _ns1__GetMapTabName *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapTabName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapTabName(struct soap *soap, _ns1__GetMapTabName *p)
{
	if (::soap_read__ns1__GetMapTabName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapUpdateTimeResponse_DEFINED
#define SOAP_TYPE__ns1__GetMapUpdateTimeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapUpdateTimeResponse(struct soap*, const char*, int, const _ns1__GetMapUpdateTimeResponse *, const char*);
SOAP_FMAC3 _ns1__GetMapUpdateTimeResponse * SOAP_FMAC4 soap_in__ns1__GetMapUpdateTimeResponse(struct soap*, const char*, _ns1__GetMapUpdateTimeResponse *, const char*);
SOAP_FMAC1 _ns1__GetMapUpdateTimeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMapUpdateTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapUpdateTimeResponse * soap_new__ns1__GetMapUpdateTimeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapUpdateTimeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapUpdateTimeResponse * soap_new_req__ns1__GetMapUpdateTimeResponse(
	struct soap *soap)
{
	_ns1__GetMapUpdateTimeResponse *_p = ::soap_new__ns1__GetMapUpdateTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapUpdateTimeResponse * soap_new_set__ns1__GetMapUpdateTimeResponse(
	struct soap *soap,
	char *GetMapUpdateTimeResult)
{
	_ns1__GetMapUpdateTimeResponse *_p = ::soap_new__ns1__GetMapUpdateTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapUpdateTimeResponse::GetMapUpdateTimeResult = GetMapUpdateTimeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMapUpdateTimeResponse(struct soap *soap, _ns1__GetMapUpdateTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapUpdateTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapUpdateTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapUpdateTimeResponse(struct soap *soap, const char *URL, _ns1__GetMapUpdateTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapUpdateTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapUpdateTimeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapUpdateTimeResponse(struct soap *soap, const char *URL, _ns1__GetMapUpdateTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapUpdateTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapUpdateTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapUpdateTimeResponse * SOAP_FMAC4 soap_get__ns1__GetMapUpdateTimeResponse(struct soap*, _ns1__GetMapUpdateTimeResponse *, const char*, const char*);

inline int soap_read__ns1__GetMapUpdateTimeResponse(struct soap *soap, _ns1__GetMapUpdateTimeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapUpdateTimeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapUpdateTimeResponse(struct soap *soap, const char *URL, _ns1__GetMapUpdateTimeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapUpdateTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapUpdateTimeResponse(struct soap *soap, _ns1__GetMapUpdateTimeResponse *p)
{
	if (::soap_read__ns1__GetMapUpdateTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapUpdateTime_DEFINED
#define SOAP_TYPE__ns1__GetMapUpdateTime_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapUpdateTime(struct soap*, const char*, int, const _ns1__GetMapUpdateTime *, const char*);
SOAP_FMAC3 _ns1__GetMapUpdateTime * SOAP_FMAC4 soap_in__ns1__GetMapUpdateTime(struct soap*, const char*, _ns1__GetMapUpdateTime *, const char*);
SOAP_FMAC1 _ns1__GetMapUpdateTime * SOAP_FMAC2 soap_instantiate__ns1__GetMapUpdateTime(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapUpdateTime * soap_new__ns1__GetMapUpdateTime(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapUpdateTime(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapUpdateTime * soap_new_req__ns1__GetMapUpdateTime(
	struct soap *soap)
{
	_ns1__GetMapUpdateTime *_p = ::soap_new__ns1__GetMapUpdateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapUpdateTime * soap_new_set__ns1__GetMapUpdateTime(
	struct soap *soap,
	char *uptime,
	char *dwname,
	char *filename)
{
	_ns1__GetMapUpdateTime *_p = ::soap_new__ns1__GetMapUpdateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapUpdateTime::uptime = uptime;
		_p->_ns1__GetMapUpdateTime::dwname = dwname;
		_p->_ns1__GetMapUpdateTime::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetMapUpdateTime(struct soap *soap, _ns1__GetMapUpdateTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapUpdateTime", p->soap_type() == SOAP_TYPE__ns1__GetMapUpdateTime ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapUpdateTime(struct soap *soap, const char *URL, _ns1__GetMapUpdateTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapUpdateTime", p->soap_type() == SOAP_TYPE__ns1__GetMapUpdateTime ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapUpdateTime(struct soap *soap, const char *URL, _ns1__GetMapUpdateTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapUpdateTime", p->soap_type() == SOAP_TYPE__ns1__GetMapUpdateTime ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapUpdateTime * SOAP_FMAC4 soap_get__ns1__GetMapUpdateTime(struct soap*, _ns1__GetMapUpdateTime *, const char*, const char*);

inline int soap_read__ns1__GetMapUpdateTime(struct soap *soap, _ns1__GetMapUpdateTime *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapUpdateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapUpdateTime(struct soap *soap, const char *URL, _ns1__GetMapUpdateTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapUpdateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapUpdateTime(struct soap *soap, _ns1__GetMapUpdateTime *p)
{
	if (::soap_read__ns1__GetMapUpdateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__WriteFileResponse_DEFINED
#define SOAP_TYPE__ns1__WriteFileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WriteFileResponse(struct soap*, const char*, int, const _ns1__WriteFileResponse *, const char*);
SOAP_FMAC3 _ns1__WriteFileResponse * SOAP_FMAC4 soap_in__ns1__WriteFileResponse(struct soap*, const char*, _ns1__WriteFileResponse *, const char*);
SOAP_FMAC1 _ns1__WriteFileResponse * SOAP_FMAC2 soap_instantiate__ns1__WriteFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WriteFileResponse * soap_new__ns1__WriteFileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__WriteFileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__WriteFileResponse * soap_new_req__ns1__WriteFileResponse(
	struct soap *soap)
{
	_ns1__WriteFileResponse *_p = ::soap_new__ns1__WriteFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__WriteFileResponse * soap_new_set__ns1__WriteFileResponse(
	struct soap *soap,
	char *WriteFileResult)
{
	_ns1__WriteFileResponse *_p = ::soap_new__ns1__WriteFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__WriteFileResponse::WriteFileResult = WriteFileResult;
	}
	return _p;
}

inline int soap_write__ns1__WriteFileResponse(struct soap *soap, _ns1__WriteFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:WriteFileResponse", p->soap_type() == SOAP_TYPE__ns1__WriteFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__WriteFileResponse(struct soap *soap, const char *URL, _ns1__WriteFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:WriteFileResponse", p->soap_type() == SOAP_TYPE__ns1__WriteFileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__WriteFileResponse(struct soap *soap, const char *URL, _ns1__WriteFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:WriteFileResponse", p->soap_type() == SOAP_TYPE__ns1__WriteFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__WriteFileResponse * SOAP_FMAC4 soap_get__ns1__WriteFileResponse(struct soap*, _ns1__WriteFileResponse *, const char*, const char*);

inline int soap_read__ns1__WriteFileResponse(struct soap *soap, _ns1__WriteFileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__WriteFileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__WriteFileResponse(struct soap *soap, const char *URL, _ns1__WriteFileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__WriteFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__WriteFileResponse(struct soap *soap, _ns1__WriteFileResponse *p)
{
	if (::soap_read__ns1__WriteFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__WriteFile_DEFINED
#define SOAP_TYPE__ns1__WriteFile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__WriteFile(struct soap*, const char*, int, const _ns1__WriteFile *, const char*);
SOAP_FMAC3 _ns1__WriteFile * SOAP_FMAC4 soap_in__ns1__WriteFile(struct soap*, const char*, _ns1__WriteFile *, const char*);
SOAP_FMAC1 _ns1__WriteFile * SOAP_FMAC2 soap_instantiate__ns1__WriteFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__WriteFile * soap_new__ns1__WriteFile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__WriteFile(soap, n, NULL, NULL, NULL);
}

inline _ns1__WriteFile * soap_new_req__ns1__WriteFile(
	struct soap *soap)
{
	_ns1__WriteFile *_p = ::soap_new__ns1__WriteFile(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__WriteFile * soap_new_set__ns1__WriteFile(
	struct soap *soap,
	char *msg,
	char *filename)
{
	_ns1__WriteFile *_p = ::soap_new__ns1__WriteFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__WriteFile::msg = msg;
		_p->_ns1__WriteFile::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__WriteFile(struct soap *soap, _ns1__WriteFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:WriteFile", p->soap_type() == SOAP_TYPE__ns1__WriteFile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__WriteFile(struct soap *soap, const char *URL, _ns1__WriteFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:WriteFile", p->soap_type() == SOAP_TYPE__ns1__WriteFile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__WriteFile(struct soap *soap, const char *URL, _ns1__WriteFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:WriteFile", p->soap_type() == SOAP_TYPE__ns1__WriteFile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__WriteFile * SOAP_FMAC4 soap_get__ns1__WriteFile(struct soap*, _ns1__WriteFile *, const char*, const char*);

inline int soap_read__ns1__WriteFile(struct soap *soap, _ns1__WriteFile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__WriteFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__WriteFile(struct soap *soap, const char *URL, _ns1__WriteFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__WriteFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__WriteFile(struct soap *soap, _ns1__WriteFile *p)
{
	if (::soap_read__ns1__WriteFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownLoadFileResponse_DEFINED
#define SOAP_TYPE__ns1__DownLoadFileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownLoadFileResponse(struct soap*, const char*, int, const _ns1__DownLoadFileResponse *, const char*);
SOAP_FMAC3 _ns1__DownLoadFileResponse * SOAP_FMAC4 soap_in__ns1__DownLoadFileResponse(struct soap*, const char*, _ns1__DownLoadFileResponse *, const char*);
SOAP_FMAC1 _ns1__DownLoadFileResponse * SOAP_FMAC2 soap_instantiate__ns1__DownLoadFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownLoadFileResponse * soap_new__ns1__DownLoadFileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownLoadFileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownLoadFileResponse * soap_new_req__ns1__DownLoadFileResponse(
	struct soap *soap)
{
	_ns1__DownLoadFileResponse *_p = ::soap_new__ns1__DownLoadFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownLoadFileResponse * soap_new_set__ns1__DownLoadFileResponse(
	struct soap *soap,
	char *DownLoadFileResult)
{
	_ns1__DownLoadFileResponse *_p = ::soap_new__ns1__DownLoadFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownLoadFileResponse::DownLoadFileResult = DownLoadFileResult;
	}
	return _p;
}

inline int soap_write__ns1__DownLoadFileResponse(struct soap *soap, _ns1__DownLoadFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadFileResponse", p->soap_type() == SOAP_TYPE__ns1__DownLoadFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownLoadFileResponse(struct soap *soap, const char *URL, _ns1__DownLoadFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadFileResponse", p->soap_type() == SOAP_TYPE__ns1__DownLoadFileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownLoadFileResponse(struct soap *soap, const char *URL, _ns1__DownLoadFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadFileResponse", p->soap_type() == SOAP_TYPE__ns1__DownLoadFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownLoadFileResponse * SOAP_FMAC4 soap_get__ns1__DownLoadFileResponse(struct soap*, _ns1__DownLoadFileResponse *, const char*, const char*);

inline int soap_read__ns1__DownLoadFileResponse(struct soap *soap, _ns1__DownLoadFileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownLoadFileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownLoadFileResponse(struct soap *soap, const char *URL, _ns1__DownLoadFileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownLoadFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownLoadFileResponse(struct soap *soap, _ns1__DownLoadFileResponse *p)
{
	if (::soap_read__ns1__DownLoadFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownLoadFile_DEFINED
#define SOAP_TYPE__ns1__DownLoadFile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownLoadFile(struct soap*, const char*, int, const _ns1__DownLoadFile *, const char*);
SOAP_FMAC3 _ns1__DownLoadFile * SOAP_FMAC4 soap_in__ns1__DownLoadFile(struct soap*, const char*, _ns1__DownLoadFile *, const char*);
SOAP_FMAC1 _ns1__DownLoadFile * SOAP_FMAC2 soap_instantiate__ns1__DownLoadFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownLoadFile * soap_new__ns1__DownLoadFile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownLoadFile(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownLoadFile * soap_new_req__ns1__DownLoadFile(
	struct soap *soap)
{
	_ns1__DownLoadFile *_p = ::soap_new__ns1__DownLoadFile(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownLoadFile * soap_new_set__ns1__DownLoadFile(
	struct soap *soap,
	char *dwname,
	char *filename,
	char *dir)
{
	_ns1__DownLoadFile *_p = ::soap_new__ns1__DownLoadFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownLoadFile::dwname = dwname;
		_p->_ns1__DownLoadFile::filename = filename;
		_p->_ns1__DownLoadFile::dir = dir;
	}
	return _p;
}

inline int soap_write__ns1__DownLoadFile(struct soap *soap, _ns1__DownLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadFile", p->soap_type() == SOAP_TYPE__ns1__DownLoadFile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownLoadFile(struct soap *soap, const char *URL, _ns1__DownLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadFile", p->soap_type() == SOAP_TYPE__ns1__DownLoadFile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownLoadFile(struct soap *soap, const char *URL, _ns1__DownLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadFile", p->soap_type() == SOAP_TYPE__ns1__DownLoadFile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownLoadFile * SOAP_FMAC4 soap_get__ns1__DownLoadFile(struct soap*, _ns1__DownLoadFile *, const char*, const char*);

inline int soap_read__ns1__DownLoadFile(struct soap *soap, _ns1__DownLoadFile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownLoadFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownLoadFile(struct soap *soap, const char *URL, _ns1__DownLoadFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownLoadFile(struct soap *soap, _ns1__DownLoadFile *p)
{
	if (::soap_read__ns1__DownLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ExecuteSqlForFileResponse_DEFINED
#define SOAP_TYPE__ns1__ExecuteSqlForFileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteSqlForFileResponse(struct soap*, const char*, int, const _ns1__ExecuteSqlForFileResponse *, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlForFileResponse * SOAP_FMAC4 soap_in__ns1__ExecuteSqlForFileResponse(struct soap*, const char*, _ns1__ExecuteSqlForFileResponse *, const char*);
SOAP_FMAC1 _ns1__ExecuteSqlForFileResponse * SOAP_FMAC2 soap_instantiate__ns1__ExecuteSqlForFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExecuteSqlForFileResponse * soap_new__ns1__ExecuteSqlForFileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ExecuteSqlForFileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ExecuteSqlForFileResponse * soap_new_req__ns1__ExecuteSqlForFileResponse(
	struct soap *soap,
	int ExecuteSqlForFileResult)
{
	_ns1__ExecuteSqlForFileResponse *_p = ::soap_new__ns1__ExecuteSqlForFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlForFileResponse::ExecuteSqlForFileResult = ExecuteSqlForFileResult;
	}
	return _p;
}

inline _ns1__ExecuteSqlForFileResponse * soap_new_set__ns1__ExecuteSqlForFileResponse(
	struct soap *soap,
	int ExecuteSqlForFileResult)
{
	_ns1__ExecuteSqlForFileResponse *_p = ::soap_new__ns1__ExecuteSqlForFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlForFileResponse::ExecuteSqlForFileResult = ExecuteSqlForFileResult;
	}
	return _p;
}

inline int soap_write__ns1__ExecuteSqlForFileResponse(struct soap *soap, _ns1__ExecuteSqlForFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForFileResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ExecuteSqlForFileResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlForFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForFileResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForFileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ExecuteSqlForFileResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlForFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForFileResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ExecuteSqlForFileResponse * SOAP_FMAC4 soap_get__ns1__ExecuteSqlForFileResponse(struct soap*, _ns1__ExecuteSqlForFileResponse *, const char*, const char*);

inline int soap_read__ns1__ExecuteSqlForFileResponse(struct soap *soap, _ns1__ExecuteSqlForFileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ExecuteSqlForFileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ExecuteSqlForFileResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlForFileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ExecuteSqlForFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ExecuteSqlForFileResponse(struct soap *soap, _ns1__ExecuteSqlForFileResponse *p)
{
	if (::soap_read__ns1__ExecuteSqlForFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ExecuteSqlForFile_DEFINED
#define SOAP_TYPE__ns1__ExecuteSqlForFile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteSqlForFile(struct soap*, const char*, int, const _ns1__ExecuteSqlForFile *, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlForFile * SOAP_FMAC4 soap_in__ns1__ExecuteSqlForFile(struct soap*, const char*, _ns1__ExecuteSqlForFile *, const char*);
SOAP_FMAC1 _ns1__ExecuteSqlForFile * SOAP_FMAC2 soap_instantiate__ns1__ExecuteSqlForFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExecuteSqlForFile * soap_new__ns1__ExecuteSqlForFile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ExecuteSqlForFile(soap, n, NULL, NULL, NULL);
}

inline _ns1__ExecuteSqlForFile * soap_new_req__ns1__ExecuteSqlForFile(
	struct soap *soap)
{
	_ns1__ExecuteSqlForFile *_p = ::soap_new__ns1__ExecuteSqlForFile(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ExecuteSqlForFile * soap_new_set__ns1__ExecuteSqlForFile(
	struct soap *soap,
	char *xml,
	char *filename,
	char *fieldValue,
	char *dwname,
	char *dirname)
{
	_ns1__ExecuteSqlForFile *_p = ::soap_new__ns1__ExecuteSqlForFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlForFile::xml = xml;
		_p->_ns1__ExecuteSqlForFile::filename = filename;
		_p->_ns1__ExecuteSqlForFile::fieldValue = fieldValue;
		_p->_ns1__ExecuteSqlForFile::dwname = dwname;
		_p->_ns1__ExecuteSqlForFile::dirname = dirname;
	}
	return _p;
}

inline int soap_write__ns1__ExecuteSqlForFile(struct soap *soap, _ns1__ExecuteSqlForFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForFile", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForFile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ExecuteSqlForFile(struct soap *soap, const char *URL, _ns1__ExecuteSqlForFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForFile", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForFile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ExecuteSqlForFile(struct soap *soap, const char *URL, _ns1__ExecuteSqlForFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForFile", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForFile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ExecuteSqlForFile * SOAP_FMAC4 soap_get__ns1__ExecuteSqlForFile(struct soap*, _ns1__ExecuteSqlForFile *, const char*, const char*);

inline int soap_read__ns1__ExecuteSqlForFile(struct soap *soap, _ns1__ExecuteSqlForFile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ExecuteSqlForFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ExecuteSqlForFile(struct soap *soap, const char *URL, _ns1__ExecuteSqlForFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ExecuteSqlForFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ExecuteSqlForFile(struct soap *soap, _ns1__ExecuteSqlForFile *p)
{
	if (::soap_read__ns1__ExecuteSqlForFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetFieldInfoResponse_DEFINED
#define SOAP_TYPE__ns1__GetFieldInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFieldInfoResponse(struct soap*, const char*, int, const _ns1__GetFieldInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetFieldInfoResponse * SOAP_FMAC4 soap_in__ns1__GetFieldInfoResponse(struct soap*, const char*, _ns1__GetFieldInfoResponse *, const char*);
SOAP_FMAC1 _ns1__GetFieldInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetFieldInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFieldInfoResponse * soap_new__ns1__GetFieldInfoResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetFieldInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetFieldInfoResponse * soap_new_req__ns1__GetFieldInfoResponse(
	struct soap *soap)
{
	_ns1__GetFieldInfoResponse *_p = ::soap_new__ns1__GetFieldInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetFieldInfoResponse * soap_new_set__ns1__GetFieldInfoResponse(
	struct soap *soap,
	char *GetFieldInfoResult)
{
	_ns1__GetFieldInfoResponse *_p = ::soap_new__ns1__GetFieldInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFieldInfoResponse::GetFieldInfoResult = GetFieldInfoResult;
	}
	return _p;
}

inline int soap_write__ns1__GetFieldInfoResponse(struct soap *soap, _ns1__GetFieldInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFieldInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetFieldInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetFieldInfoResponse(struct soap *soap, const char *URL, _ns1__GetFieldInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFieldInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetFieldInfoResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetFieldInfoResponse(struct soap *soap, const char *URL, _ns1__GetFieldInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFieldInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetFieldInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetFieldInfoResponse * SOAP_FMAC4 soap_get__ns1__GetFieldInfoResponse(struct soap*, _ns1__GetFieldInfoResponse *, const char*, const char*);

inline int soap_read__ns1__GetFieldInfoResponse(struct soap *soap, _ns1__GetFieldInfoResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetFieldInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetFieldInfoResponse(struct soap *soap, const char *URL, _ns1__GetFieldInfoResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetFieldInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetFieldInfoResponse(struct soap *soap, _ns1__GetFieldInfoResponse *p)
{
	if (::soap_read__ns1__GetFieldInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetFieldInfo_DEFINED
#define SOAP_TYPE__ns1__GetFieldInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFieldInfo(struct soap*, const char*, int, const _ns1__GetFieldInfo *, const char*);
SOAP_FMAC3 _ns1__GetFieldInfo * SOAP_FMAC4 soap_in__ns1__GetFieldInfo(struct soap*, const char*, _ns1__GetFieldInfo *, const char*);
SOAP_FMAC1 _ns1__GetFieldInfo * SOAP_FMAC2 soap_instantiate__ns1__GetFieldInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFieldInfo * soap_new__ns1__GetFieldInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetFieldInfo(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetFieldInfo * soap_new_req__ns1__GetFieldInfo(
	struct soap *soap)
{
	_ns1__GetFieldInfo *_p = ::soap_new__ns1__GetFieldInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetFieldInfo * soap_new_set__ns1__GetFieldInfo(
	struct soap *soap,
	char *tabname)
{
	_ns1__GetFieldInfo *_p = ::soap_new__ns1__GetFieldInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFieldInfo::tabname = tabname;
	}
	return _p;
}

inline int soap_write__ns1__GetFieldInfo(struct soap *soap, _ns1__GetFieldInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFieldInfo", p->soap_type() == SOAP_TYPE__ns1__GetFieldInfo ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetFieldInfo(struct soap *soap, const char *URL, _ns1__GetFieldInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFieldInfo", p->soap_type() == SOAP_TYPE__ns1__GetFieldInfo ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetFieldInfo(struct soap *soap, const char *URL, _ns1__GetFieldInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFieldInfo", p->soap_type() == SOAP_TYPE__ns1__GetFieldInfo ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetFieldInfo * SOAP_FMAC4 soap_get__ns1__GetFieldInfo(struct soap*, _ns1__GetFieldInfo *, const char*, const char*);

inline int soap_read__ns1__GetFieldInfo(struct soap *soap, _ns1__GetFieldInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetFieldInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetFieldInfo(struct soap *soap, const char *URL, _ns1__GetFieldInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetFieldInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetFieldInfo(struct soap *soap, _ns1__GetFieldInfo *p)
{
	if (::soap_read__ns1__GetFieldInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__IsOracleTableResponse_DEFINED
#define SOAP_TYPE__ns1__IsOracleTableResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__IsOracleTableResponse(struct soap*, const char*, int, const _ns1__IsOracleTableResponse *, const char*);
SOAP_FMAC3 _ns1__IsOracleTableResponse * SOAP_FMAC4 soap_in__ns1__IsOracleTableResponse(struct soap*, const char*, _ns1__IsOracleTableResponse *, const char*);
SOAP_FMAC1 _ns1__IsOracleTableResponse * SOAP_FMAC2 soap_instantiate__ns1__IsOracleTableResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__IsOracleTableResponse * soap_new__ns1__IsOracleTableResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__IsOracleTableResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__IsOracleTableResponse * soap_new_req__ns1__IsOracleTableResponse(
	struct soap *soap,
	int IsOracleTableResult)
{
	_ns1__IsOracleTableResponse *_p = ::soap_new__ns1__IsOracleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__IsOracleTableResponse::IsOracleTableResult = IsOracleTableResult;
	}
	return _p;
}

inline _ns1__IsOracleTableResponse * soap_new_set__ns1__IsOracleTableResponse(
	struct soap *soap,
	int IsOracleTableResult)
{
	_ns1__IsOracleTableResponse *_p = ::soap_new__ns1__IsOracleTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__IsOracleTableResponse::IsOracleTableResult = IsOracleTableResult;
	}
	return _p;
}

inline int soap_write__ns1__IsOracleTableResponse(struct soap *soap, _ns1__IsOracleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:IsOracleTableResponse", p->soap_type() == SOAP_TYPE__ns1__IsOracleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__IsOracleTableResponse(struct soap *soap, const char *URL, _ns1__IsOracleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:IsOracleTableResponse", p->soap_type() == SOAP_TYPE__ns1__IsOracleTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__IsOracleTableResponse(struct soap *soap, const char *URL, _ns1__IsOracleTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:IsOracleTableResponse", p->soap_type() == SOAP_TYPE__ns1__IsOracleTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__IsOracleTableResponse * SOAP_FMAC4 soap_get__ns1__IsOracleTableResponse(struct soap*, _ns1__IsOracleTableResponse *, const char*, const char*);

inline int soap_read__ns1__IsOracleTableResponse(struct soap *soap, _ns1__IsOracleTableResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__IsOracleTableResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__IsOracleTableResponse(struct soap *soap, const char *URL, _ns1__IsOracleTableResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__IsOracleTableResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__IsOracleTableResponse(struct soap *soap, _ns1__IsOracleTableResponse *p)
{
	if (::soap_read__ns1__IsOracleTableResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__IsOracleTable_DEFINED
#define SOAP_TYPE__ns1__IsOracleTable_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__IsOracleTable(struct soap*, const char*, int, const _ns1__IsOracleTable *, const char*);
SOAP_FMAC3 _ns1__IsOracleTable * SOAP_FMAC4 soap_in__ns1__IsOracleTable(struct soap*, const char*, _ns1__IsOracleTable *, const char*);
SOAP_FMAC1 _ns1__IsOracleTable * SOAP_FMAC2 soap_instantiate__ns1__IsOracleTable(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__IsOracleTable * soap_new__ns1__IsOracleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__IsOracleTable(soap, n, NULL, NULL, NULL);
}

inline _ns1__IsOracleTable * soap_new_req__ns1__IsOracleTable(
	struct soap *soap)
{
	_ns1__IsOracleTable *_p = ::soap_new__ns1__IsOracleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__IsOracleTable * soap_new_set__ns1__IsOracleTable(
	struct soap *soap,
	char *tabname)
{
	_ns1__IsOracleTable *_p = ::soap_new__ns1__IsOracleTable(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__IsOracleTable::tabname = tabname;
	}
	return _p;
}

inline int soap_write__ns1__IsOracleTable(struct soap *soap, _ns1__IsOracleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:IsOracleTable", p->soap_type() == SOAP_TYPE__ns1__IsOracleTable ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__IsOracleTable(struct soap *soap, const char *URL, _ns1__IsOracleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:IsOracleTable", p->soap_type() == SOAP_TYPE__ns1__IsOracleTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__IsOracleTable(struct soap *soap, const char *URL, _ns1__IsOracleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:IsOracleTable", p->soap_type() == SOAP_TYPE__ns1__IsOracleTable ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__IsOracleTable * SOAP_FMAC4 soap_get__ns1__IsOracleTable(struct soap*, _ns1__IsOracleTable *, const char*, const char*);

inline int soap_read__ns1__IsOracleTable(struct soap *soap, _ns1__IsOracleTable *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__IsOracleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__IsOracleTable(struct soap *soap, const char *URL, _ns1__IsOracleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__IsOracleTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__IsOracleTable(struct soap *soap, _ns1__IsOracleTable *p)
{
	if (::soap_read__ns1__IsOracleTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetTabListResponse_DEFINED
#define SOAP_TYPE__ns1__GetTabListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetTabListResponse(struct soap*, const char*, int, const _ns1__GetTabListResponse *, const char*);
SOAP_FMAC3 _ns1__GetTabListResponse * SOAP_FMAC4 soap_in__ns1__GetTabListResponse(struct soap*, const char*, _ns1__GetTabListResponse *, const char*);
SOAP_FMAC1 _ns1__GetTabListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetTabListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetTabListResponse * soap_new__ns1__GetTabListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetTabListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetTabListResponse * soap_new_req__ns1__GetTabListResponse(
	struct soap *soap)
{
	_ns1__GetTabListResponse *_p = ::soap_new__ns1__GetTabListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetTabListResponse * soap_new_set__ns1__GetTabListResponse(
	struct soap *soap,
	char *GetTabListResult)
{
	_ns1__GetTabListResponse *_p = ::soap_new__ns1__GetTabListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetTabListResponse::GetTabListResult = GetTabListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetTabListResponse(struct soap *soap, _ns1__GetTabListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTabListResponse", p->soap_type() == SOAP_TYPE__ns1__GetTabListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetTabListResponse(struct soap *soap, const char *URL, _ns1__GetTabListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTabListResponse", p->soap_type() == SOAP_TYPE__ns1__GetTabListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetTabListResponse(struct soap *soap, const char *URL, _ns1__GetTabListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTabListResponse", p->soap_type() == SOAP_TYPE__ns1__GetTabListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetTabListResponse * SOAP_FMAC4 soap_get__ns1__GetTabListResponse(struct soap*, _ns1__GetTabListResponse *, const char*, const char*);

inline int soap_read__ns1__GetTabListResponse(struct soap *soap, _ns1__GetTabListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetTabListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetTabListResponse(struct soap *soap, const char *URL, _ns1__GetTabListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetTabListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetTabListResponse(struct soap *soap, _ns1__GetTabListResponse *p)
{
	if (::soap_read__ns1__GetTabListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetTabList_DEFINED
#define SOAP_TYPE__ns1__GetTabList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetTabList(struct soap*, const char*, int, const _ns1__GetTabList *, const char*);
SOAP_FMAC3 _ns1__GetTabList * SOAP_FMAC4 soap_in__ns1__GetTabList(struct soap*, const char*, _ns1__GetTabList *, const char*);
SOAP_FMAC1 _ns1__GetTabList * SOAP_FMAC2 soap_instantiate__ns1__GetTabList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetTabList * soap_new__ns1__GetTabList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetTabList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetTabList * soap_new_req__ns1__GetTabList(
	struct soap *soap)
{
	_ns1__GetTabList *_p = ::soap_new__ns1__GetTabList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetTabList * soap_new_set__ns1__GetTabList(
	struct soap *soap)
{
	_ns1__GetTabList *_p = ::soap_new__ns1__GetTabList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetTabList(struct soap *soap, _ns1__GetTabList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTabList", p->soap_type() == SOAP_TYPE__ns1__GetTabList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetTabList(struct soap *soap, const char *URL, _ns1__GetTabList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTabList", p->soap_type() == SOAP_TYPE__ns1__GetTabList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetTabList(struct soap *soap, const char *URL, _ns1__GetTabList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetTabList", p->soap_type() == SOAP_TYPE__ns1__GetTabList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetTabList * SOAP_FMAC4 soap_get__ns1__GetTabList(struct soap*, _ns1__GetTabList *, const char*, const char*);

inline int soap_read__ns1__GetTabList(struct soap *soap, _ns1__GetTabList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetTabList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetTabList(struct soap *soap, const char *URL, _ns1__GetTabList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetTabList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetTabList(struct soap *soap, _ns1__GetTabList *p)
{
	if (::soap_read__ns1__GetTabList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownCQDataResponse_DEFINED
#define SOAP_TYPE__ns1__DownCQDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownCQDataResponse(struct soap*, const char*, int, const _ns1__DownCQDataResponse *, const char*);
SOAP_FMAC3 _ns1__DownCQDataResponse * SOAP_FMAC4 soap_in__ns1__DownCQDataResponse(struct soap*, const char*, _ns1__DownCQDataResponse *, const char*);
SOAP_FMAC1 _ns1__DownCQDataResponse * SOAP_FMAC2 soap_instantiate__ns1__DownCQDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownCQDataResponse * soap_new__ns1__DownCQDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownCQDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownCQDataResponse * soap_new_req__ns1__DownCQDataResponse(
	struct soap *soap)
{
	_ns1__DownCQDataResponse *_p = ::soap_new__ns1__DownCQDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownCQDataResponse * soap_new_set__ns1__DownCQDataResponse(
	struct soap *soap,
	char *DownCQDataResult)
{
	_ns1__DownCQDataResponse *_p = ::soap_new__ns1__DownCQDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownCQDataResponse::DownCQDataResult = DownCQDataResult;
	}
	return _p;
}

inline int soap_write__ns1__DownCQDataResponse(struct soap *soap, _ns1__DownCQDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownCQDataResponse", p->soap_type() == SOAP_TYPE__ns1__DownCQDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownCQDataResponse(struct soap *soap, const char *URL, _ns1__DownCQDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownCQDataResponse", p->soap_type() == SOAP_TYPE__ns1__DownCQDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownCQDataResponse(struct soap *soap, const char *URL, _ns1__DownCQDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownCQDataResponse", p->soap_type() == SOAP_TYPE__ns1__DownCQDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownCQDataResponse * SOAP_FMAC4 soap_get__ns1__DownCQDataResponse(struct soap*, _ns1__DownCQDataResponse *, const char*, const char*);

inline int soap_read__ns1__DownCQDataResponse(struct soap *soap, _ns1__DownCQDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownCQDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownCQDataResponse(struct soap *soap, const char *URL, _ns1__DownCQDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownCQDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownCQDataResponse(struct soap *soap, _ns1__DownCQDataResponse *p)
{
	if (::soap_read__ns1__DownCQDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownCQData_DEFINED
#define SOAP_TYPE__ns1__DownCQData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownCQData(struct soap*, const char*, int, const _ns1__DownCQData *, const char*);
SOAP_FMAC3 _ns1__DownCQData * SOAP_FMAC4 soap_in__ns1__DownCQData(struct soap*, const char*, _ns1__DownCQData *, const char*);
SOAP_FMAC1 _ns1__DownCQData * SOAP_FMAC2 soap_instantiate__ns1__DownCQData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownCQData * soap_new__ns1__DownCQData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownCQData(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownCQData * soap_new_req__ns1__DownCQData(
	struct soap *soap,
	int orglevel)
{
	_ns1__DownCQData *_p = ::soap_new__ns1__DownCQData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownCQData::orglevel = orglevel;
	}
	return _p;
}

inline _ns1__DownCQData * soap_new_set__ns1__DownCQData(
	struct soap *soap,
	char *dwname,
	int orglevel,
	char *tabname,
	char *time,
	char *filename)
{
	_ns1__DownCQData *_p = ::soap_new__ns1__DownCQData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownCQData::dwname = dwname;
		_p->_ns1__DownCQData::orglevel = orglevel;
		_p->_ns1__DownCQData::tabname = tabname;
		_p->_ns1__DownCQData::time = time;
		_p->_ns1__DownCQData::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__DownCQData(struct soap *soap, _ns1__DownCQData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownCQData", p->soap_type() == SOAP_TYPE__ns1__DownCQData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownCQData(struct soap *soap, const char *URL, _ns1__DownCQData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownCQData", p->soap_type() == SOAP_TYPE__ns1__DownCQData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownCQData(struct soap *soap, const char *URL, _ns1__DownCQData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownCQData", p->soap_type() == SOAP_TYPE__ns1__DownCQData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownCQData * SOAP_FMAC4 soap_get__ns1__DownCQData(struct soap*, _ns1__DownCQData *, const char*, const char*);

inline int soap_read__ns1__DownCQData(struct soap *soap, _ns1__DownCQData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownCQData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownCQData(struct soap *soap, const char *URL, _ns1__DownCQData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownCQData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownCQData(struct soap *soap, _ns1__DownCQData *p)
{
	if (::soap_read__ns1__DownCQData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__AlterTableResponse_DEFINED
#define SOAP_TYPE__ns1__AlterTableResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AlterTableResponse(struct soap*, const char*, int, const _ns1__AlterTableResponse *, const char*);
SOAP_FMAC3 _ns1__AlterTableResponse * SOAP_FMAC4 soap_in__ns1__AlterTableResponse(struct soap*, const char*, _ns1__AlterTableResponse *, const char*);
SOAP_FMAC1 _ns1__AlterTableResponse * SOAP_FMAC2 soap_instantiate__ns1__AlterTableResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AlterTableResponse * soap_new__ns1__AlterTableResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__AlterTableResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__AlterTableResponse * soap_new_req__ns1__AlterTableResponse(
	struct soap *soap)
{
	_ns1__AlterTableResponse *_p = ::soap_new__ns1__AlterTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__AlterTableResponse * soap_new_set__ns1__AlterTableResponse(
	struct soap *soap,
	char *AlterTableResult)
{
	_ns1__AlterTableResponse *_p = ::soap_new__ns1__AlterTableResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__AlterTableResponse::AlterTableResult = AlterTableResult;
	}
	return _p;
}

inline int soap_write__ns1__AlterTableResponse(struct soap *soap, _ns1__AlterTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AlterTableResponse", p->soap_type() == SOAP_TYPE__ns1__AlterTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__AlterTableResponse(struct soap *soap, const char *URL, _ns1__AlterTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AlterTableResponse", p->soap_type() == SOAP_TYPE__ns1__AlterTableResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__AlterTableResponse(struct soap *soap, const char *URL, _ns1__AlterTableResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AlterTableResponse", p->soap_type() == SOAP_TYPE__ns1__AlterTableResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__AlterTableResponse * SOAP_FMAC4 soap_get__ns1__AlterTableResponse(struct soap*, _ns1__AlterTableResponse *, const char*, const char*);

inline int soap_read__ns1__AlterTableResponse(struct soap *soap, _ns1__AlterTableResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__AlterTableResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__AlterTableResponse(struct soap *soap, const char *URL, _ns1__AlterTableResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__AlterTableResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__AlterTableResponse(struct soap *soap, _ns1__AlterTableResponse *p)
{
	if (::soap_read__ns1__AlterTableResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__AlterTable_DEFINED
#define SOAP_TYPE__ns1__AlterTable_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AlterTable(struct soap*, const char*, int, const _ns1__AlterTable *, const char*);
SOAP_FMAC3 _ns1__AlterTable * SOAP_FMAC4 soap_in__ns1__AlterTable(struct soap*, const char*, _ns1__AlterTable *, const char*);
SOAP_FMAC1 _ns1__AlterTable * SOAP_FMAC2 soap_instantiate__ns1__AlterTable(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AlterTable * soap_new__ns1__AlterTable(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__AlterTable(soap, n, NULL, NULL, NULL);
}

inline _ns1__AlterTable * soap_new_req__ns1__AlterTable(
	struct soap *soap)
{
	_ns1__AlterTable *_p = ::soap_new__ns1__AlterTable(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__AlterTable * soap_new_set__ns1__AlterTable(
	struct soap *soap,
	char *fieldname,
	char *tabname,
	char *ftype,
	char *option)
{
	_ns1__AlterTable *_p = ::soap_new__ns1__AlterTable(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__AlterTable::fieldname = fieldname;
		_p->_ns1__AlterTable::tabname = tabname;
		_p->_ns1__AlterTable::ftype = ftype;
		_p->_ns1__AlterTable::option = option;
	}
	return _p;
}

inline int soap_write__ns1__AlterTable(struct soap *soap, _ns1__AlterTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AlterTable", p->soap_type() == SOAP_TYPE__ns1__AlterTable ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__AlterTable(struct soap *soap, const char *URL, _ns1__AlterTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AlterTable", p->soap_type() == SOAP_TYPE__ns1__AlterTable ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__AlterTable(struct soap *soap, const char *URL, _ns1__AlterTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:AlterTable", p->soap_type() == SOAP_TYPE__ns1__AlterTable ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__AlterTable * SOAP_FMAC4 soap_get__ns1__AlterTable(struct soap*, _ns1__AlterTable *, const char*, const char*);

inline int soap_read__ns1__AlterTable(struct soap *soap, _ns1__AlterTable *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__AlterTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__AlterTable(struct soap *soap, const char *URL, _ns1__AlterTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__AlterTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__AlterTable(struct soap *soap, _ns1__AlterTable *p)
{
	if (::soap_read__ns1__AlterTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetFileNewResponse_DEFINED
#define SOAP_TYPE__ns1__GetFileNewResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFileNewResponse(struct soap*, const char*, int, const _ns1__GetFileNewResponse *, const char*);
SOAP_FMAC3 _ns1__GetFileNewResponse * SOAP_FMAC4 soap_in__ns1__GetFileNewResponse(struct soap*, const char*, _ns1__GetFileNewResponse *, const char*);
SOAP_FMAC1 _ns1__GetFileNewResponse * SOAP_FMAC2 soap_instantiate__ns1__GetFileNewResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFileNewResponse * soap_new__ns1__GetFileNewResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetFileNewResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetFileNewResponse * soap_new_req__ns1__GetFileNewResponse(
	struct soap *soap)
{
	_ns1__GetFileNewResponse *_p = ::soap_new__ns1__GetFileNewResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetFileNewResponse * soap_new_set__ns1__GetFileNewResponse(
	struct soap *soap,
	char *GetFileNewResult)
{
	_ns1__GetFileNewResponse *_p = ::soap_new__ns1__GetFileNewResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFileNewResponse::GetFileNewResult = GetFileNewResult;
	}
	return _p;
}

inline int soap_write__ns1__GetFileNewResponse(struct soap *soap, _ns1__GetFileNewResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileNewResponse", p->soap_type() == SOAP_TYPE__ns1__GetFileNewResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetFileNewResponse(struct soap *soap, const char *URL, _ns1__GetFileNewResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileNewResponse", p->soap_type() == SOAP_TYPE__ns1__GetFileNewResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetFileNewResponse(struct soap *soap, const char *URL, _ns1__GetFileNewResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileNewResponse", p->soap_type() == SOAP_TYPE__ns1__GetFileNewResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetFileNewResponse * SOAP_FMAC4 soap_get__ns1__GetFileNewResponse(struct soap*, _ns1__GetFileNewResponse *, const char*, const char*);

inline int soap_read__ns1__GetFileNewResponse(struct soap *soap, _ns1__GetFileNewResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetFileNewResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetFileNewResponse(struct soap *soap, const char *URL, _ns1__GetFileNewResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetFileNewResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetFileNewResponse(struct soap *soap, _ns1__GetFileNewResponse *p)
{
	if (::soap_read__ns1__GetFileNewResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetFileNew_DEFINED
#define SOAP_TYPE__ns1__GetFileNew_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFileNew(struct soap*, const char*, int, const _ns1__GetFileNew *, const char*);
SOAP_FMAC3 _ns1__GetFileNew * SOAP_FMAC4 soap_in__ns1__GetFileNew(struct soap*, const char*, _ns1__GetFileNew *, const char*);
SOAP_FMAC1 _ns1__GetFileNew * SOAP_FMAC2 soap_instantiate__ns1__GetFileNew(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFileNew * soap_new__ns1__GetFileNew(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetFileNew(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetFileNew * soap_new_req__ns1__GetFileNew(
	struct soap *soap)
{
	_ns1__GetFileNew *_p = ::soap_new__ns1__GetFileNew(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetFileNew * soap_new_set__ns1__GetFileNew(
	struct soap *soap,
	ns1__ArrayOfBase64Binary *lstB,
	char *filename)
{
	_ns1__GetFileNew *_p = ::soap_new__ns1__GetFileNew(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFileNew::lstB = lstB;
		_p->_ns1__GetFileNew::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetFileNew(struct soap *soap, _ns1__GetFileNew const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileNew", p->soap_type() == SOAP_TYPE__ns1__GetFileNew ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetFileNew(struct soap *soap, const char *URL, _ns1__GetFileNew const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileNew", p->soap_type() == SOAP_TYPE__ns1__GetFileNew ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetFileNew(struct soap *soap, const char *URL, _ns1__GetFileNew const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileNew", p->soap_type() == SOAP_TYPE__ns1__GetFileNew ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetFileNew * SOAP_FMAC4 soap_get__ns1__GetFileNew(struct soap*, _ns1__GetFileNew *, const char*, const char*);

inline int soap_read__ns1__GetFileNew(struct soap *soap, _ns1__GetFileNew *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetFileNew(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetFileNew(struct soap *soap, const char *URL, _ns1__GetFileNew *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetFileNew(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetFileNew(struct soap *soap, _ns1__GetFileNew *p)
{
	if (::soap_read__ns1__GetFileNew(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownMapfileResponse_DEFINED
#define SOAP_TYPE__ns1__DownMapfileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownMapfileResponse(struct soap*, const char*, int, const _ns1__DownMapfileResponse *, const char*);
SOAP_FMAC3 _ns1__DownMapfileResponse * SOAP_FMAC4 soap_in__ns1__DownMapfileResponse(struct soap*, const char*, _ns1__DownMapfileResponse *, const char*);
SOAP_FMAC1 _ns1__DownMapfileResponse * SOAP_FMAC2 soap_instantiate__ns1__DownMapfileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownMapfileResponse * soap_new__ns1__DownMapfileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownMapfileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownMapfileResponse * soap_new_req__ns1__DownMapfileResponse(
	struct soap *soap)
{
	_ns1__DownMapfileResponse *_p = ::soap_new__ns1__DownMapfileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownMapfileResponse * soap_new_set__ns1__DownMapfileResponse(
	struct soap *soap,
	char *DownMapfileResult)
{
	_ns1__DownMapfileResponse *_p = ::soap_new__ns1__DownMapfileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownMapfileResponse::DownMapfileResult = DownMapfileResult;
	}
	return _p;
}

inline int soap_write__ns1__DownMapfileResponse(struct soap *soap, _ns1__DownMapfileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownMapfileResponse", p->soap_type() == SOAP_TYPE__ns1__DownMapfileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownMapfileResponse(struct soap *soap, const char *URL, _ns1__DownMapfileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownMapfileResponse", p->soap_type() == SOAP_TYPE__ns1__DownMapfileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownMapfileResponse(struct soap *soap, const char *URL, _ns1__DownMapfileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownMapfileResponse", p->soap_type() == SOAP_TYPE__ns1__DownMapfileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownMapfileResponse * SOAP_FMAC4 soap_get__ns1__DownMapfileResponse(struct soap*, _ns1__DownMapfileResponse *, const char*, const char*);

inline int soap_read__ns1__DownMapfileResponse(struct soap *soap, _ns1__DownMapfileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownMapfileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownMapfileResponse(struct soap *soap, const char *URL, _ns1__DownMapfileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownMapfileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownMapfileResponse(struct soap *soap, _ns1__DownMapfileResponse *p)
{
	if (::soap_read__ns1__DownMapfileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownMapfile_DEFINED
#define SOAP_TYPE__ns1__DownMapfile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownMapfile(struct soap*, const char*, int, const _ns1__DownMapfile *, const char*);
SOAP_FMAC3 _ns1__DownMapfile * SOAP_FMAC4 soap_in__ns1__DownMapfile(struct soap*, const char*, _ns1__DownMapfile *, const char*);
SOAP_FMAC1 _ns1__DownMapfile * SOAP_FMAC2 soap_instantiate__ns1__DownMapfile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownMapfile * soap_new__ns1__DownMapfile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownMapfile(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownMapfile * soap_new_req__ns1__DownMapfile(
	struct soap *soap)
{
	_ns1__DownMapfile *_p = ::soap_new__ns1__DownMapfile(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownMapfile * soap_new_set__ns1__DownMapfile(
	struct soap *soap,
	char *filename)
{
	_ns1__DownMapfile *_p = ::soap_new__ns1__DownMapfile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownMapfile::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__DownMapfile(struct soap *soap, _ns1__DownMapfile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownMapfile", p->soap_type() == SOAP_TYPE__ns1__DownMapfile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownMapfile(struct soap *soap, const char *URL, _ns1__DownMapfile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownMapfile", p->soap_type() == SOAP_TYPE__ns1__DownMapfile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownMapfile(struct soap *soap, const char *URL, _ns1__DownMapfile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownMapfile", p->soap_type() == SOAP_TYPE__ns1__DownMapfile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownMapfile * SOAP_FMAC4 soap_get__ns1__DownMapfile(struct soap*, _ns1__DownMapfile *, const char*, const char*);

inline int soap_read__ns1__DownMapfile(struct soap *soap, _ns1__DownMapfile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownMapfile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownMapfile(struct soap *soap, const char *URL, _ns1__DownMapfile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownMapfile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownMapfile(struct soap *soap, _ns1__DownMapfile *p)
{
	if (::soap_read__ns1__DownMapfile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDownFileInfoResponse_DEFINED
#define SOAP_TYPE__ns1__GetDownFileInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDownFileInfoResponse(struct soap*, const char*, int, const _ns1__GetDownFileInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetDownFileInfoResponse * SOAP_FMAC4 soap_in__ns1__GetDownFileInfoResponse(struct soap*, const char*, _ns1__GetDownFileInfoResponse *, const char*);
SOAP_FMAC1 _ns1__GetDownFileInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDownFileInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDownFileInfoResponse * soap_new__ns1__GetDownFileInfoResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDownFileInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDownFileInfoResponse * soap_new_req__ns1__GetDownFileInfoResponse(
	struct soap *soap)
{
	_ns1__GetDownFileInfoResponse *_p = ::soap_new__ns1__GetDownFileInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDownFileInfoResponse * soap_new_set__ns1__GetDownFileInfoResponse(
	struct soap *soap,
	char *GetDownFileInfoResult)
{
	_ns1__GetDownFileInfoResponse *_p = ::soap_new__ns1__GetDownFileInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDownFileInfoResponse::GetDownFileInfoResult = GetDownFileInfoResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDownFileInfoResponse(struct soap *soap, _ns1__GetDownFileInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDownFileInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetDownFileInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDownFileInfoResponse(struct soap *soap, const char *URL, _ns1__GetDownFileInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDownFileInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetDownFileInfoResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDownFileInfoResponse(struct soap *soap, const char *URL, _ns1__GetDownFileInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDownFileInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetDownFileInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDownFileInfoResponse * SOAP_FMAC4 soap_get__ns1__GetDownFileInfoResponse(struct soap*, _ns1__GetDownFileInfoResponse *, const char*, const char*);

inline int soap_read__ns1__GetDownFileInfoResponse(struct soap *soap, _ns1__GetDownFileInfoResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDownFileInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDownFileInfoResponse(struct soap *soap, const char *URL, _ns1__GetDownFileInfoResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDownFileInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDownFileInfoResponse(struct soap *soap, _ns1__GetDownFileInfoResponse *p)
{
	if (::soap_read__ns1__GetDownFileInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDownFileInfo_DEFINED
#define SOAP_TYPE__ns1__GetDownFileInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDownFileInfo(struct soap*, const char*, int, const _ns1__GetDownFileInfo *, const char*);
SOAP_FMAC3 _ns1__GetDownFileInfo * SOAP_FMAC4 soap_in__ns1__GetDownFileInfo(struct soap*, const char*, _ns1__GetDownFileInfo *, const char*);
SOAP_FMAC1 _ns1__GetDownFileInfo * SOAP_FMAC2 soap_instantiate__ns1__GetDownFileInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDownFileInfo * soap_new__ns1__GetDownFileInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDownFileInfo(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDownFileInfo * soap_new_req__ns1__GetDownFileInfo(
	struct soap *soap)
{
	_ns1__GetDownFileInfo *_p = ::soap_new__ns1__GetDownFileInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDownFileInfo * soap_new_set__ns1__GetDownFileInfo(
	struct soap *soap,
	char *fname)
{
	_ns1__GetDownFileInfo *_p = ::soap_new__ns1__GetDownFileInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDownFileInfo::fname = fname;
	}
	return _p;
}

inline int soap_write__ns1__GetDownFileInfo(struct soap *soap, _ns1__GetDownFileInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDownFileInfo", p->soap_type() == SOAP_TYPE__ns1__GetDownFileInfo ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDownFileInfo(struct soap *soap, const char *URL, _ns1__GetDownFileInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDownFileInfo", p->soap_type() == SOAP_TYPE__ns1__GetDownFileInfo ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDownFileInfo(struct soap *soap, const char *URL, _ns1__GetDownFileInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDownFileInfo", p->soap_type() == SOAP_TYPE__ns1__GetDownFileInfo ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDownFileInfo * SOAP_FMAC4 soap_get__ns1__GetDownFileInfo(struct soap*, _ns1__GetDownFileInfo *, const char*, const char*);

inline int soap_read__ns1__GetDownFileInfo(struct soap *soap, _ns1__GetDownFileInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDownFileInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDownFileInfo(struct soap *soap, const char *URL, _ns1__GetDownFileInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDownFileInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDownFileInfo(struct soap *soap, _ns1__GetDownFileInfo *p)
{
	if (::soap_read__ns1__GetDownFileInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetGxDeviceDataResponse_DEFINED
#define SOAP_TYPE__ns1__GetGxDeviceDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGxDeviceDataResponse(struct soap*, const char*, int, const _ns1__GetGxDeviceDataResponse *, const char*);
SOAP_FMAC3 _ns1__GetGxDeviceDataResponse * SOAP_FMAC4 soap_in__ns1__GetGxDeviceDataResponse(struct soap*, const char*, _ns1__GetGxDeviceDataResponse *, const char*);
SOAP_FMAC1 _ns1__GetGxDeviceDataResponse * SOAP_FMAC2 soap_instantiate__ns1__GetGxDeviceDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGxDeviceDataResponse * soap_new__ns1__GetGxDeviceDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetGxDeviceDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetGxDeviceDataResponse * soap_new_req__ns1__GetGxDeviceDataResponse(
	struct soap *soap)
{
	_ns1__GetGxDeviceDataResponse *_p = ::soap_new__ns1__GetGxDeviceDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetGxDeviceDataResponse * soap_new_set__ns1__GetGxDeviceDataResponse(
	struct soap *soap,
	char *GetGxDeviceDataResult)
{
	_ns1__GetGxDeviceDataResponse *_p = ::soap_new__ns1__GetGxDeviceDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetGxDeviceDataResponse::GetGxDeviceDataResult = GetGxDeviceDataResult;
	}
	return _p;
}

inline int soap_write__ns1__GetGxDeviceDataResponse(struct soap *soap, _ns1__GetGxDeviceDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxDeviceDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetGxDeviceDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetGxDeviceDataResponse(struct soap *soap, const char *URL, _ns1__GetGxDeviceDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxDeviceDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetGxDeviceDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetGxDeviceDataResponse(struct soap *soap, const char *URL, _ns1__GetGxDeviceDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxDeviceDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetGxDeviceDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetGxDeviceDataResponse * SOAP_FMAC4 soap_get__ns1__GetGxDeviceDataResponse(struct soap*, _ns1__GetGxDeviceDataResponse *, const char*, const char*);

inline int soap_read__ns1__GetGxDeviceDataResponse(struct soap *soap, _ns1__GetGxDeviceDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetGxDeviceDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetGxDeviceDataResponse(struct soap *soap, const char *URL, _ns1__GetGxDeviceDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetGxDeviceDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetGxDeviceDataResponse(struct soap *soap, _ns1__GetGxDeviceDataResponse *p)
{
	if (::soap_read__ns1__GetGxDeviceDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetGxDeviceData_DEFINED
#define SOAP_TYPE__ns1__GetGxDeviceData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGxDeviceData(struct soap*, const char*, int, const _ns1__GetGxDeviceData *, const char*);
SOAP_FMAC3 _ns1__GetGxDeviceData * SOAP_FMAC4 soap_in__ns1__GetGxDeviceData(struct soap*, const char*, _ns1__GetGxDeviceData *, const char*);
SOAP_FMAC1 _ns1__GetGxDeviceData * SOAP_FMAC2 soap_instantiate__ns1__GetGxDeviceData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGxDeviceData * soap_new__ns1__GetGxDeviceData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetGxDeviceData(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetGxDeviceData * soap_new_req__ns1__GetGxDeviceData(
	struct soap *soap)
{
	_ns1__GetGxDeviceData *_p = ::soap_new__ns1__GetGxDeviceData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetGxDeviceData * soap_new_set__ns1__GetGxDeviceData(
	struct soap *soap,
	char *typeid_,
	char *xb,
	char *station)
{
	_ns1__GetGxDeviceData *_p = ::soap_new__ns1__GetGxDeviceData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetGxDeviceData::typeid_ = typeid_;
		_p->_ns1__GetGxDeviceData::xb = xb;
		_p->_ns1__GetGxDeviceData::station = station;
	}
	return _p;
}

inline int soap_write__ns1__GetGxDeviceData(struct soap *soap, _ns1__GetGxDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxDeviceData", p->soap_type() == SOAP_TYPE__ns1__GetGxDeviceData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetGxDeviceData(struct soap *soap, const char *URL, _ns1__GetGxDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxDeviceData", p->soap_type() == SOAP_TYPE__ns1__GetGxDeviceData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetGxDeviceData(struct soap *soap, const char *URL, _ns1__GetGxDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxDeviceData", p->soap_type() == SOAP_TYPE__ns1__GetGxDeviceData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetGxDeviceData * SOAP_FMAC4 soap_get__ns1__GetGxDeviceData(struct soap*, _ns1__GetGxDeviceData *, const char*, const char*);

inline int soap_read__ns1__GetGxDeviceData(struct soap *soap, _ns1__GetGxDeviceData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetGxDeviceData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetGxDeviceData(struct soap *soap, const char *URL, _ns1__GetGxDeviceData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetGxDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetGxDeviceData(struct soap *soap, _ns1__GetGxDeviceData *p)
{
	if (::soap_read__ns1__GetGxDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapDeviceTypeResponse_DEFINED
#define SOAP_TYPE__ns1__GetMapDeviceTypeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapDeviceTypeResponse(struct soap*, const char*, int, const _ns1__GetMapDeviceTypeResponse *, const char*);
SOAP_FMAC3 _ns1__GetMapDeviceTypeResponse * SOAP_FMAC4 soap_in__ns1__GetMapDeviceTypeResponse(struct soap*, const char*, _ns1__GetMapDeviceTypeResponse *, const char*);
SOAP_FMAC1 _ns1__GetMapDeviceTypeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetMapDeviceTypeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapDeviceTypeResponse * soap_new__ns1__GetMapDeviceTypeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapDeviceTypeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapDeviceTypeResponse * soap_new_req__ns1__GetMapDeviceTypeResponse(
	struct soap *soap)
{
	_ns1__GetMapDeviceTypeResponse *_p = ::soap_new__ns1__GetMapDeviceTypeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapDeviceTypeResponse * soap_new_set__ns1__GetMapDeviceTypeResponse(
	struct soap *soap,
	char *GetMapDeviceTypeResult)
{
	_ns1__GetMapDeviceTypeResponse *_p = ::soap_new__ns1__GetMapDeviceTypeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetMapDeviceTypeResponse::GetMapDeviceTypeResult = GetMapDeviceTypeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetMapDeviceTypeResponse(struct soap *soap, _ns1__GetMapDeviceTypeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceTypeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceTypeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapDeviceTypeResponse(struct soap *soap, const char *URL, _ns1__GetMapDeviceTypeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceTypeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceTypeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapDeviceTypeResponse(struct soap *soap, const char *URL, _ns1__GetMapDeviceTypeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceTypeResponse", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceTypeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapDeviceTypeResponse * SOAP_FMAC4 soap_get__ns1__GetMapDeviceTypeResponse(struct soap*, _ns1__GetMapDeviceTypeResponse *, const char*, const char*);

inline int soap_read__ns1__GetMapDeviceTypeResponse(struct soap *soap, _ns1__GetMapDeviceTypeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapDeviceTypeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapDeviceTypeResponse(struct soap *soap, const char *URL, _ns1__GetMapDeviceTypeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapDeviceTypeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapDeviceTypeResponse(struct soap *soap, _ns1__GetMapDeviceTypeResponse *p)
{
	if (::soap_read__ns1__GetMapDeviceTypeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetMapDeviceType_DEFINED
#define SOAP_TYPE__ns1__GetMapDeviceType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetMapDeviceType(struct soap*, const char*, int, const _ns1__GetMapDeviceType *, const char*);
SOAP_FMAC3 _ns1__GetMapDeviceType * SOAP_FMAC4 soap_in__ns1__GetMapDeviceType(struct soap*, const char*, _ns1__GetMapDeviceType *, const char*);
SOAP_FMAC1 _ns1__GetMapDeviceType * SOAP_FMAC2 soap_instantiate__ns1__GetMapDeviceType(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetMapDeviceType * soap_new__ns1__GetMapDeviceType(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetMapDeviceType(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetMapDeviceType * soap_new_req__ns1__GetMapDeviceType(
	struct soap *soap)
{
	_ns1__GetMapDeviceType *_p = ::soap_new__ns1__GetMapDeviceType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetMapDeviceType * soap_new_set__ns1__GetMapDeviceType(
	struct soap *soap)
{
	_ns1__GetMapDeviceType *_p = ::soap_new__ns1__GetMapDeviceType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetMapDeviceType(struct soap *soap, _ns1__GetMapDeviceType const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceType", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceType ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetMapDeviceType(struct soap *soap, const char *URL, _ns1__GetMapDeviceType const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceType", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceType ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetMapDeviceType(struct soap *soap, const char *URL, _ns1__GetMapDeviceType const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetMapDeviceType", p->soap_type() == SOAP_TYPE__ns1__GetMapDeviceType ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetMapDeviceType * SOAP_FMAC4 soap_get__ns1__GetMapDeviceType(struct soap*, _ns1__GetMapDeviceType *, const char*, const char*);

inline int soap_read__ns1__GetMapDeviceType(struct soap *soap, _ns1__GetMapDeviceType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetMapDeviceType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetMapDeviceType(struct soap *soap, const char *URL, _ns1__GetMapDeviceType *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetMapDeviceType(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetMapDeviceType(struct soap *soap, _ns1__GetMapDeviceType *p)
{
	if (::soap_read__ns1__GetMapDeviceType(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetXbStationListResponse_DEFINED
#define SOAP_TYPE__ns1__GetXbStationListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXbStationListResponse(struct soap*, const char*, int, const _ns1__GetXbStationListResponse *, const char*);
SOAP_FMAC3 _ns1__GetXbStationListResponse * SOAP_FMAC4 soap_in__ns1__GetXbStationListResponse(struct soap*, const char*, _ns1__GetXbStationListResponse *, const char*);
SOAP_FMAC1 _ns1__GetXbStationListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetXbStationListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXbStationListResponse * soap_new__ns1__GetXbStationListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetXbStationListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetXbStationListResponse * soap_new_req__ns1__GetXbStationListResponse(
	struct soap *soap)
{
	_ns1__GetXbStationListResponse *_p = ::soap_new__ns1__GetXbStationListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetXbStationListResponse * soap_new_set__ns1__GetXbStationListResponse(
	struct soap *soap,
	char *GetXbStationListResult)
{
	_ns1__GetXbStationListResponse *_p = ::soap_new__ns1__GetXbStationListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetXbStationListResponse::GetXbStationListResult = GetXbStationListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetXbStationListResponse(struct soap *soap, _ns1__GetXbStationListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbStationListResponse", p->soap_type() == SOAP_TYPE__ns1__GetXbStationListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetXbStationListResponse(struct soap *soap, const char *URL, _ns1__GetXbStationListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbStationListResponse", p->soap_type() == SOAP_TYPE__ns1__GetXbStationListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetXbStationListResponse(struct soap *soap, const char *URL, _ns1__GetXbStationListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbStationListResponse", p->soap_type() == SOAP_TYPE__ns1__GetXbStationListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetXbStationListResponse * SOAP_FMAC4 soap_get__ns1__GetXbStationListResponse(struct soap*, _ns1__GetXbStationListResponse *, const char*, const char*);

inline int soap_read__ns1__GetXbStationListResponse(struct soap *soap, _ns1__GetXbStationListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetXbStationListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetXbStationListResponse(struct soap *soap, const char *URL, _ns1__GetXbStationListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetXbStationListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetXbStationListResponse(struct soap *soap, _ns1__GetXbStationListResponse *p)
{
	if (::soap_read__ns1__GetXbStationListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetXbStationList_DEFINED
#define SOAP_TYPE__ns1__GetXbStationList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXbStationList(struct soap*, const char*, int, const _ns1__GetXbStationList *, const char*);
SOAP_FMAC3 _ns1__GetXbStationList * SOAP_FMAC4 soap_in__ns1__GetXbStationList(struct soap*, const char*, _ns1__GetXbStationList *, const char*);
SOAP_FMAC1 _ns1__GetXbStationList * SOAP_FMAC2 soap_instantiate__ns1__GetXbStationList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXbStationList * soap_new__ns1__GetXbStationList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetXbStationList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetXbStationList * soap_new_req__ns1__GetXbStationList(
	struct soap *soap)
{
	_ns1__GetXbStationList *_p = ::soap_new__ns1__GetXbStationList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetXbStationList * soap_new_set__ns1__GetXbStationList(
	struct soap *soap,
	char *xb,
	char *unit)
{
	_ns1__GetXbStationList *_p = ::soap_new__ns1__GetXbStationList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetXbStationList::xb = xb;
		_p->_ns1__GetXbStationList::unit = unit;
	}
	return _p;
}

inline int soap_write__ns1__GetXbStationList(struct soap *soap, _ns1__GetXbStationList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbStationList", p->soap_type() == SOAP_TYPE__ns1__GetXbStationList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetXbStationList(struct soap *soap, const char *URL, _ns1__GetXbStationList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbStationList", p->soap_type() == SOAP_TYPE__ns1__GetXbStationList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetXbStationList(struct soap *soap, const char *URL, _ns1__GetXbStationList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbStationList", p->soap_type() == SOAP_TYPE__ns1__GetXbStationList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetXbStationList * SOAP_FMAC4 soap_get__ns1__GetXbStationList(struct soap*, _ns1__GetXbStationList *, const char*, const char*);

inline int soap_read__ns1__GetXbStationList(struct soap *soap, _ns1__GetXbStationList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetXbStationList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetXbStationList(struct soap *soap, const char *URL, _ns1__GetXbStationList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetXbStationList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetXbStationList(struct soap *soap, _ns1__GetXbStationList *p)
{
	if (::soap_read__ns1__GetXbStationList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetXbListResponse_DEFINED
#define SOAP_TYPE__ns1__GetXbListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXbListResponse(struct soap*, const char*, int, const _ns1__GetXbListResponse *, const char*);
SOAP_FMAC3 _ns1__GetXbListResponse * SOAP_FMAC4 soap_in__ns1__GetXbListResponse(struct soap*, const char*, _ns1__GetXbListResponse *, const char*);
SOAP_FMAC1 _ns1__GetXbListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetXbListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXbListResponse * soap_new__ns1__GetXbListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetXbListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetXbListResponse * soap_new_req__ns1__GetXbListResponse(
	struct soap *soap)
{
	_ns1__GetXbListResponse *_p = ::soap_new__ns1__GetXbListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetXbListResponse * soap_new_set__ns1__GetXbListResponse(
	struct soap *soap,
	char *GetXbListResult)
{
	_ns1__GetXbListResponse *_p = ::soap_new__ns1__GetXbListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetXbListResponse::GetXbListResult = GetXbListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetXbListResponse(struct soap *soap, _ns1__GetXbListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbListResponse", p->soap_type() == SOAP_TYPE__ns1__GetXbListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetXbListResponse(struct soap *soap, const char *URL, _ns1__GetXbListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbListResponse", p->soap_type() == SOAP_TYPE__ns1__GetXbListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetXbListResponse(struct soap *soap, const char *URL, _ns1__GetXbListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbListResponse", p->soap_type() == SOAP_TYPE__ns1__GetXbListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetXbListResponse * SOAP_FMAC4 soap_get__ns1__GetXbListResponse(struct soap*, _ns1__GetXbListResponse *, const char*, const char*);

inline int soap_read__ns1__GetXbListResponse(struct soap *soap, _ns1__GetXbListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetXbListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetXbListResponse(struct soap *soap, const char *URL, _ns1__GetXbListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetXbListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetXbListResponse(struct soap *soap, _ns1__GetXbListResponse *p)
{
	if (::soap_read__ns1__GetXbListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetXbList_DEFINED
#define SOAP_TYPE__ns1__GetXbList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXbList(struct soap*, const char*, int, const _ns1__GetXbList *, const char*);
SOAP_FMAC3 _ns1__GetXbList * SOAP_FMAC4 soap_in__ns1__GetXbList(struct soap*, const char*, _ns1__GetXbList *, const char*);
SOAP_FMAC1 _ns1__GetXbList * SOAP_FMAC2 soap_instantiate__ns1__GetXbList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXbList * soap_new__ns1__GetXbList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetXbList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetXbList * soap_new_req__ns1__GetXbList(
	struct soap *soap)
{
	_ns1__GetXbList *_p = ::soap_new__ns1__GetXbList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetXbList * soap_new_set__ns1__GetXbList(
	struct soap *soap,
	char *unit)
{
	_ns1__GetXbList *_p = ::soap_new__ns1__GetXbList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetXbList::unit = unit;
	}
	return _p;
}

inline int soap_write__ns1__GetXbList(struct soap *soap, _ns1__GetXbList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbList", p->soap_type() == SOAP_TYPE__ns1__GetXbList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetXbList(struct soap *soap, const char *URL, _ns1__GetXbList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbList", p->soap_type() == SOAP_TYPE__ns1__GetXbList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetXbList(struct soap *soap, const char *URL, _ns1__GetXbList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXbList", p->soap_type() == SOAP_TYPE__ns1__GetXbList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetXbList * SOAP_FMAC4 soap_get__ns1__GetXbList(struct soap*, _ns1__GetXbList *, const char*, const char*);

inline int soap_read__ns1__GetXbList(struct soap *soap, _ns1__GetXbList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetXbList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetXbList(struct soap *soap, const char *URL, _ns1__GetXbList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetXbList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetXbList(struct soap *soap, _ns1__GetXbList *p)
{
	if (::soap_read__ns1__GetXbList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetFileSizeResponse_DEFINED
#define SOAP_TYPE__ns1__GetFileSizeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFileSizeResponse(struct soap*, const char*, int, const _ns1__GetFileSizeResponse *, const char*);
SOAP_FMAC3 _ns1__GetFileSizeResponse * SOAP_FMAC4 soap_in__ns1__GetFileSizeResponse(struct soap*, const char*, _ns1__GetFileSizeResponse *, const char*);
SOAP_FMAC1 _ns1__GetFileSizeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetFileSizeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFileSizeResponse * soap_new__ns1__GetFileSizeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetFileSizeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetFileSizeResponse * soap_new_req__ns1__GetFileSizeResponse(
	struct soap *soap,
	LONG64 GetFileSizeResult)
{
	_ns1__GetFileSizeResponse *_p = ::soap_new__ns1__GetFileSizeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFileSizeResponse::GetFileSizeResult = GetFileSizeResult;
	}
	return _p;
}

inline _ns1__GetFileSizeResponse * soap_new_set__ns1__GetFileSizeResponse(
	struct soap *soap,
	LONG64 GetFileSizeResult)
{
	_ns1__GetFileSizeResponse *_p = ::soap_new__ns1__GetFileSizeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFileSizeResponse::GetFileSizeResult = GetFileSizeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetFileSizeResponse(struct soap *soap, _ns1__GetFileSizeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileSizeResponse", p->soap_type() == SOAP_TYPE__ns1__GetFileSizeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetFileSizeResponse(struct soap *soap, const char *URL, _ns1__GetFileSizeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileSizeResponse", p->soap_type() == SOAP_TYPE__ns1__GetFileSizeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetFileSizeResponse(struct soap *soap, const char *URL, _ns1__GetFileSizeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileSizeResponse", p->soap_type() == SOAP_TYPE__ns1__GetFileSizeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetFileSizeResponse * SOAP_FMAC4 soap_get__ns1__GetFileSizeResponse(struct soap*, _ns1__GetFileSizeResponse *, const char*, const char*);

inline int soap_read__ns1__GetFileSizeResponse(struct soap *soap, _ns1__GetFileSizeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetFileSizeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetFileSizeResponse(struct soap *soap, const char *URL, _ns1__GetFileSizeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetFileSizeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetFileSizeResponse(struct soap *soap, _ns1__GetFileSizeResponse *p)
{
	if (::soap_read__ns1__GetFileSizeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetFileSize_DEFINED
#define SOAP_TYPE__ns1__GetFileSize_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFileSize(struct soap*, const char*, int, const _ns1__GetFileSize *, const char*);
SOAP_FMAC3 _ns1__GetFileSize * SOAP_FMAC4 soap_in__ns1__GetFileSize(struct soap*, const char*, _ns1__GetFileSize *, const char*);
SOAP_FMAC1 _ns1__GetFileSize * SOAP_FMAC2 soap_instantiate__ns1__GetFileSize(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFileSize * soap_new__ns1__GetFileSize(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetFileSize(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetFileSize * soap_new_req__ns1__GetFileSize(
	struct soap *soap)
{
	_ns1__GetFileSize *_p = ::soap_new__ns1__GetFileSize(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetFileSize * soap_new_set__ns1__GetFileSize(
	struct soap *soap,
	char *filename)
{
	_ns1__GetFileSize *_p = ::soap_new__ns1__GetFileSize(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetFileSize::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetFileSize(struct soap *soap, _ns1__GetFileSize const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileSize", p->soap_type() == SOAP_TYPE__ns1__GetFileSize ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetFileSize(struct soap *soap, const char *URL, _ns1__GetFileSize const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileSize", p->soap_type() == SOAP_TYPE__ns1__GetFileSize ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetFileSize(struct soap *soap, const char *URL, _ns1__GetFileSize const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetFileSize", p->soap_type() == SOAP_TYPE__ns1__GetFileSize ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetFileSize * SOAP_FMAC4 soap_get__ns1__GetFileSize(struct soap*, _ns1__GetFileSize *, const char*, const char*);

inline int soap_read__ns1__GetFileSize(struct soap *soap, _ns1__GetFileSize *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetFileSize(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetFileSize(struct soap *soap, const char *URL, _ns1__GetFileSize *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetFileSize(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetFileSize(struct soap *soap, _ns1__GetFileSize *p)
{
	if (::soap_read__ns1__GetFileSize(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitPersonInfoResponse_DEFINED
#define SOAP_TYPE__ns1__GetUnitPersonInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitPersonInfoResponse(struct soap*, const char*, int, const _ns1__GetUnitPersonInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetUnitPersonInfoResponse * SOAP_FMAC4 soap_in__ns1__GetUnitPersonInfoResponse(struct soap*, const char*, _ns1__GetUnitPersonInfoResponse *, const char*);
SOAP_FMAC1 _ns1__GetUnitPersonInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUnitPersonInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitPersonInfoResponse * soap_new__ns1__GetUnitPersonInfoResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitPersonInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitPersonInfoResponse * soap_new_req__ns1__GetUnitPersonInfoResponse(
	struct soap *soap)
{
	_ns1__GetUnitPersonInfoResponse *_p = ::soap_new__ns1__GetUnitPersonInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetUnitPersonInfoResponse * soap_new_set__ns1__GetUnitPersonInfoResponse(
	struct soap *soap,
	char *GetUnitPersonInfoResult)
{
	_ns1__GetUnitPersonInfoResponse *_p = ::soap_new__ns1__GetUnitPersonInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitPersonInfoResponse::GetUnitPersonInfoResult = GetUnitPersonInfoResult;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitPersonInfoResponse(struct soap *soap, _ns1__GetUnitPersonInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitPersonInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitPersonInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitPersonInfoResponse(struct soap *soap, const char *URL, _ns1__GetUnitPersonInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitPersonInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitPersonInfoResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitPersonInfoResponse(struct soap *soap, const char *URL, _ns1__GetUnitPersonInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitPersonInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitPersonInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitPersonInfoResponse * SOAP_FMAC4 soap_get__ns1__GetUnitPersonInfoResponse(struct soap*, _ns1__GetUnitPersonInfoResponse *, const char*, const char*);

inline int soap_read__ns1__GetUnitPersonInfoResponse(struct soap *soap, _ns1__GetUnitPersonInfoResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitPersonInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitPersonInfoResponse(struct soap *soap, const char *URL, _ns1__GetUnitPersonInfoResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitPersonInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitPersonInfoResponse(struct soap *soap, _ns1__GetUnitPersonInfoResponse *p)
{
	if (::soap_read__ns1__GetUnitPersonInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitPersonInfo_DEFINED
#define SOAP_TYPE__ns1__GetUnitPersonInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitPersonInfo(struct soap*, const char*, int, const _ns1__GetUnitPersonInfo *, const char*);
SOAP_FMAC3 _ns1__GetUnitPersonInfo * SOAP_FMAC4 soap_in__ns1__GetUnitPersonInfo(struct soap*, const char*, _ns1__GetUnitPersonInfo *, const char*);
SOAP_FMAC1 _ns1__GetUnitPersonInfo * SOAP_FMAC2 soap_instantiate__ns1__GetUnitPersonInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitPersonInfo * soap_new__ns1__GetUnitPersonInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitPersonInfo(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitPersonInfo * soap_new_req__ns1__GetUnitPersonInfo(
	struct soap *soap,
	int unitid,
	int personid)
{
	_ns1__GetUnitPersonInfo *_p = ::soap_new__ns1__GetUnitPersonInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitPersonInfo::unitid = unitid;
		_p->_ns1__GetUnitPersonInfo::personid = personid;
	}
	return _p;
}

inline _ns1__GetUnitPersonInfo * soap_new_set__ns1__GetUnitPersonInfo(
	struct soap *soap,
	char *dwname,
	int unitid,
	int personid)
{
	_ns1__GetUnitPersonInfo *_p = ::soap_new__ns1__GetUnitPersonInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitPersonInfo::dwname = dwname;
		_p->_ns1__GetUnitPersonInfo::unitid = unitid;
		_p->_ns1__GetUnitPersonInfo::personid = personid;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitPersonInfo(struct soap *soap, _ns1__GetUnitPersonInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitPersonInfo", p->soap_type() == SOAP_TYPE__ns1__GetUnitPersonInfo ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitPersonInfo(struct soap *soap, const char *URL, _ns1__GetUnitPersonInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitPersonInfo", p->soap_type() == SOAP_TYPE__ns1__GetUnitPersonInfo ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitPersonInfo(struct soap *soap, const char *URL, _ns1__GetUnitPersonInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitPersonInfo", p->soap_type() == SOAP_TYPE__ns1__GetUnitPersonInfo ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitPersonInfo * SOAP_FMAC4 soap_get__ns1__GetUnitPersonInfo(struct soap*, _ns1__GetUnitPersonInfo *, const char*, const char*);

inline int soap_read__ns1__GetUnitPersonInfo(struct soap *soap, _ns1__GetUnitPersonInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitPersonInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitPersonInfo(struct soap *soap, const char *URL, _ns1__GetUnitPersonInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitPersonInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitPersonInfo(struct soap *soap, _ns1__GetUnitPersonInfo *p)
{
	if (::soap_read__ns1__GetUnitPersonInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitStructResponse_DEFINED
#define SOAP_TYPE__ns1__GetUnitStructResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitStructResponse(struct soap*, const char*, int, const _ns1__GetUnitStructResponse *, const char*);
SOAP_FMAC3 _ns1__GetUnitStructResponse * SOAP_FMAC4 soap_in__ns1__GetUnitStructResponse(struct soap*, const char*, _ns1__GetUnitStructResponse *, const char*);
SOAP_FMAC1 _ns1__GetUnitStructResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUnitStructResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitStructResponse * soap_new__ns1__GetUnitStructResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitStructResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitStructResponse * soap_new_req__ns1__GetUnitStructResponse(
	struct soap *soap)
{
	_ns1__GetUnitStructResponse *_p = ::soap_new__ns1__GetUnitStructResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetUnitStructResponse * soap_new_set__ns1__GetUnitStructResponse(
	struct soap *soap,
	char *GetUnitStructResult)
{
	_ns1__GetUnitStructResponse *_p = ::soap_new__ns1__GetUnitStructResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitStructResponse::GetUnitStructResult = GetUnitStructResult;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitStructResponse(struct soap *soap, _ns1__GetUnitStructResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStructResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitStructResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitStructResponse(struct soap *soap, const char *URL, _ns1__GetUnitStructResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStructResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitStructResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitStructResponse(struct soap *soap, const char *URL, _ns1__GetUnitStructResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStructResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitStructResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitStructResponse * SOAP_FMAC4 soap_get__ns1__GetUnitStructResponse(struct soap*, _ns1__GetUnitStructResponse *, const char*, const char*);

inline int soap_read__ns1__GetUnitStructResponse(struct soap *soap, _ns1__GetUnitStructResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitStructResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitStructResponse(struct soap *soap, const char *URL, _ns1__GetUnitStructResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitStructResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitStructResponse(struct soap *soap, _ns1__GetUnitStructResponse *p)
{
	if (::soap_read__ns1__GetUnitStructResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitStruct_DEFINED
#define SOAP_TYPE__ns1__GetUnitStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitStruct(struct soap*, const char*, int, const _ns1__GetUnitStruct *, const char*);
SOAP_FMAC3 _ns1__GetUnitStruct * SOAP_FMAC4 soap_in__ns1__GetUnitStruct(struct soap*, const char*, _ns1__GetUnitStruct *, const char*);
SOAP_FMAC1 _ns1__GetUnitStruct * SOAP_FMAC2 soap_instantiate__ns1__GetUnitStruct(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitStruct * soap_new__ns1__GetUnitStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitStruct(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitStruct * soap_new_req__ns1__GetUnitStruct(
	struct soap *soap,
	int level)
{
	_ns1__GetUnitStruct *_p = ::soap_new__ns1__GetUnitStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitStruct::level = level;
	}
	return _p;
}

inline _ns1__GetUnitStruct * soap_new_set__ns1__GetUnitStruct(
	struct soap *soap,
	char *dwname,
	int level)
{
	_ns1__GetUnitStruct *_p = ::soap_new__ns1__GetUnitStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitStruct::dwname = dwname;
		_p->_ns1__GetUnitStruct::level = level;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitStruct(struct soap *soap, _ns1__GetUnitStruct const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStruct", p->soap_type() == SOAP_TYPE__ns1__GetUnitStruct ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitStruct(struct soap *soap, const char *URL, _ns1__GetUnitStruct const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStruct", p->soap_type() == SOAP_TYPE__ns1__GetUnitStruct ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitStruct(struct soap *soap, const char *URL, _ns1__GetUnitStruct const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStruct", p->soap_type() == SOAP_TYPE__ns1__GetUnitStruct ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitStruct * SOAP_FMAC4 soap_get__ns1__GetUnitStruct(struct soap*, _ns1__GetUnitStruct *, const char*, const char*);

inline int soap_read__ns1__GetUnitStruct(struct soap *soap, _ns1__GetUnitStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitStruct(struct soap *soap, const char *URL, _ns1__GetUnitStruct *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitStruct(struct soap *soap, _ns1__GetUnitStruct *p)
{
	if (::soap_read__ns1__GetUnitStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitStationResponse_DEFINED
#define SOAP_TYPE__ns1__GetUnitStationResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitStationResponse(struct soap*, const char*, int, const _ns1__GetUnitStationResponse *, const char*);
SOAP_FMAC3 _ns1__GetUnitStationResponse * SOAP_FMAC4 soap_in__ns1__GetUnitStationResponse(struct soap*, const char*, _ns1__GetUnitStationResponse *, const char*);
SOAP_FMAC1 _ns1__GetUnitStationResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUnitStationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitStationResponse * soap_new__ns1__GetUnitStationResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitStationResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitStationResponse * soap_new_req__ns1__GetUnitStationResponse(
	struct soap *soap)
{
	_ns1__GetUnitStationResponse *_p = ::soap_new__ns1__GetUnitStationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetUnitStationResponse * soap_new_set__ns1__GetUnitStationResponse(
	struct soap *soap,
	char *GetUnitStationResult)
{
	_ns1__GetUnitStationResponse *_p = ::soap_new__ns1__GetUnitStationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitStationResponse::GetUnitStationResult = GetUnitStationResult;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitStationResponse(struct soap *soap, _ns1__GetUnitStationResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStationResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitStationResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitStationResponse(struct soap *soap, const char *URL, _ns1__GetUnitStationResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStationResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitStationResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitStationResponse(struct soap *soap, const char *URL, _ns1__GetUnitStationResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStationResponse", p->soap_type() == SOAP_TYPE__ns1__GetUnitStationResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitStationResponse * SOAP_FMAC4 soap_get__ns1__GetUnitStationResponse(struct soap*, _ns1__GetUnitStationResponse *, const char*, const char*);

inline int soap_read__ns1__GetUnitStationResponse(struct soap *soap, _ns1__GetUnitStationResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitStationResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitStationResponse(struct soap *soap, const char *URL, _ns1__GetUnitStationResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitStationResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitStationResponse(struct soap *soap, _ns1__GetUnitStationResponse *p)
{
	if (::soap_read__ns1__GetUnitStationResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetUnitStation_DEFINED
#define SOAP_TYPE__ns1__GetUnitStation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUnitStation(struct soap*, const char*, int, const _ns1__GetUnitStation *, const char*);
SOAP_FMAC3 _ns1__GetUnitStation * SOAP_FMAC4 soap_in__ns1__GetUnitStation(struct soap*, const char*, _ns1__GetUnitStation *, const char*);
SOAP_FMAC1 _ns1__GetUnitStation * SOAP_FMAC2 soap_instantiate__ns1__GetUnitStation(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUnitStation * soap_new__ns1__GetUnitStation(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetUnitStation(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetUnitStation * soap_new_req__ns1__GetUnitStation(
	struct soap *soap,
	int level)
{
	_ns1__GetUnitStation *_p = ::soap_new__ns1__GetUnitStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitStation::level = level;
	}
	return _p;
}

inline _ns1__GetUnitStation * soap_new_set__ns1__GetUnitStation(
	struct soap *soap,
	char *dwname,
	int level)
{
	_ns1__GetUnitStation *_p = ::soap_new__ns1__GetUnitStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetUnitStation::dwname = dwname;
		_p->_ns1__GetUnitStation::level = level;
	}
	return _p;
}

inline int soap_write__ns1__GetUnitStation(struct soap *soap, _ns1__GetUnitStation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStation", p->soap_type() == SOAP_TYPE__ns1__GetUnitStation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetUnitStation(struct soap *soap, const char *URL, _ns1__GetUnitStation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStation", p->soap_type() == SOAP_TYPE__ns1__GetUnitStation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetUnitStation(struct soap *soap, const char *URL, _ns1__GetUnitStation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetUnitStation", p->soap_type() == SOAP_TYPE__ns1__GetUnitStation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetUnitStation * SOAP_FMAC4 soap_get__ns1__GetUnitStation(struct soap*, _ns1__GetUnitStation *, const char*, const char*);

inline int soap_read__ns1__GetUnitStation(struct soap *soap, _ns1__GetUnitStation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetUnitStation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetUnitStation(struct soap *soap, const char *URL, _ns1__GetUnitStation *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetUnitStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetUnitStation(struct soap *soap, _ns1__GetUnitStation *p)
{
	if (::soap_read__ns1__GetUnitStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDwListResponse_DEFINED
#define SOAP_TYPE__ns1__GetDwListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDwListResponse(struct soap*, const char*, int, const _ns1__GetDwListResponse *, const char*);
SOAP_FMAC3 _ns1__GetDwListResponse * SOAP_FMAC4 soap_in__ns1__GetDwListResponse(struct soap*, const char*, _ns1__GetDwListResponse *, const char*);
SOAP_FMAC1 _ns1__GetDwListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDwListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDwListResponse * soap_new__ns1__GetDwListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDwListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDwListResponse * soap_new_req__ns1__GetDwListResponse(
	struct soap *soap)
{
	_ns1__GetDwListResponse *_p = ::soap_new__ns1__GetDwListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDwListResponse * soap_new_set__ns1__GetDwListResponse(
	struct soap *soap,
	char *GetDwListResult)
{
	_ns1__GetDwListResponse *_p = ::soap_new__ns1__GetDwListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwListResponse::GetDwListResult = GetDwListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDwListResponse(struct soap *soap, _ns1__GetDwListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwListResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDwListResponse(struct soap *soap, const char *URL, _ns1__GetDwListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwListResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDwListResponse(struct soap *soap, const char *URL, _ns1__GetDwListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwListResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDwListResponse * SOAP_FMAC4 soap_get__ns1__GetDwListResponse(struct soap*, _ns1__GetDwListResponse *, const char*, const char*);

inline int soap_read__ns1__GetDwListResponse(struct soap *soap, _ns1__GetDwListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDwListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDwListResponse(struct soap *soap, const char *URL, _ns1__GetDwListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDwListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDwListResponse(struct soap *soap, _ns1__GetDwListResponse *p)
{
	if (::soap_read__ns1__GetDwListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDwList_DEFINED
#define SOAP_TYPE__ns1__GetDwList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDwList(struct soap*, const char*, int, const _ns1__GetDwList *, const char*);
SOAP_FMAC3 _ns1__GetDwList * SOAP_FMAC4 soap_in__ns1__GetDwList(struct soap*, const char*, _ns1__GetDwList *, const char*);
SOAP_FMAC1 _ns1__GetDwList * SOAP_FMAC2 soap_instantiate__ns1__GetDwList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDwList * soap_new__ns1__GetDwList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDwList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDwList * soap_new_req__ns1__GetDwList(
	struct soap *soap)
{
	_ns1__GetDwList *_p = ::soap_new__ns1__GetDwList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDwList * soap_new_set__ns1__GetDwList(
	struct soap *soap,
	char *dwname)
{
	_ns1__GetDwList *_p = ::soap_new__ns1__GetDwList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwList::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__GetDwList(struct soap *soap, _ns1__GetDwList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwList", p->soap_type() == SOAP_TYPE__ns1__GetDwList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDwList(struct soap *soap, const char *URL, _ns1__GetDwList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwList", p->soap_type() == SOAP_TYPE__ns1__GetDwList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDwList(struct soap *soap, const char *URL, _ns1__GetDwList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwList", p->soap_type() == SOAP_TYPE__ns1__GetDwList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDwList * SOAP_FMAC4 soap_get__ns1__GetDwList(struct soap*, _ns1__GetDwList *, const char*, const char*);

inline int soap_read__ns1__GetDwList(struct soap *soap, _ns1__GetDwList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDwList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDwList(struct soap *soap, const char *URL, _ns1__GetDwList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDwList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDwList(struct soap *soap, _ns1__GetDwList *p)
{
	if (::soap_read__ns1__GetDwList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetOpenFireInfoResponse_DEFINED
#define SOAP_TYPE__ns1__GetOpenFireInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetOpenFireInfoResponse(struct soap*, const char*, int, const _ns1__GetOpenFireInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetOpenFireInfoResponse * SOAP_FMAC4 soap_in__ns1__GetOpenFireInfoResponse(struct soap*, const char*, _ns1__GetOpenFireInfoResponse *, const char*);
SOAP_FMAC1 _ns1__GetOpenFireInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetOpenFireInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetOpenFireInfoResponse * soap_new__ns1__GetOpenFireInfoResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetOpenFireInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetOpenFireInfoResponse * soap_new_req__ns1__GetOpenFireInfoResponse(
	struct soap *soap)
{
	_ns1__GetOpenFireInfoResponse *_p = ::soap_new__ns1__GetOpenFireInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetOpenFireInfoResponse * soap_new_set__ns1__GetOpenFireInfoResponse(
	struct soap *soap,
	char *GetOpenFireInfoResult)
{
	_ns1__GetOpenFireInfoResponse *_p = ::soap_new__ns1__GetOpenFireInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetOpenFireInfoResponse::GetOpenFireInfoResult = GetOpenFireInfoResult;
	}
	return _p;
}

inline int soap_write__ns1__GetOpenFireInfoResponse(struct soap *soap, _ns1__GetOpenFireInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOpenFireInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetOpenFireInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetOpenFireInfoResponse(struct soap *soap, const char *URL, _ns1__GetOpenFireInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOpenFireInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetOpenFireInfoResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetOpenFireInfoResponse(struct soap *soap, const char *URL, _ns1__GetOpenFireInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOpenFireInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetOpenFireInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetOpenFireInfoResponse * SOAP_FMAC4 soap_get__ns1__GetOpenFireInfoResponse(struct soap*, _ns1__GetOpenFireInfoResponse *, const char*, const char*);

inline int soap_read__ns1__GetOpenFireInfoResponse(struct soap *soap, _ns1__GetOpenFireInfoResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetOpenFireInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetOpenFireInfoResponse(struct soap *soap, const char *URL, _ns1__GetOpenFireInfoResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetOpenFireInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetOpenFireInfoResponse(struct soap *soap, _ns1__GetOpenFireInfoResponse *p)
{
	if (::soap_read__ns1__GetOpenFireInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetOpenFireInfo_DEFINED
#define SOAP_TYPE__ns1__GetOpenFireInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetOpenFireInfo(struct soap*, const char*, int, const _ns1__GetOpenFireInfo *, const char*);
SOAP_FMAC3 _ns1__GetOpenFireInfo * SOAP_FMAC4 soap_in__ns1__GetOpenFireInfo(struct soap*, const char*, _ns1__GetOpenFireInfo *, const char*);
SOAP_FMAC1 _ns1__GetOpenFireInfo * SOAP_FMAC2 soap_instantiate__ns1__GetOpenFireInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetOpenFireInfo * soap_new__ns1__GetOpenFireInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetOpenFireInfo(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetOpenFireInfo * soap_new_req__ns1__GetOpenFireInfo(
	struct soap *soap)
{
	_ns1__GetOpenFireInfo *_p = ::soap_new__ns1__GetOpenFireInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetOpenFireInfo * soap_new_set__ns1__GetOpenFireInfo(
	struct soap *soap,
	char *dwnam,
	char *unit)
{
	_ns1__GetOpenFireInfo *_p = ::soap_new__ns1__GetOpenFireInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetOpenFireInfo::dwnam = dwnam;
		_p->_ns1__GetOpenFireInfo::unit = unit;
	}
	return _p;
}

inline int soap_write__ns1__GetOpenFireInfo(struct soap *soap, _ns1__GetOpenFireInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOpenFireInfo", p->soap_type() == SOAP_TYPE__ns1__GetOpenFireInfo ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetOpenFireInfo(struct soap *soap, const char *URL, _ns1__GetOpenFireInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOpenFireInfo", p->soap_type() == SOAP_TYPE__ns1__GetOpenFireInfo ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetOpenFireInfo(struct soap *soap, const char *URL, _ns1__GetOpenFireInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOpenFireInfo", p->soap_type() == SOAP_TYPE__ns1__GetOpenFireInfo ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetOpenFireInfo * SOAP_FMAC4 soap_get__ns1__GetOpenFireInfo(struct soap*, _ns1__GetOpenFireInfo *, const char*, const char*);

inline int soap_read__ns1__GetOpenFireInfo(struct soap *soap, _ns1__GetOpenFireInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetOpenFireInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetOpenFireInfo(struct soap *soap, const char *URL, _ns1__GetOpenFireInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetOpenFireInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetOpenFireInfo(struct soap *soap, _ns1__GetOpenFireInfo *p)
{
	if (::soap_read__ns1__GetOpenFireInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__MobDownLoadDataResponse_DEFINED
#define SOAP_TYPE__ns1__MobDownLoadDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MobDownLoadDataResponse(struct soap*, const char*, int, const _ns1__MobDownLoadDataResponse *, const char*);
SOAP_FMAC3 _ns1__MobDownLoadDataResponse * SOAP_FMAC4 soap_in__ns1__MobDownLoadDataResponse(struct soap*, const char*, _ns1__MobDownLoadDataResponse *, const char*);
SOAP_FMAC1 _ns1__MobDownLoadDataResponse * SOAP_FMAC2 soap_instantiate__ns1__MobDownLoadDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MobDownLoadDataResponse * soap_new__ns1__MobDownLoadDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MobDownLoadDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__MobDownLoadDataResponse * soap_new_req__ns1__MobDownLoadDataResponse(
	struct soap *soap)
{
	_ns1__MobDownLoadDataResponse *_p = ::soap_new__ns1__MobDownLoadDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__MobDownLoadDataResponse * soap_new_set__ns1__MobDownLoadDataResponse(
	struct soap *soap,
	char *MobDownLoadDataResult)
{
	_ns1__MobDownLoadDataResponse *_p = ::soap_new__ns1__MobDownLoadDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MobDownLoadDataResponse::MobDownLoadDataResult = MobDownLoadDataResult;
	}
	return _p;
}

inline int soap_write__ns1__MobDownLoadDataResponse(struct soap *soap, _ns1__MobDownLoadDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MobDownLoadDataResponse", p->soap_type() == SOAP_TYPE__ns1__MobDownLoadDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MobDownLoadDataResponse(struct soap *soap, const char *URL, _ns1__MobDownLoadDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MobDownLoadDataResponse", p->soap_type() == SOAP_TYPE__ns1__MobDownLoadDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MobDownLoadDataResponse(struct soap *soap, const char *URL, _ns1__MobDownLoadDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MobDownLoadDataResponse", p->soap_type() == SOAP_TYPE__ns1__MobDownLoadDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MobDownLoadDataResponse * SOAP_FMAC4 soap_get__ns1__MobDownLoadDataResponse(struct soap*, _ns1__MobDownLoadDataResponse *, const char*, const char*);

inline int soap_read__ns1__MobDownLoadDataResponse(struct soap *soap, _ns1__MobDownLoadDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MobDownLoadDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MobDownLoadDataResponse(struct soap *soap, const char *URL, _ns1__MobDownLoadDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MobDownLoadDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__MobDownLoadDataResponse(struct soap *soap, _ns1__MobDownLoadDataResponse *p)
{
	if (::soap_read__ns1__MobDownLoadDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__MobDownLoadData_DEFINED
#define SOAP_TYPE__ns1__MobDownLoadData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__MobDownLoadData(struct soap*, const char*, int, const _ns1__MobDownLoadData *, const char*);
SOAP_FMAC3 _ns1__MobDownLoadData * SOAP_FMAC4 soap_in__ns1__MobDownLoadData(struct soap*, const char*, _ns1__MobDownLoadData *, const char*);
SOAP_FMAC1 _ns1__MobDownLoadData * SOAP_FMAC2 soap_instantiate__ns1__MobDownLoadData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__MobDownLoadData * soap_new__ns1__MobDownLoadData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__MobDownLoadData(soap, n, NULL, NULL, NULL);
}

inline _ns1__MobDownLoadData * soap_new_req__ns1__MobDownLoadData(
	struct soap *soap,
	int level)
{
	_ns1__MobDownLoadData *_p = ::soap_new__ns1__MobDownLoadData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MobDownLoadData::level = level;
	}
	return _p;
}

inline _ns1__MobDownLoadData * soap_new_set__ns1__MobDownLoadData(
	struct soap *soap,
	char *dwname,
	char *unitname,
	char *tabname,
	char *sytime,
	int level,
	char *stfield,
	char *filename)
{
	_ns1__MobDownLoadData *_p = ::soap_new__ns1__MobDownLoadData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__MobDownLoadData::dwname = dwname;
		_p->_ns1__MobDownLoadData::unitname = unitname;
		_p->_ns1__MobDownLoadData::tabname = tabname;
		_p->_ns1__MobDownLoadData::sytime = sytime;
		_p->_ns1__MobDownLoadData::level = level;
		_p->_ns1__MobDownLoadData::stfield = stfield;
		_p->_ns1__MobDownLoadData::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__MobDownLoadData(struct soap *soap, _ns1__MobDownLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MobDownLoadData", p->soap_type() == SOAP_TYPE__ns1__MobDownLoadData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__MobDownLoadData(struct soap *soap, const char *URL, _ns1__MobDownLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MobDownLoadData", p->soap_type() == SOAP_TYPE__ns1__MobDownLoadData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__MobDownLoadData(struct soap *soap, const char *URL, _ns1__MobDownLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:MobDownLoadData", p->soap_type() == SOAP_TYPE__ns1__MobDownLoadData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__MobDownLoadData * SOAP_FMAC4 soap_get__ns1__MobDownLoadData(struct soap*, _ns1__MobDownLoadData *, const char*, const char*);

inline int soap_read__ns1__MobDownLoadData(struct soap *soap, _ns1__MobDownLoadData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__MobDownLoadData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__MobDownLoadData(struct soap *soap, const char *URL, _ns1__MobDownLoadData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__MobDownLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__MobDownLoadData(struct soap *soap, _ns1__MobDownLoadData *p)
{
	if (::soap_read__ns1__MobDownLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownLoadMobGPSDataResponse_DEFINED
#define SOAP_TYPE__ns1__DownLoadMobGPSDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownLoadMobGPSDataResponse(struct soap*, const char*, int, const _ns1__DownLoadMobGPSDataResponse *, const char*);
SOAP_FMAC3 _ns1__DownLoadMobGPSDataResponse * SOAP_FMAC4 soap_in__ns1__DownLoadMobGPSDataResponse(struct soap*, const char*, _ns1__DownLoadMobGPSDataResponse *, const char*);
SOAP_FMAC1 _ns1__DownLoadMobGPSDataResponse * SOAP_FMAC2 soap_instantiate__ns1__DownLoadMobGPSDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownLoadMobGPSDataResponse * soap_new__ns1__DownLoadMobGPSDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownLoadMobGPSDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownLoadMobGPSDataResponse * soap_new_req__ns1__DownLoadMobGPSDataResponse(
	struct soap *soap)
{
	_ns1__DownLoadMobGPSDataResponse *_p = ::soap_new__ns1__DownLoadMobGPSDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownLoadMobGPSDataResponse * soap_new_set__ns1__DownLoadMobGPSDataResponse(
	struct soap *soap,
	char *DownLoadMobGPSDataResult)
{
	_ns1__DownLoadMobGPSDataResponse *_p = ::soap_new__ns1__DownLoadMobGPSDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownLoadMobGPSDataResponse::DownLoadMobGPSDataResult = DownLoadMobGPSDataResult;
	}
	return _p;
}

inline int soap_write__ns1__DownLoadMobGPSDataResponse(struct soap *soap, _ns1__DownLoadMobGPSDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadMobGPSDataResponse", p->soap_type() == SOAP_TYPE__ns1__DownLoadMobGPSDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownLoadMobGPSDataResponse(struct soap *soap, const char *URL, _ns1__DownLoadMobGPSDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadMobGPSDataResponse", p->soap_type() == SOAP_TYPE__ns1__DownLoadMobGPSDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownLoadMobGPSDataResponse(struct soap *soap, const char *URL, _ns1__DownLoadMobGPSDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadMobGPSDataResponse", p->soap_type() == SOAP_TYPE__ns1__DownLoadMobGPSDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownLoadMobGPSDataResponse * SOAP_FMAC4 soap_get__ns1__DownLoadMobGPSDataResponse(struct soap*, _ns1__DownLoadMobGPSDataResponse *, const char*, const char*);

inline int soap_read__ns1__DownLoadMobGPSDataResponse(struct soap *soap, _ns1__DownLoadMobGPSDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownLoadMobGPSDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownLoadMobGPSDataResponse(struct soap *soap, const char *URL, _ns1__DownLoadMobGPSDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownLoadMobGPSDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownLoadMobGPSDataResponse(struct soap *soap, _ns1__DownLoadMobGPSDataResponse *p)
{
	if (::soap_read__ns1__DownLoadMobGPSDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownLoadMobGPSData_DEFINED
#define SOAP_TYPE__ns1__DownLoadMobGPSData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownLoadMobGPSData(struct soap*, const char*, int, const _ns1__DownLoadMobGPSData *, const char*);
SOAP_FMAC3 _ns1__DownLoadMobGPSData * SOAP_FMAC4 soap_in__ns1__DownLoadMobGPSData(struct soap*, const char*, _ns1__DownLoadMobGPSData *, const char*);
SOAP_FMAC1 _ns1__DownLoadMobGPSData * SOAP_FMAC2 soap_instantiate__ns1__DownLoadMobGPSData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownLoadMobGPSData * soap_new__ns1__DownLoadMobGPSData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownLoadMobGPSData(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownLoadMobGPSData * soap_new_req__ns1__DownLoadMobGPSData(
	struct soap *soap,
	int level)
{
	_ns1__DownLoadMobGPSData *_p = ::soap_new__ns1__DownLoadMobGPSData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownLoadMobGPSData::level = level;
	}
	return _p;
}

inline _ns1__DownLoadMobGPSData * soap_new_set__ns1__DownLoadMobGPSData(
	struct soap *soap,
	char *dwname,
	char *tabname,
	char *sytime,
	int level)
{
	_ns1__DownLoadMobGPSData *_p = ::soap_new__ns1__DownLoadMobGPSData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownLoadMobGPSData::dwname = dwname;
		_p->_ns1__DownLoadMobGPSData::tabname = tabname;
		_p->_ns1__DownLoadMobGPSData::sytime = sytime;
		_p->_ns1__DownLoadMobGPSData::level = level;
	}
	return _p;
}

inline int soap_write__ns1__DownLoadMobGPSData(struct soap *soap, _ns1__DownLoadMobGPSData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadMobGPSData", p->soap_type() == SOAP_TYPE__ns1__DownLoadMobGPSData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownLoadMobGPSData(struct soap *soap, const char *URL, _ns1__DownLoadMobGPSData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadMobGPSData", p->soap_type() == SOAP_TYPE__ns1__DownLoadMobGPSData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownLoadMobGPSData(struct soap *soap, const char *URL, _ns1__DownLoadMobGPSData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownLoadMobGPSData", p->soap_type() == SOAP_TYPE__ns1__DownLoadMobGPSData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownLoadMobGPSData * SOAP_FMAC4 soap_get__ns1__DownLoadMobGPSData(struct soap*, _ns1__DownLoadMobGPSData *, const char*, const char*);

inline int soap_read__ns1__DownLoadMobGPSData(struct soap *soap, _ns1__DownLoadMobGPSData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownLoadMobGPSData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownLoadMobGPSData(struct soap *soap, const char *URL, _ns1__DownLoadMobGPSData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownLoadMobGPSData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownLoadMobGPSData(struct soap *soap, _ns1__DownLoadMobGPSData *p)
{
	if (::soap_read__ns1__DownLoadMobGPSData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDcsDataResponse_DEFINED
#define SOAP_TYPE__ns1__GetDcsDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDcsDataResponse(struct soap*, const char*, int, const _ns1__GetDcsDataResponse *, const char*);
SOAP_FMAC3 _ns1__GetDcsDataResponse * SOAP_FMAC4 soap_in__ns1__GetDcsDataResponse(struct soap*, const char*, _ns1__GetDcsDataResponse *, const char*);
SOAP_FMAC1 _ns1__GetDcsDataResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDcsDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDcsDataResponse * soap_new__ns1__GetDcsDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDcsDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDcsDataResponse * soap_new_req__ns1__GetDcsDataResponse(
	struct soap *soap)
{
	_ns1__GetDcsDataResponse *_p = ::soap_new__ns1__GetDcsDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDcsDataResponse * soap_new_set__ns1__GetDcsDataResponse(
	struct soap *soap,
	char *GetDcsDataResult)
{
	_ns1__GetDcsDataResponse *_p = ::soap_new__ns1__GetDcsDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDcsDataResponse::GetDcsDataResult = GetDcsDataResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDcsDataResponse(struct soap *soap, _ns1__GetDcsDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDcsDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetDcsDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDcsDataResponse(struct soap *soap, const char *URL, _ns1__GetDcsDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDcsDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetDcsDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDcsDataResponse(struct soap *soap, const char *URL, _ns1__GetDcsDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDcsDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetDcsDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDcsDataResponse * SOAP_FMAC4 soap_get__ns1__GetDcsDataResponse(struct soap*, _ns1__GetDcsDataResponse *, const char*, const char*);

inline int soap_read__ns1__GetDcsDataResponse(struct soap *soap, _ns1__GetDcsDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDcsDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDcsDataResponse(struct soap *soap, const char *URL, _ns1__GetDcsDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDcsDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDcsDataResponse(struct soap *soap, _ns1__GetDcsDataResponse *p)
{
	if (::soap_read__ns1__GetDcsDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDcsData_DEFINED
#define SOAP_TYPE__ns1__GetDcsData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDcsData(struct soap*, const char*, int, const _ns1__GetDcsData *, const char*);
SOAP_FMAC3 _ns1__GetDcsData * SOAP_FMAC4 soap_in__ns1__GetDcsData(struct soap*, const char*, _ns1__GetDcsData *, const char*);
SOAP_FMAC1 _ns1__GetDcsData * SOAP_FMAC2 soap_instantiate__ns1__GetDcsData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDcsData * soap_new__ns1__GetDcsData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDcsData(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDcsData * soap_new_req__ns1__GetDcsData(
	struct soap *soap)
{
	_ns1__GetDcsData *_p = ::soap_new__ns1__GetDcsData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDcsData * soap_new_set__ns1__GetDcsData(
	struct soap *soap,
	char *xb,
	char *station,
	char *iconname,
	char *filename)
{
	_ns1__GetDcsData *_p = ::soap_new__ns1__GetDcsData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDcsData::xb = xb;
		_p->_ns1__GetDcsData::station = station;
		_p->_ns1__GetDcsData::iconname = iconname;
		_p->_ns1__GetDcsData::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetDcsData(struct soap *soap, _ns1__GetDcsData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDcsData", p->soap_type() == SOAP_TYPE__ns1__GetDcsData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDcsData(struct soap *soap, const char *URL, _ns1__GetDcsData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDcsData", p->soap_type() == SOAP_TYPE__ns1__GetDcsData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDcsData(struct soap *soap, const char *URL, _ns1__GetDcsData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDcsData", p->soap_type() == SOAP_TYPE__ns1__GetDcsData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDcsData * SOAP_FMAC4 soap_get__ns1__GetDcsData(struct soap*, _ns1__GetDcsData *, const char*, const char*);

inline int soap_read__ns1__GetDcsData(struct soap *soap, _ns1__GetDcsData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDcsData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDcsData(struct soap *soap, const char *URL, _ns1__GetDcsData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDcsData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDcsData(struct soap *soap, _ns1__GetDcsData *p)
{
	if (::soap_read__ns1__GetDcsData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetBgImgResponse_DEFINED
#define SOAP_TYPE__ns1__GetBgImgResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetBgImgResponse(struct soap*, const char*, int, const _ns1__GetBgImgResponse *, const char*);
SOAP_FMAC3 _ns1__GetBgImgResponse * SOAP_FMAC4 soap_in__ns1__GetBgImgResponse(struct soap*, const char*, _ns1__GetBgImgResponse *, const char*);
SOAP_FMAC1 _ns1__GetBgImgResponse * SOAP_FMAC2 soap_instantiate__ns1__GetBgImgResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetBgImgResponse * soap_new__ns1__GetBgImgResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetBgImgResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetBgImgResponse * soap_new_req__ns1__GetBgImgResponse(
	struct soap *soap)
{
	_ns1__GetBgImgResponse *_p = ::soap_new__ns1__GetBgImgResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetBgImgResponse * soap_new_set__ns1__GetBgImgResponse(
	struct soap *soap,
	char *GetBgImgResult)
{
	_ns1__GetBgImgResponse *_p = ::soap_new__ns1__GetBgImgResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetBgImgResponse::GetBgImgResult = GetBgImgResult;
	}
	return _p;
}

inline int soap_write__ns1__GetBgImgResponse(struct soap *soap, _ns1__GetBgImgResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetBgImgResponse", p->soap_type() == SOAP_TYPE__ns1__GetBgImgResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetBgImgResponse(struct soap *soap, const char *URL, _ns1__GetBgImgResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetBgImgResponse", p->soap_type() == SOAP_TYPE__ns1__GetBgImgResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetBgImgResponse(struct soap *soap, const char *URL, _ns1__GetBgImgResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetBgImgResponse", p->soap_type() == SOAP_TYPE__ns1__GetBgImgResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetBgImgResponse * SOAP_FMAC4 soap_get__ns1__GetBgImgResponse(struct soap*, _ns1__GetBgImgResponse *, const char*, const char*);

inline int soap_read__ns1__GetBgImgResponse(struct soap *soap, _ns1__GetBgImgResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetBgImgResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetBgImgResponse(struct soap *soap, const char *URL, _ns1__GetBgImgResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetBgImgResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetBgImgResponse(struct soap *soap, _ns1__GetBgImgResponse *p)
{
	if (::soap_read__ns1__GetBgImgResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetBgImg_DEFINED
#define SOAP_TYPE__ns1__GetBgImg_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetBgImg(struct soap*, const char*, int, const _ns1__GetBgImg *, const char*);
SOAP_FMAC3 _ns1__GetBgImg * SOAP_FMAC4 soap_in__ns1__GetBgImg(struct soap*, const char*, _ns1__GetBgImg *, const char*);
SOAP_FMAC1 _ns1__GetBgImg * SOAP_FMAC2 soap_instantiate__ns1__GetBgImg(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetBgImg * soap_new__ns1__GetBgImg(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetBgImg(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetBgImg * soap_new_req__ns1__GetBgImg(
	struct soap *soap)
{
	_ns1__GetBgImg *_p = ::soap_new__ns1__GetBgImg(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetBgImg * soap_new_set__ns1__GetBgImg(
	struct soap *soap,
	char *pguid)
{
	_ns1__GetBgImg *_p = ::soap_new__ns1__GetBgImg(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetBgImg::pguid = pguid;
	}
	return _p;
}

inline int soap_write__ns1__GetBgImg(struct soap *soap, _ns1__GetBgImg const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetBgImg", p->soap_type() == SOAP_TYPE__ns1__GetBgImg ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetBgImg(struct soap *soap, const char *URL, _ns1__GetBgImg const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetBgImg", p->soap_type() == SOAP_TYPE__ns1__GetBgImg ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetBgImg(struct soap *soap, const char *URL, _ns1__GetBgImg const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetBgImg", p->soap_type() == SOAP_TYPE__ns1__GetBgImg ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetBgImg * SOAP_FMAC4 soap_get__ns1__GetBgImg(struct soap*, _ns1__GetBgImg *, const char*, const char*);

inline int soap_read__ns1__GetBgImg(struct soap *soap, _ns1__GetBgImg *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetBgImg(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetBgImg(struct soap *soap, const char *URL, _ns1__GetBgImg *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetBgImg(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetBgImg(struct soap *soap, _ns1__GetBgImg *p)
{
	if (::soap_read__ns1__GetBgImg(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDevPicResponse_DEFINED
#define SOAP_TYPE__ns1__GetDevPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDevPicResponse(struct soap*, const char*, int, const _ns1__GetDevPicResponse *, const char*);
SOAP_FMAC3 _ns1__GetDevPicResponse * SOAP_FMAC4 soap_in__ns1__GetDevPicResponse(struct soap*, const char*, _ns1__GetDevPicResponse *, const char*);
SOAP_FMAC1 _ns1__GetDevPicResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDevPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDevPicResponse * soap_new__ns1__GetDevPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDevPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDevPicResponse * soap_new_req__ns1__GetDevPicResponse(
	struct soap *soap)
{
	_ns1__GetDevPicResponse *_p = ::soap_new__ns1__GetDevPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDevPicResponse * soap_new_set__ns1__GetDevPicResponse(
	struct soap *soap,
	char *GetDevPicResult)
{
	_ns1__GetDevPicResponse *_p = ::soap_new__ns1__GetDevPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDevPicResponse::GetDevPicResult = GetDevPicResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDevPicResponse(struct soap *soap, _ns1__GetDevPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetDevPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDevPicResponse(struct soap *soap, const char *URL, _ns1__GetDevPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetDevPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDevPicResponse(struct soap *soap, const char *URL, _ns1__GetDevPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetDevPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDevPicResponse * SOAP_FMAC4 soap_get__ns1__GetDevPicResponse(struct soap*, _ns1__GetDevPicResponse *, const char*, const char*);

inline int soap_read__ns1__GetDevPicResponse(struct soap *soap, _ns1__GetDevPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDevPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDevPicResponse(struct soap *soap, const char *URL, _ns1__GetDevPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDevPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDevPicResponse(struct soap *soap, _ns1__GetDevPicResponse *p)
{
	if (::soap_read__ns1__GetDevPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDevPic_DEFINED
#define SOAP_TYPE__ns1__GetDevPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDevPic(struct soap*, const char*, int, const _ns1__GetDevPic *, const char*);
SOAP_FMAC3 _ns1__GetDevPic * SOAP_FMAC4 soap_in__ns1__GetDevPic(struct soap*, const char*, _ns1__GetDevPic *, const char*);
SOAP_FMAC1 _ns1__GetDevPic * SOAP_FMAC2 soap_instantiate__ns1__GetDevPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDevPic * soap_new__ns1__GetDevPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDevPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDevPic * soap_new_req__ns1__GetDevPic(
	struct soap *soap,
	bool sflag)
{
	_ns1__GetDevPic *_p = ::soap_new__ns1__GetDevPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDevPic::sflag = sflag;
	}
	return _p;
}

inline _ns1__GetDevPic * soap_new_set__ns1__GetDevPic(
	struct soap *soap,
	char *dwname,
	char *xb,
	char *station,
	char *iconname,
	char *type,
	bool sflag,
	char *s1,
	char *s2)
{
	_ns1__GetDevPic *_p = ::soap_new__ns1__GetDevPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDevPic::dwname = dwname;
		_p->_ns1__GetDevPic::xb = xb;
		_p->_ns1__GetDevPic::station = station;
		_p->_ns1__GetDevPic::iconname = iconname;
		_p->_ns1__GetDevPic::type = type;
		_p->_ns1__GetDevPic::sflag = sflag;
		_p->_ns1__GetDevPic::s1 = s1;
		_p->_ns1__GetDevPic::s2 = s2;
	}
	return _p;
}

inline int soap_write__ns1__GetDevPic(struct soap *soap, _ns1__GetDevPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevPic", p->soap_type() == SOAP_TYPE__ns1__GetDevPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDevPic(struct soap *soap, const char *URL, _ns1__GetDevPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevPic", p->soap_type() == SOAP_TYPE__ns1__GetDevPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDevPic(struct soap *soap, const char *URL, _ns1__GetDevPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevPic", p->soap_type() == SOAP_TYPE__ns1__GetDevPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDevPic * SOAP_FMAC4 soap_get__ns1__GetDevPic(struct soap*, _ns1__GetDevPic *, const char*, const char*);

inline int soap_read__ns1__GetDevPic(struct soap *soap, _ns1__GetDevPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDevPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDevPic(struct soap *soap, const char *URL, _ns1__GetDevPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDevPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDevPic(struct soap *soap, _ns1__GetDevPic *p)
{
	if (::soap_read__ns1__GetDevPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetJxPicResponse_DEFINED
#define SOAP_TYPE__ns1__GetJxPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJxPicResponse(struct soap*, const char*, int, const _ns1__GetJxPicResponse *, const char*);
SOAP_FMAC3 _ns1__GetJxPicResponse * SOAP_FMAC4 soap_in__ns1__GetJxPicResponse(struct soap*, const char*, _ns1__GetJxPicResponse *, const char*);
SOAP_FMAC1 _ns1__GetJxPicResponse * SOAP_FMAC2 soap_instantiate__ns1__GetJxPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJxPicResponse * soap_new__ns1__GetJxPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetJxPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetJxPicResponse * soap_new_req__ns1__GetJxPicResponse(
	struct soap *soap)
{
	_ns1__GetJxPicResponse *_p = ::soap_new__ns1__GetJxPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetJxPicResponse * soap_new_set__ns1__GetJxPicResponse(
	struct soap *soap,
	char *GetJxPicResult)
{
	_ns1__GetJxPicResponse *_p = ::soap_new__ns1__GetJxPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetJxPicResponse::GetJxPicResult = GetJxPicResult;
	}
	return _p;
}

inline int soap_write__ns1__GetJxPicResponse(struct soap *soap, _ns1__GetJxPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetJxPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetJxPicResponse(struct soap *soap, const char *URL, _ns1__GetJxPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetJxPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetJxPicResponse(struct soap *soap, const char *URL, _ns1__GetJxPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetJxPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetJxPicResponse * SOAP_FMAC4 soap_get__ns1__GetJxPicResponse(struct soap*, _ns1__GetJxPicResponse *, const char*, const char*);

inline int soap_read__ns1__GetJxPicResponse(struct soap *soap, _ns1__GetJxPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetJxPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetJxPicResponse(struct soap *soap, const char *URL, _ns1__GetJxPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetJxPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetJxPicResponse(struct soap *soap, _ns1__GetJxPicResponse *p)
{
	if (::soap_read__ns1__GetJxPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetJxPic_DEFINED
#define SOAP_TYPE__ns1__GetJxPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJxPic(struct soap*, const char*, int, const _ns1__GetJxPic *, const char*);
SOAP_FMAC3 _ns1__GetJxPic * SOAP_FMAC4 soap_in__ns1__GetJxPic(struct soap*, const char*, _ns1__GetJxPic *, const char*);
SOAP_FMAC1 _ns1__GetJxPic * SOAP_FMAC2 soap_instantiate__ns1__GetJxPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJxPic * soap_new__ns1__GetJxPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetJxPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetJxPic * soap_new_req__ns1__GetJxPic(
	struct soap *soap)
{
	_ns1__GetJxPic *_p = ::soap_new__ns1__GetJxPic(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetJxPic * soap_new_set__ns1__GetJxPic(
	struct soap *soap,
	char *dwname,
	char *upguid,
	char *type)
{
	_ns1__GetJxPic *_p = ::soap_new__ns1__GetJxPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetJxPic::dwname = dwname;
		_p->_ns1__GetJxPic::upguid = upguid;
		_p->_ns1__GetJxPic::type = type;
	}
	return _p;
}

inline int soap_write__ns1__GetJxPic(struct soap *soap, _ns1__GetJxPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxPic", p->soap_type() == SOAP_TYPE__ns1__GetJxPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetJxPic(struct soap *soap, const char *URL, _ns1__GetJxPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxPic", p->soap_type() == SOAP_TYPE__ns1__GetJxPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetJxPic(struct soap *soap, const char *URL, _ns1__GetJxPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxPic", p->soap_type() == SOAP_TYPE__ns1__GetJxPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetJxPic * SOAP_FMAC4 soap_get__ns1__GetJxPic(struct soap*, _ns1__GetJxPic *, const char*, const char*);

inline int soap_read__ns1__GetJxPic(struct soap *soap, _ns1__GetJxPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetJxPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetJxPic(struct soap *soap, const char *URL, _ns1__GetJxPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetJxPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetJxPic(struct soap *soap, _ns1__GetJxPic *p)
{
	if (::soap_read__ns1__GetJxPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetStationJxDataResponse_DEFINED
#define SOAP_TYPE__ns1__GetStationJxDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetStationJxDataResponse(struct soap*, const char*, int, const _ns1__GetStationJxDataResponse *, const char*);
SOAP_FMAC3 _ns1__GetStationJxDataResponse * SOAP_FMAC4 soap_in__ns1__GetStationJxDataResponse(struct soap*, const char*, _ns1__GetStationJxDataResponse *, const char*);
SOAP_FMAC1 _ns1__GetStationJxDataResponse * SOAP_FMAC2 soap_instantiate__ns1__GetStationJxDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetStationJxDataResponse * soap_new__ns1__GetStationJxDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetStationJxDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetStationJxDataResponse * soap_new_req__ns1__GetStationJxDataResponse(
	struct soap *soap)
{
	_ns1__GetStationJxDataResponse *_p = ::soap_new__ns1__GetStationJxDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetStationJxDataResponse * soap_new_set__ns1__GetStationJxDataResponse(
	struct soap *soap,
	char *GetStationJxDataResult)
{
	_ns1__GetStationJxDataResponse *_p = ::soap_new__ns1__GetStationJxDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetStationJxDataResponse::GetStationJxDataResult = GetStationJxDataResult;
	}
	return _p;
}

inline int soap_write__ns1__GetStationJxDataResponse(struct soap *soap, _ns1__GetStationJxDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetStationJxDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetStationJxDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetStationJxDataResponse(struct soap *soap, const char *URL, _ns1__GetStationJxDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetStationJxDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetStationJxDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetStationJxDataResponse(struct soap *soap, const char *URL, _ns1__GetStationJxDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetStationJxDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetStationJxDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetStationJxDataResponse * SOAP_FMAC4 soap_get__ns1__GetStationJxDataResponse(struct soap*, _ns1__GetStationJxDataResponse *, const char*, const char*);

inline int soap_read__ns1__GetStationJxDataResponse(struct soap *soap, _ns1__GetStationJxDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetStationJxDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetStationJxDataResponse(struct soap *soap, const char *URL, _ns1__GetStationJxDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetStationJxDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetStationJxDataResponse(struct soap *soap, _ns1__GetStationJxDataResponse *p)
{
	if (::soap_read__ns1__GetStationJxDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetStationJxData_DEFINED
#define SOAP_TYPE__ns1__GetStationJxData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetStationJxData(struct soap*, const char*, int, const _ns1__GetStationJxData *, const char*);
SOAP_FMAC3 _ns1__GetStationJxData * SOAP_FMAC4 soap_in__ns1__GetStationJxData(struct soap*, const char*, _ns1__GetStationJxData *, const char*);
SOAP_FMAC1 _ns1__GetStationJxData * SOAP_FMAC2 soap_instantiate__ns1__GetStationJxData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetStationJxData * soap_new__ns1__GetStationJxData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetStationJxData(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetStationJxData * soap_new_req__ns1__GetStationJxData(
	struct soap *soap,
	bool sflag)
{
	_ns1__GetStationJxData *_p = ::soap_new__ns1__GetStationJxData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetStationJxData::sflag = sflag;
	}
	return _p;
}

inline _ns1__GetStationJxData * soap_new_set__ns1__GetStationJxData(
	struct soap *soap,
	char *dwname,
	char *xb,
	char *station,
	bool sflag)
{
	_ns1__GetStationJxData *_p = ::soap_new__ns1__GetStationJxData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetStationJxData::dwname = dwname;
		_p->_ns1__GetStationJxData::xb = xb;
		_p->_ns1__GetStationJxData::station = station;
		_p->_ns1__GetStationJxData::sflag = sflag;
	}
	return _p;
}

inline int soap_write__ns1__GetStationJxData(struct soap *soap, _ns1__GetStationJxData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetStationJxData", p->soap_type() == SOAP_TYPE__ns1__GetStationJxData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetStationJxData(struct soap *soap, const char *URL, _ns1__GetStationJxData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetStationJxData", p->soap_type() == SOAP_TYPE__ns1__GetStationJxData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetStationJxData(struct soap *soap, const char *URL, _ns1__GetStationJxData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetStationJxData", p->soap_type() == SOAP_TYPE__ns1__GetStationJxData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetStationJxData * SOAP_FMAC4 soap_get__ns1__GetStationJxData(struct soap*, _ns1__GetStationJxData *, const char*, const char*);

inline int soap_read__ns1__GetStationJxData(struct soap *soap, _ns1__GetStationJxData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetStationJxData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetStationJxData(struct soap *soap, const char *URL, _ns1__GetStationJxData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetStationJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetStationJxData(struct soap *soap, _ns1__GetStationJxData *p)
{
	if (::soap_read__ns1__GetStationJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetJxDataResponse_DEFINED
#define SOAP_TYPE__ns1__GetJxDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJxDataResponse(struct soap*, const char*, int, const _ns1__GetJxDataResponse *, const char*);
SOAP_FMAC3 _ns1__GetJxDataResponse * SOAP_FMAC4 soap_in__ns1__GetJxDataResponse(struct soap*, const char*, _ns1__GetJxDataResponse *, const char*);
SOAP_FMAC1 _ns1__GetJxDataResponse * SOAP_FMAC2 soap_instantiate__ns1__GetJxDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJxDataResponse * soap_new__ns1__GetJxDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetJxDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetJxDataResponse * soap_new_req__ns1__GetJxDataResponse(
	struct soap *soap)
{
	_ns1__GetJxDataResponse *_p = ::soap_new__ns1__GetJxDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetJxDataResponse * soap_new_set__ns1__GetJxDataResponse(
	struct soap *soap,
	char *GetJxDataResult)
{
	_ns1__GetJxDataResponse *_p = ::soap_new__ns1__GetJxDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetJxDataResponse::GetJxDataResult = GetJxDataResult;
	}
	return _p;
}

inline int soap_write__ns1__GetJxDataResponse(struct soap *soap, _ns1__GetJxDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetJxDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetJxDataResponse(struct soap *soap, const char *URL, _ns1__GetJxDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetJxDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetJxDataResponse(struct soap *soap, const char *URL, _ns1__GetJxDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxDataResponse", p->soap_type() == SOAP_TYPE__ns1__GetJxDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetJxDataResponse * SOAP_FMAC4 soap_get__ns1__GetJxDataResponse(struct soap*, _ns1__GetJxDataResponse *, const char*, const char*);

inline int soap_read__ns1__GetJxDataResponse(struct soap *soap, _ns1__GetJxDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetJxDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetJxDataResponse(struct soap *soap, const char *URL, _ns1__GetJxDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetJxDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetJxDataResponse(struct soap *soap, _ns1__GetJxDataResponse *p)
{
	if (::soap_read__ns1__GetJxDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetJxData_DEFINED
#define SOAP_TYPE__ns1__GetJxData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetJxData(struct soap*, const char*, int, const _ns1__GetJxData *, const char*);
SOAP_FMAC3 _ns1__GetJxData * SOAP_FMAC4 soap_in__ns1__GetJxData(struct soap*, const char*, _ns1__GetJxData *, const char*);
SOAP_FMAC1 _ns1__GetJxData * SOAP_FMAC2 soap_instantiate__ns1__GetJxData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetJxData * soap_new__ns1__GetJxData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetJxData(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetJxData * soap_new_req__ns1__GetJxData(
	struct soap *soap)
{
	_ns1__GetJxData *_p = ::soap_new__ns1__GetJxData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetJxData * soap_new_set__ns1__GetJxData(
	struct soap *soap,
	char *dwname,
	char *xb,
	char *station,
	char *iconname,
	char *type,
	char *filename)
{
	_ns1__GetJxData *_p = ::soap_new__ns1__GetJxData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetJxData::dwname = dwname;
		_p->_ns1__GetJxData::xb = xb;
		_p->_ns1__GetJxData::station = station;
		_p->_ns1__GetJxData::iconname = iconname;
		_p->_ns1__GetJxData::type = type;
		_p->_ns1__GetJxData::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetJxData(struct soap *soap, _ns1__GetJxData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxData", p->soap_type() == SOAP_TYPE__ns1__GetJxData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetJxData(struct soap *soap, const char *URL, _ns1__GetJxData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxData", p->soap_type() == SOAP_TYPE__ns1__GetJxData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetJxData(struct soap *soap, const char *URL, _ns1__GetJxData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetJxData", p->soap_type() == SOAP_TYPE__ns1__GetJxData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetJxData * SOAP_FMAC4 soap_get__ns1__GetJxData(struct soap*, _ns1__GetJxData *, const char*, const char*);

inline int soap_read__ns1__GetJxData(struct soap *soap, _ns1__GetJxData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetJxData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetJxData(struct soap *soap, const char *URL, _ns1__GetJxData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetJxData(struct soap *soap, _ns1__GetJxData *p)
{
	if (::soap_read__ns1__GetJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDeviceXjResponse_DEFINED
#define SOAP_TYPE__ns1__GetDeviceXjResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDeviceXjResponse(struct soap*, const char*, int, const _ns1__GetDeviceXjResponse *, const char*);
SOAP_FMAC3 _ns1__GetDeviceXjResponse * SOAP_FMAC4 soap_in__ns1__GetDeviceXjResponse(struct soap*, const char*, _ns1__GetDeviceXjResponse *, const char*);
SOAP_FMAC1 _ns1__GetDeviceXjResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDeviceXjResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDeviceXjResponse * soap_new__ns1__GetDeviceXjResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDeviceXjResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDeviceXjResponse * soap_new_req__ns1__GetDeviceXjResponse(
	struct soap *soap)
{
	_ns1__GetDeviceXjResponse *_p = ::soap_new__ns1__GetDeviceXjResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDeviceXjResponse * soap_new_set__ns1__GetDeviceXjResponse(
	struct soap *soap,
	char *GetDeviceXjResult)
{
	_ns1__GetDeviceXjResponse *_p = ::soap_new__ns1__GetDeviceXjResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDeviceXjResponse::GetDeviceXjResult = GetDeviceXjResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDeviceXjResponse(struct soap *soap, _ns1__GetDeviceXjResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDeviceXjResponse", p->soap_type() == SOAP_TYPE__ns1__GetDeviceXjResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDeviceXjResponse(struct soap *soap, const char *URL, _ns1__GetDeviceXjResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDeviceXjResponse", p->soap_type() == SOAP_TYPE__ns1__GetDeviceXjResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDeviceXjResponse(struct soap *soap, const char *URL, _ns1__GetDeviceXjResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDeviceXjResponse", p->soap_type() == SOAP_TYPE__ns1__GetDeviceXjResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDeviceXjResponse * SOAP_FMAC4 soap_get__ns1__GetDeviceXjResponse(struct soap*, _ns1__GetDeviceXjResponse *, const char*, const char*);

inline int soap_read__ns1__GetDeviceXjResponse(struct soap *soap, _ns1__GetDeviceXjResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDeviceXjResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDeviceXjResponse(struct soap *soap, const char *URL, _ns1__GetDeviceXjResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDeviceXjResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDeviceXjResponse(struct soap *soap, _ns1__GetDeviceXjResponse *p)
{
	if (::soap_read__ns1__GetDeviceXjResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDeviceXj_DEFINED
#define SOAP_TYPE__ns1__GetDeviceXj_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDeviceXj(struct soap*, const char*, int, const _ns1__GetDeviceXj *, const char*);
SOAP_FMAC3 _ns1__GetDeviceXj * SOAP_FMAC4 soap_in__ns1__GetDeviceXj(struct soap*, const char*, _ns1__GetDeviceXj *, const char*);
SOAP_FMAC1 _ns1__GetDeviceXj * SOAP_FMAC2 soap_instantiate__ns1__GetDeviceXj(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDeviceXj * soap_new__ns1__GetDeviceXj(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDeviceXj(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDeviceXj * soap_new_req__ns1__GetDeviceXj(
	struct soap *soap)
{
	_ns1__GetDeviceXj *_p = ::soap_new__ns1__GetDeviceXj(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDeviceXj * soap_new_set__ns1__GetDeviceXj(
	struct soap *soap,
	char *station,
	char *xb,
	char *dwname,
	char *device,
	char *filename)
{
	_ns1__GetDeviceXj *_p = ::soap_new__ns1__GetDeviceXj(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDeviceXj::station = station;
		_p->_ns1__GetDeviceXj::xb = xb;
		_p->_ns1__GetDeviceXj::dwname = dwname;
		_p->_ns1__GetDeviceXj::device = device;
		_p->_ns1__GetDeviceXj::filename = filename;
	}
	return _p;
}

inline int soap_write__ns1__GetDeviceXj(struct soap *soap, _ns1__GetDeviceXj const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDeviceXj", p->soap_type() == SOAP_TYPE__ns1__GetDeviceXj ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDeviceXj(struct soap *soap, const char *URL, _ns1__GetDeviceXj const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDeviceXj", p->soap_type() == SOAP_TYPE__ns1__GetDeviceXj ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDeviceXj(struct soap *soap, const char *URL, _ns1__GetDeviceXj const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDeviceXj", p->soap_type() == SOAP_TYPE__ns1__GetDeviceXj ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDeviceXj * SOAP_FMAC4 soap_get__ns1__GetDeviceXj(struct soap*, _ns1__GetDeviceXj *, const char*, const char*);

inline int soap_read__ns1__GetDeviceXj(struct soap *soap, _ns1__GetDeviceXj *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDeviceXj(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDeviceXj(struct soap *soap, const char *URL, _ns1__GetDeviceXj *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDeviceXj(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDeviceXj(struct soap *soap, _ns1__GetDeviceXj *p)
{
	if (::soap_read__ns1__GetDeviceXj(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDwPicResponse_DEFINED
#define SOAP_TYPE__ns1__GetDwPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDwPicResponse(struct soap*, const char*, int, const _ns1__GetDwPicResponse *, const char*);
SOAP_FMAC3 _ns1__GetDwPicResponse * SOAP_FMAC4 soap_in__ns1__GetDwPicResponse(struct soap*, const char*, _ns1__GetDwPicResponse *, const char*);
SOAP_FMAC1 _ns1__GetDwPicResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDwPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDwPicResponse * soap_new__ns1__GetDwPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDwPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDwPicResponse * soap_new_req__ns1__GetDwPicResponse(
	struct soap *soap)
{
	_ns1__GetDwPicResponse *_p = ::soap_new__ns1__GetDwPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDwPicResponse * soap_new_set__ns1__GetDwPicResponse(
	struct soap *soap,
	char *GetDwPicResult)
{
	_ns1__GetDwPicResponse *_p = ::soap_new__ns1__GetDwPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwPicResponse::GetDwPicResult = GetDwPicResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDwPicResponse(struct soap *soap, _ns1__GetDwPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDwPicResponse(struct soap *soap, const char *URL, _ns1__GetDwPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDwPicResponse(struct soap *soap, const char *URL, _ns1__GetDwPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwPicResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDwPicResponse * SOAP_FMAC4 soap_get__ns1__GetDwPicResponse(struct soap*, _ns1__GetDwPicResponse *, const char*, const char*);

inline int soap_read__ns1__GetDwPicResponse(struct soap *soap, _ns1__GetDwPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDwPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDwPicResponse(struct soap *soap, const char *URL, _ns1__GetDwPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDwPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDwPicResponse(struct soap *soap, _ns1__GetDwPicResponse *p)
{
	if (::soap_read__ns1__GetDwPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDwPic_DEFINED
#define SOAP_TYPE__ns1__GetDwPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDwPic(struct soap*, const char*, int, const _ns1__GetDwPic *, const char*);
SOAP_FMAC3 _ns1__GetDwPic * SOAP_FMAC4 soap_in__ns1__GetDwPic(struct soap*, const char*, _ns1__GetDwPic *, const char*);
SOAP_FMAC1 _ns1__GetDwPic * SOAP_FMAC2 soap_instantiate__ns1__GetDwPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDwPic * soap_new__ns1__GetDwPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDwPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDwPic * soap_new_req__ns1__GetDwPic(
	struct soap *soap,
	int unitid)
{
	_ns1__GetDwPic *_p = ::soap_new__ns1__GetDwPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwPic::unitid = unitid;
	}
	return _p;
}

inline _ns1__GetDwPic * soap_new_set__ns1__GetDwPic(
	struct soap *soap,
	char *dwname,
	char *unitname,
	int unitid)
{
	_ns1__GetDwPic *_p = ::soap_new__ns1__GetDwPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwPic::dwname = dwname;
		_p->_ns1__GetDwPic::unitname = unitname;
		_p->_ns1__GetDwPic::unitid = unitid;
	}
	return _p;
}

inline int soap_write__ns1__GetDwPic(struct soap *soap, _ns1__GetDwPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwPic", p->soap_type() == SOAP_TYPE__ns1__GetDwPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDwPic(struct soap *soap, const char *URL, _ns1__GetDwPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwPic", p->soap_type() == SOAP_TYPE__ns1__GetDwPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDwPic(struct soap *soap, const char *URL, _ns1__GetDwPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwPic", p->soap_type() == SOAP_TYPE__ns1__GetDwPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDwPic * SOAP_FMAC4 soap_get__ns1__GetDwPic(struct soap*, _ns1__GetDwPic *, const char*, const char*);

inline int soap_read__ns1__GetDwPic(struct soap *soap, _ns1__GetDwPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDwPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDwPic(struct soap *soap, const char *URL, _ns1__GetDwPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDwPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDwPic(struct soap *soap, _ns1__GetDwPic *p)
{
	if (::soap_read__ns1__GetDwPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDwInfoResponse_DEFINED
#define SOAP_TYPE__ns1__GetDwInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDwInfoResponse(struct soap*, const char*, int, const _ns1__GetDwInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetDwInfoResponse * SOAP_FMAC4 soap_in__ns1__GetDwInfoResponse(struct soap*, const char*, _ns1__GetDwInfoResponse *, const char*);
SOAP_FMAC1 _ns1__GetDwInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDwInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDwInfoResponse * soap_new__ns1__GetDwInfoResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDwInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDwInfoResponse * soap_new_req__ns1__GetDwInfoResponse(
	struct soap *soap)
{
	_ns1__GetDwInfoResponse *_p = ::soap_new__ns1__GetDwInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDwInfoResponse * soap_new_set__ns1__GetDwInfoResponse(
	struct soap *soap,
	char *GetDwInfoResult)
{
	_ns1__GetDwInfoResponse *_p = ::soap_new__ns1__GetDwInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwInfoResponse::GetDwInfoResult = GetDwInfoResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDwInfoResponse(struct soap *soap, _ns1__GetDwInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDwInfoResponse(struct soap *soap, const char *URL, _ns1__GetDwInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwInfoResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDwInfoResponse(struct soap *soap, const char *URL, _ns1__GetDwInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwInfoResponse", p->soap_type() == SOAP_TYPE__ns1__GetDwInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDwInfoResponse * SOAP_FMAC4 soap_get__ns1__GetDwInfoResponse(struct soap*, _ns1__GetDwInfoResponse *, const char*, const char*);

inline int soap_read__ns1__GetDwInfoResponse(struct soap *soap, _ns1__GetDwInfoResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDwInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDwInfoResponse(struct soap *soap, const char *URL, _ns1__GetDwInfoResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDwInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDwInfoResponse(struct soap *soap, _ns1__GetDwInfoResponse *p)
{
	if (::soap_read__ns1__GetDwInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDwInfo_DEFINED
#define SOAP_TYPE__ns1__GetDwInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDwInfo(struct soap*, const char*, int, const _ns1__GetDwInfo *, const char*);
SOAP_FMAC3 _ns1__GetDwInfo * SOAP_FMAC4 soap_in__ns1__GetDwInfo(struct soap*, const char*, _ns1__GetDwInfo *, const char*);
SOAP_FMAC1 _ns1__GetDwInfo * SOAP_FMAC2 soap_instantiate__ns1__GetDwInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDwInfo * soap_new__ns1__GetDwInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDwInfo(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDwInfo * soap_new_req__ns1__GetDwInfo(
	struct soap *soap,
	int unitid)
{
	_ns1__GetDwInfo *_p = ::soap_new__ns1__GetDwInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwInfo::unitid = unitid;
	}
	return _p;
}

inline _ns1__GetDwInfo * soap_new_set__ns1__GetDwInfo(
	struct soap *soap,
	char *dwname,
	char *unitname,
	int unitid)
{
	_ns1__GetDwInfo *_p = ::soap_new__ns1__GetDwInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDwInfo::dwname = dwname;
		_p->_ns1__GetDwInfo::unitname = unitname;
		_p->_ns1__GetDwInfo::unitid = unitid;
	}
	return _p;
}

inline int soap_write__ns1__GetDwInfo(struct soap *soap, _ns1__GetDwInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwInfo", p->soap_type() == SOAP_TYPE__ns1__GetDwInfo ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDwInfo(struct soap *soap, const char *URL, _ns1__GetDwInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwInfo", p->soap_type() == SOAP_TYPE__ns1__GetDwInfo ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDwInfo(struct soap *soap, const char *URL, _ns1__GetDwInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDwInfo", p->soap_type() == SOAP_TYPE__ns1__GetDwInfo ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDwInfo * SOAP_FMAC4 soap_get__ns1__GetDwInfo(struct soap*, _ns1__GetDwInfo *, const char*, const char*);

inline int soap_read__ns1__GetDwInfo(struct soap *soap, _ns1__GetDwInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDwInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDwInfo(struct soap *soap, const char *URL, _ns1__GetDwInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDwInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDwInfo(struct soap *soap, _ns1__GetDwInfo *p)
{
	if (::soap_read__ns1__GetDwInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetPicNamesResponse_DEFINED
#define SOAP_TYPE__ns1__GetPicNamesResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPicNamesResponse(struct soap*, const char*, int, const _ns1__GetPicNamesResponse *, const char*);
SOAP_FMAC3 _ns1__GetPicNamesResponse * SOAP_FMAC4 soap_in__ns1__GetPicNamesResponse(struct soap*, const char*, _ns1__GetPicNamesResponse *, const char*);
SOAP_FMAC1 _ns1__GetPicNamesResponse * SOAP_FMAC2 soap_instantiate__ns1__GetPicNamesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPicNamesResponse * soap_new__ns1__GetPicNamesResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetPicNamesResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetPicNamesResponse * soap_new_req__ns1__GetPicNamesResponse(
	struct soap *soap)
{
	_ns1__GetPicNamesResponse *_p = ::soap_new__ns1__GetPicNamesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetPicNamesResponse * soap_new_set__ns1__GetPicNamesResponse(
	struct soap *soap,
	char *GetPicNamesResult)
{
	_ns1__GetPicNamesResponse *_p = ::soap_new__ns1__GetPicNamesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPicNamesResponse::GetPicNamesResult = GetPicNamesResult;
	}
	return _p;
}

inline int soap_write__ns1__GetPicNamesResponse(struct soap *soap, _ns1__GetPicNamesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPicNamesResponse", p->soap_type() == SOAP_TYPE__ns1__GetPicNamesResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetPicNamesResponse(struct soap *soap, const char *URL, _ns1__GetPicNamesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPicNamesResponse", p->soap_type() == SOAP_TYPE__ns1__GetPicNamesResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetPicNamesResponse(struct soap *soap, const char *URL, _ns1__GetPicNamesResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPicNamesResponse", p->soap_type() == SOAP_TYPE__ns1__GetPicNamesResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetPicNamesResponse * SOAP_FMAC4 soap_get__ns1__GetPicNamesResponse(struct soap*, _ns1__GetPicNamesResponse *, const char*, const char*);

inline int soap_read__ns1__GetPicNamesResponse(struct soap *soap, _ns1__GetPicNamesResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetPicNamesResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetPicNamesResponse(struct soap *soap, const char *URL, _ns1__GetPicNamesResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetPicNamesResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetPicNamesResponse(struct soap *soap, _ns1__GetPicNamesResponse *p)
{
	if (::soap_read__ns1__GetPicNamesResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetPicNames_DEFINED
#define SOAP_TYPE__ns1__GetPicNames_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPicNames(struct soap*, const char*, int, const _ns1__GetPicNames *, const char*);
SOAP_FMAC3 _ns1__GetPicNames * SOAP_FMAC4 soap_in__ns1__GetPicNames(struct soap*, const char*, _ns1__GetPicNames *, const char*);
SOAP_FMAC1 _ns1__GetPicNames * SOAP_FMAC2 soap_instantiate__ns1__GetPicNames(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPicNames * soap_new__ns1__GetPicNames(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetPicNames(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetPicNames * soap_new_req__ns1__GetPicNames(
	struct soap *soap)
{
	_ns1__GetPicNames *_p = ::soap_new__ns1__GetPicNames(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetPicNames * soap_new_set__ns1__GetPicNames(
	struct soap *soap,
	char *xb,
	char *station)
{
	_ns1__GetPicNames *_p = ::soap_new__ns1__GetPicNames(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPicNames::xb = xb;
		_p->_ns1__GetPicNames::station = station;
	}
	return _p;
}

inline int soap_write__ns1__GetPicNames(struct soap *soap, _ns1__GetPicNames const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPicNames", p->soap_type() == SOAP_TYPE__ns1__GetPicNames ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetPicNames(struct soap *soap, const char *URL, _ns1__GetPicNames const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPicNames", p->soap_type() == SOAP_TYPE__ns1__GetPicNames ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetPicNames(struct soap *soap, const char *URL, _ns1__GetPicNames const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPicNames", p->soap_type() == SOAP_TYPE__ns1__GetPicNames ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetPicNames * SOAP_FMAC4 soap_get__ns1__GetPicNames(struct soap*, _ns1__GetPicNames *, const char*, const char*);

inline int soap_read__ns1__GetPicNames(struct soap *soap, _ns1__GetPicNames *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetPicNames(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetPicNames(struct soap *soap, const char *URL, _ns1__GetPicNames *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetPicNames(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetPicNames(struct soap *soap, _ns1__GetPicNames *p)
{
	if (::soap_read__ns1__GetPicNames(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownloadPicResponse_DEFINED
#define SOAP_TYPE__ns1__DownloadPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownloadPicResponse(struct soap*, const char*, int, const _ns1__DownloadPicResponse *, const char*);
SOAP_FMAC3 _ns1__DownloadPicResponse * SOAP_FMAC4 soap_in__ns1__DownloadPicResponse(struct soap*, const char*, _ns1__DownloadPicResponse *, const char*);
SOAP_FMAC1 _ns1__DownloadPicResponse * SOAP_FMAC2 soap_instantiate__ns1__DownloadPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownloadPicResponse * soap_new__ns1__DownloadPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownloadPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownloadPicResponse * soap_new_req__ns1__DownloadPicResponse(
	struct soap *soap)
{
	_ns1__DownloadPicResponse *_p = ::soap_new__ns1__DownloadPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownloadPicResponse * soap_new_set__ns1__DownloadPicResponse(
	struct soap *soap,
	char *DownloadPicResult)
{
	_ns1__DownloadPicResponse *_p = ::soap_new__ns1__DownloadPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownloadPicResponse::DownloadPicResult = DownloadPicResult;
	}
	return _p;
}

inline int soap_write__ns1__DownloadPicResponse(struct soap *soap, _ns1__DownloadPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownloadPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownloadPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownloadPicResponse(struct soap *soap, const char *URL, _ns1__DownloadPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownloadPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownloadPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownloadPicResponse(struct soap *soap, const char *URL, _ns1__DownloadPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownloadPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownloadPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownloadPicResponse * SOAP_FMAC4 soap_get__ns1__DownloadPicResponse(struct soap*, _ns1__DownloadPicResponse *, const char*, const char*);

inline int soap_read__ns1__DownloadPicResponse(struct soap *soap, _ns1__DownloadPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownloadPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownloadPicResponse(struct soap *soap, const char *URL, _ns1__DownloadPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownloadPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownloadPicResponse(struct soap *soap, _ns1__DownloadPicResponse *p)
{
	if (::soap_read__ns1__DownloadPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownloadPic_DEFINED
#define SOAP_TYPE__ns1__DownloadPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownloadPic(struct soap*, const char*, int, const _ns1__DownloadPic *, const char*);
SOAP_FMAC3 _ns1__DownloadPic * SOAP_FMAC4 soap_in__ns1__DownloadPic(struct soap*, const char*, _ns1__DownloadPic *, const char*);
SOAP_FMAC1 _ns1__DownloadPic * SOAP_FMAC2 soap_instantiate__ns1__DownloadPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownloadPic * soap_new__ns1__DownloadPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownloadPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownloadPic * soap_new_req__ns1__DownloadPic(
	struct soap *soap)
{
	_ns1__DownloadPic *_p = ::soap_new__ns1__DownloadPic(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownloadPic * soap_new_set__ns1__DownloadPic(
	struct soap *soap,
	char *picname,
	char *dwname)
{
	_ns1__DownloadPic *_p = ::soap_new__ns1__DownloadPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownloadPic::picname = picname;
		_p->_ns1__DownloadPic::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__DownloadPic(struct soap *soap, _ns1__DownloadPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownloadPic", p->soap_type() == SOAP_TYPE__ns1__DownloadPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownloadPic(struct soap *soap, const char *URL, _ns1__DownloadPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownloadPic", p->soap_type() == SOAP_TYPE__ns1__DownloadPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownloadPic(struct soap *soap, const char *URL, _ns1__DownloadPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownloadPic", p->soap_type() == SOAP_TYPE__ns1__DownloadPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownloadPic * SOAP_FMAC4 soap_get__ns1__DownloadPic(struct soap*, _ns1__DownloadPic *, const char*, const char*);

inline int soap_read__ns1__DownloadPic(struct soap *soap, _ns1__DownloadPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownloadPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownloadPic(struct soap *soap, const char *URL, _ns1__DownloadPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownloadPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownloadPic(struct soap *soap, _ns1__DownloadPic *p)
{
	if (::soap_read__ns1__DownloadPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__upPicResponse_DEFINED
#define SOAP_TYPE__ns1__upPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__upPicResponse(struct soap*, const char*, int, const _ns1__upPicResponse *, const char*);
SOAP_FMAC3 _ns1__upPicResponse * SOAP_FMAC4 soap_in__ns1__upPicResponse(struct soap*, const char*, _ns1__upPicResponse *, const char*);
SOAP_FMAC1 _ns1__upPicResponse * SOAP_FMAC2 soap_instantiate__ns1__upPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__upPicResponse * soap_new__ns1__upPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__upPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__upPicResponse * soap_new_req__ns1__upPicResponse(
	struct soap *soap,
	int upPicResult)
{
	_ns1__upPicResponse *_p = ::soap_new__ns1__upPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__upPicResponse::upPicResult = upPicResult;
	}
	return _p;
}

inline _ns1__upPicResponse * soap_new_set__ns1__upPicResponse(
	struct soap *soap,
	int upPicResult)
{
	_ns1__upPicResponse *_p = ::soap_new__ns1__upPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__upPicResponse::upPicResult = upPicResult;
	}
	return _p;
}

inline int soap_write__ns1__upPicResponse(struct soap *soap, _ns1__upPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:upPicResponse", p->soap_type() == SOAP_TYPE__ns1__upPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__upPicResponse(struct soap *soap, const char *URL, _ns1__upPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:upPicResponse", p->soap_type() == SOAP_TYPE__ns1__upPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__upPicResponse(struct soap *soap, const char *URL, _ns1__upPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:upPicResponse", p->soap_type() == SOAP_TYPE__ns1__upPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__upPicResponse * SOAP_FMAC4 soap_get__ns1__upPicResponse(struct soap*, _ns1__upPicResponse *, const char*, const char*);

inline int soap_read__ns1__upPicResponse(struct soap *soap, _ns1__upPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__upPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__upPicResponse(struct soap *soap, const char *URL, _ns1__upPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__upPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__upPicResponse(struct soap *soap, _ns1__upPicResponse *p)
{
	if (::soap_read__ns1__upPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__upPic_DEFINED
#define SOAP_TYPE__ns1__upPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__upPic(struct soap*, const char*, int, const _ns1__upPic *, const char*);
SOAP_FMAC3 _ns1__upPic * SOAP_FMAC4 soap_in__ns1__upPic(struct soap*, const char*, _ns1__upPic *, const char*);
SOAP_FMAC1 _ns1__upPic * SOAP_FMAC2 soap_instantiate__ns1__upPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__upPic * soap_new__ns1__upPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__upPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__upPic * soap_new_req__ns1__upPic(
	struct soap *soap)
{
	_ns1__upPic *_p = ::soap_new__ns1__upPic(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__upPic * soap_new_set__ns1__upPic(
	struct soap *soap,
	char *personid,
	char *personname,
	char *xb,
	char *station,
	char *picname,
	char *picstr,
	char *dwname)
{
	_ns1__upPic *_p = ::soap_new__ns1__upPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__upPic::personid = personid;
		_p->_ns1__upPic::personname = personname;
		_p->_ns1__upPic::xb = xb;
		_p->_ns1__upPic::station = station;
		_p->_ns1__upPic::picname = picname;
		_p->_ns1__upPic::picstr = picstr;
		_p->_ns1__upPic::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__upPic(struct soap *soap, _ns1__upPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:upPic", p->soap_type() == SOAP_TYPE__ns1__upPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__upPic(struct soap *soap, const char *URL, _ns1__upPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:upPic", p->soap_type() == SOAP_TYPE__ns1__upPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__upPic(struct soap *soap, const char *URL, _ns1__upPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:upPic", p->soap_type() == SOAP_TYPE__ns1__upPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__upPic * SOAP_FMAC4 soap_get__ns1__upPic(struct soap*, _ns1__upPic *, const char*, const char*);

inline int soap_read__ns1__upPic(struct soap *soap, _ns1__upPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__upPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__upPic(struct soap *soap, const char *URL, _ns1__upPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__upPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__upPic(struct soap *soap, _ns1__upPic *p)
{
	if (::soap_read__ns1__upPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__UpLoadFileResponse_DEFINED
#define SOAP_TYPE__ns1__UpLoadFileResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpLoadFileResponse(struct soap*, const char*, int, const _ns1__UpLoadFileResponse *, const char*);
SOAP_FMAC3 _ns1__UpLoadFileResponse * SOAP_FMAC4 soap_in__ns1__UpLoadFileResponse(struct soap*, const char*, _ns1__UpLoadFileResponse *, const char*);
SOAP_FMAC1 _ns1__UpLoadFileResponse * SOAP_FMAC2 soap_instantiate__ns1__UpLoadFileResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpLoadFileResponse * soap_new__ns1__UpLoadFileResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__UpLoadFileResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__UpLoadFileResponse * soap_new_req__ns1__UpLoadFileResponse(
	struct soap *soap,
	int UpLoadFileResult)
{
	_ns1__UpLoadFileResponse *_p = ::soap_new__ns1__UpLoadFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpLoadFileResponse::UpLoadFileResult = UpLoadFileResult;
	}
	return _p;
}

inline _ns1__UpLoadFileResponse * soap_new_set__ns1__UpLoadFileResponse(
	struct soap *soap,
	int UpLoadFileResult)
{
	_ns1__UpLoadFileResponse *_p = ::soap_new__ns1__UpLoadFileResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpLoadFileResponse::UpLoadFileResult = UpLoadFileResult;
	}
	return _p;
}

inline int soap_write__ns1__UpLoadFileResponse(struct soap *soap, _ns1__UpLoadFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadFileResponse", p->soap_type() == SOAP_TYPE__ns1__UpLoadFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__UpLoadFileResponse(struct soap *soap, const char *URL, _ns1__UpLoadFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadFileResponse", p->soap_type() == SOAP_TYPE__ns1__UpLoadFileResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__UpLoadFileResponse(struct soap *soap, const char *URL, _ns1__UpLoadFileResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadFileResponse", p->soap_type() == SOAP_TYPE__ns1__UpLoadFileResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__UpLoadFileResponse * SOAP_FMAC4 soap_get__ns1__UpLoadFileResponse(struct soap*, _ns1__UpLoadFileResponse *, const char*, const char*);

inline int soap_read__ns1__UpLoadFileResponse(struct soap *soap, _ns1__UpLoadFileResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__UpLoadFileResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__UpLoadFileResponse(struct soap *soap, const char *URL, _ns1__UpLoadFileResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__UpLoadFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__UpLoadFileResponse(struct soap *soap, _ns1__UpLoadFileResponse *p)
{
	if (::soap_read__ns1__UpLoadFileResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__UpLoadFile_DEFINED
#define SOAP_TYPE__ns1__UpLoadFile_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpLoadFile(struct soap*, const char*, int, const _ns1__UpLoadFile *, const char*);
SOAP_FMAC3 _ns1__UpLoadFile * SOAP_FMAC4 soap_in__ns1__UpLoadFile(struct soap*, const char*, _ns1__UpLoadFile *, const char*);
SOAP_FMAC1 _ns1__UpLoadFile * SOAP_FMAC2 soap_instantiate__ns1__UpLoadFile(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpLoadFile * soap_new__ns1__UpLoadFile(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__UpLoadFile(soap, n, NULL, NULL, NULL);
}

inline _ns1__UpLoadFile * soap_new_req__ns1__UpLoadFile(
	struct soap *soap,
	int index)
{
	_ns1__UpLoadFile *_p = ::soap_new__ns1__UpLoadFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpLoadFile::index = index;
	}
	return _p;
}

inline _ns1__UpLoadFile * soap_new_set__ns1__UpLoadFile(
	struct soap *soap,
	char *filename,
	int index,
	char *fstr,
	char *dwname)
{
	_ns1__UpLoadFile *_p = ::soap_new__ns1__UpLoadFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpLoadFile::filename = filename;
		_p->_ns1__UpLoadFile::index = index;
		_p->_ns1__UpLoadFile::fstr = fstr;
		_p->_ns1__UpLoadFile::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__UpLoadFile(struct soap *soap, _ns1__UpLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadFile", p->soap_type() == SOAP_TYPE__ns1__UpLoadFile ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__UpLoadFile(struct soap *soap, const char *URL, _ns1__UpLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadFile", p->soap_type() == SOAP_TYPE__ns1__UpLoadFile ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__UpLoadFile(struct soap *soap, const char *URL, _ns1__UpLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadFile", p->soap_type() == SOAP_TYPE__ns1__UpLoadFile ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__UpLoadFile * SOAP_FMAC4 soap_get__ns1__UpLoadFile(struct soap*, _ns1__UpLoadFile *, const char*, const char*);

inline int soap_read__ns1__UpLoadFile(struct soap *soap, _ns1__UpLoadFile *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__UpLoadFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__UpLoadFile(struct soap *soap, const char *URL, _ns1__UpLoadFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__UpLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__UpLoadFile(struct soap *soap, _ns1__UpLoadFile *p)
{
	if (::soap_read__ns1__UpLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetAPVupdaterResponse_DEFINED
#define SOAP_TYPE__ns1__GetAPVupdaterResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAPVupdaterResponse(struct soap*, const char*, int, const _ns1__GetAPVupdaterResponse *, const char*);
SOAP_FMAC3 _ns1__GetAPVupdaterResponse * SOAP_FMAC4 soap_in__ns1__GetAPVupdaterResponse(struct soap*, const char*, _ns1__GetAPVupdaterResponse *, const char*);
SOAP_FMAC1 _ns1__GetAPVupdaterResponse * SOAP_FMAC2 soap_instantiate__ns1__GetAPVupdaterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAPVupdaterResponse * soap_new__ns1__GetAPVupdaterResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAPVupdaterResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAPVupdaterResponse * soap_new_req__ns1__GetAPVupdaterResponse(
	struct soap *soap)
{
	_ns1__GetAPVupdaterResponse *_p = ::soap_new__ns1__GetAPVupdaterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAPVupdaterResponse * soap_new_set__ns1__GetAPVupdaterResponse(
	struct soap *soap,
	char *GetAPVupdaterResult)
{
	_ns1__GetAPVupdaterResponse *_p = ::soap_new__ns1__GetAPVupdaterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetAPVupdaterResponse::GetAPVupdaterResult = GetAPVupdaterResult;
	}
	return _p;
}

inline int soap_write__ns1__GetAPVupdaterResponse(struct soap *soap, _ns1__GetAPVupdaterResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAPVupdaterResponse", p->soap_type() == SOAP_TYPE__ns1__GetAPVupdaterResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAPVupdaterResponse(struct soap *soap, const char *URL, _ns1__GetAPVupdaterResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAPVupdaterResponse", p->soap_type() == SOAP_TYPE__ns1__GetAPVupdaterResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAPVupdaterResponse(struct soap *soap, const char *URL, _ns1__GetAPVupdaterResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAPVupdaterResponse", p->soap_type() == SOAP_TYPE__ns1__GetAPVupdaterResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAPVupdaterResponse * SOAP_FMAC4 soap_get__ns1__GetAPVupdaterResponse(struct soap*, _ns1__GetAPVupdaterResponse *, const char*, const char*);

inline int soap_read__ns1__GetAPVupdaterResponse(struct soap *soap, _ns1__GetAPVupdaterResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAPVupdaterResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAPVupdaterResponse(struct soap *soap, const char *URL, _ns1__GetAPVupdaterResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAPVupdaterResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetAPVupdaterResponse(struct soap *soap, _ns1__GetAPVupdaterResponse *p)
{
	if (::soap_read__ns1__GetAPVupdaterResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetAPVupdater_DEFINED
#define SOAP_TYPE__ns1__GetAPVupdater_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAPVupdater(struct soap*, const char*, int, const _ns1__GetAPVupdater *, const char*);
SOAP_FMAC3 _ns1__GetAPVupdater * SOAP_FMAC4 soap_in__ns1__GetAPVupdater(struct soap*, const char*, _ns1__GetAPVupdater *, const char*);
SOAP_FMAC1 _ns1__GetAPVupdater * SOAP_FMAC2 soap_instantiate__ns1__GetAPVupdater(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAPVupdater * soap_new__ns1__GetAPVupdater(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetAPVupdater(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetAPVupdater * soap_new_req__ns1__GetAPVupdater(
	struct soap *soap)
{
	_ns1__GetAPVupdater *_p = ::soap_new__ns1__GetAPVupdater(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetAPVupdater * soap_new_set__ns1__GetAPVupdater(
	struct soap *soap)
{
	_ns1__GetAPVupdater *_p = ::soap_new__ns1__GetAPVupdater(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetAPVupdater(struct soap *soap, _ns1__GetAPVupdater const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAPVupdater", p->soap_type() == SOAP_TYPE__ns1__GetAPVupdater ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetAPVupdater(struct soap *soap, const char *URL, _ns1__GetAPVupdater const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAPVupdater", p->soap_type() == SOAP_TYPE__ns1__GetAPVupdater ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetAPVupdater(struct soap *soap, const char *URL, _ns1__GetAPVupdater const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetAPVupdater", p->soap_type() == SOAP_TYPE__ns1__GetAPVupdater ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetAPVupdater * SOAP_FMAC4 soap_get__ns1__GetAPVupdater(struct soap*, _ns1__GetAPVupdater *, const char*, const char*);

inline int soap_read__ns1__GetAPVupdater(struct soap *soap, _ns1__GetAPVupdater *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetAPVupdater(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetAPVupdater(struct soap *soap, const char *URL, _ns1__GetAPVupdater *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetAPVupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetAPVupdater(struct soap *soap, _ns1__GetAPVupdater *p)
{
	if (::soap_read__ns1__GetAPVupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetXHYDGLXTupdaterResponse_DEFINED
#define SOAP_TYPE__ns1__GetXHYDGLXTupdaterResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXHYDGLXTupdaterResponse(struct soap*, const char*, int, const _ns1__GetXHYDGLXTupdaterResponse *, const char*);
SOAP_FMAC3 _ns1__GetXHYDGLXTupdaterResponse * SOAP_FMAC4 soap_in__ns1__GetXHYDGLXTupdaterResponse(struct soap*, const char*, _ns1__GetXHYDGLXTupdaterResponse *, const char*);
SOAP_FMAC1 _ns1__GetXHYDGLXTupdaterResponse * SOAP_FMAC2 soap_instantiate__ns1__GetXHYDGLXTupdaterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXHYDGLXTupdaterResponse * soap_new__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetXHYDGLXTupdaterResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetXHYDGLXTupdaterResponse * soap_new_req__ns1__GetXHYDGLXTupdaterResponse(
	struct soap *soap)
{
	_ns1__GetXHYDGLXTupdaterResponse *_p = ::soap_new__ns1__GetXHYDGLXTupdaterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetXHYDGLXTupdaterResponse * soap_new_set__ns1__GetXHYDGLXTupdaterResponse(
	struct soap *soap,
	char *GetXHYDGLXTupdaterResult)
{
	_ns1__GetXHYDGLXTupdaterResponse *_p = ::soap_new__ns1__GetXHYDGLXTupdaterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetXHYDGLXTupdaterResponse::GetXHYDGLXTupdaterResult = GetXHYDGLXTupdaterResult;
	}
	return _p;
}

inline int soap_write__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, _ns1__GetXHYDGLXTupdaterResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXHYDGLXTupdaterResponse", p->soap_type() == SOAP_TYPE__ns1__GetXHYDGLXTupdaterResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, const char *URL, _ns1__GetXHYDGLXTupdaterResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXHYDGLXTupdaterResponse", p->soap_type() == SOAP_TYPE__ns1__GetXHYDGLXTupdaterResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, const char *URL, _ns1__GetXHYDGLXTupdaterResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXHYDGLXTupdaterResponse", p->soap_type() == SOAP_TYPE__ns1__GetXHYDGLXTupdaterResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetXHYDGLXTupdaterResponse * SOAP_FMAC4 soap_get__ns1__GetXHYDGLXTupdaterResponse(struct soap*, _ns1__GetXHYDGLXTupdaterResponse *, const char*, const char*);

inline int soap_read__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, _ns1__GetXHYDGLXTupdaterResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetXHYDGLXTupdaterResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, const char *URL, _ns1__GetXHYDGLXTupdaterResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetXHYDGLXTupdaterResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetXHYDGLXTupdaterResponse(struct soap *soap, _ns1__GetXHYDGLXTupdaterResponse *p)
{
	if (::soap_read__ns1__GetXHYDGLXTupdaterResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetXHYDGLXTupdater_DEFINED
#define SOAP_TYPE__ns1__GetXHYDGLXTupdater_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetXHYDGLXTupdater(struct soap*, const char*, int, const _ns1__GetXHYDGLXTupdater *, const char*);
SOAP_FMAC3 _ns1__GetXHYDGLXTupdater * SOAP_FMAC4 soap_in__ns1__GetXHYDGLXTupdater(struct soap*, const char*, _ns1__GetXHYDGLXTupdater *, const char*);
SOAP_FMAC1 _ns1__GetXHYDGLXTupdater * SOAP_FMAC2 soap_instantiate__ns1__GetXHYDGLXTupdater(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetXHYDGLXTupdater * soap_new__ns1__GetXHYDGLXTupdater(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetXHYDGLXTupdater(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetXHYDGLXTupdater * soap_new_req__ns1__GetXHYDGLXTupdater(
	struct soap *soap)
{
	_ns1__GetXHYDGLXTupdater *_p = ::soap_new__ns1__GetXHYDGLXTupdater(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetXHYDGLXTupdater * soap_new_set__ns1__GetXHYDGLXTupdater(
	struct soap *soap,
	char *localver)
{
	_ns1__GetXHYDGLXTupdater *_p = ::soap_new__ns1__GetXHYDGLXTupdater(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetXHYDGLXTupdater::localver = localver;
	}
	return _p;
}

inline int soap_write__ns1__GetXHYDGLXTupdater(struct soap *soap, _ns1__GetXHYDGLXTupdater const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXHYDGLXTupdater", p->soap_type() == SOAP_TYPE__ns1__GetXHYDGLXTupdater ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetXHYDGLXTupdater(struct soap *soap, const char *URL, _ns1__GetXHYDGLXTupdater const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXHYDGLXTupdater", p->soap_type() == SOAP_TYPE__ns1__GetXHYDGLXTupdater ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetXHYDGLXTupdater(struct soap *soap, const char *URL, _ns1__GetXHYDGLXTupdater const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetXHYDGLXTupdater", p->soap_type() == SOAP_TYPE__ns1__GetXHYDGLXTupdater ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetXHYDGLXTupdater * SOAP_FMAC4 soap_get__ns1__GetXHYDGLXTupdater(struct soap*, _ns1__GetXHYDGLXTupdater *, const char*, const char*);

inline int soap_read__ns1__GetXHYDGLXTupdater(struct soap *soap, _ns1__GetXHYDGLXTupdater *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetXHYDGLXTupdater(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetXHYDGLXTupdater(struct soap *soap, const char *URL, _ns1__GetXHYDGLXTupdater *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetXHYDGLXTupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetXHYDGLXTupdater(struct soap *soap, _ns1__GetXHYDGLXTupdater *p)
{
	if (::soap_read__ns1__GetXHYDGLXTupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ExecuteSqlForColbResponse_DEFINED
#define SOAP_TYPE__ns1__ExecuteSqlForColbResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteSqlForColbResponse(struct soap*, const char*, int, const _ns1__ExecuteSqlForColbResponse *, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlForColbResponse * SOAP_FMAC4 soap_in__ns1__ExecuteSqlForColbResponse(struct soap*, const char*, _ns1__ExecuteSqlForColbResponse *, const char*);
SOAP_FMAC1 _ns1__ExecuteSqlForColbResponse * SOAP_FMAC2 soap_instantiate__ns1__ExecuteSqlForColbResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExecuteSqlForColbResponse * soap_new__ns1__ExecuteSqlForColbResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ExecuteSqlForColbResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ExecuteSqlForColbResponse * soap_new_req__ns1__ExecuteSqlForColbResponse(
	struct soap *soap,
	int ExecuteSqlForColbResult)
{
	_ns1__ExecuteSqlForColbResponse *_p = ::soap_new__ns1__ExecuteSqlForColbResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlForColbResponse::ExecuteSqlForColbResult = ExecuteSqlForColbResult;
	}
	return _p;
}

inline _ns1__ExecuteSqlForColbResponse * soap_new_set__ns1__ExecuteSqlForColbResponse(
	struct soap *soap,
	int ExecuteSqlForColbResult)
{
	_ns1__ExecuteSqlForColbResponse *_p = ::soap_new__ns1__ExecuteSqlForColbResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlForColbResponse::ExecuteSqlForColbResult = ExecuteSqlForColbResult;
	}
	return _p;
}

inline int soap_write__ns1__ExecuteSqlForColbResponse(struct soap *soap, _ns1__ExecuteSqlForColbResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForColbResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForColbResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ExecuteSqlForColbResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlForColbResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForColbResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForColbResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ExecuteSqlForColbResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlForColbResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForColbResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForColbResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ExecuteSqlForColbResponse * SOAP_FMAC4 soap_get__ns1__ExecuteSqlForColbResponse(struct soap*, _ns1__ExecuteSqlForColbResponse *, const char*, const char*);

inline int soap_read__ns1__ExecuteSqlForColbResponse(struct soap *soap, _ns1__ExecuteSqlForColbResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ExecuteSqlForColbResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ExecuteSqlForColbResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlForColbResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ExecuteSqlForColbResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ExecuteSqlForColbResponse(struct soap *soap, _ns1__ExecuteSqlForColbResponse *p)
{
	if (::soap_read__ns1__ExecuteSqlForColbResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ExecuteSqlForColb_DEFINED
#define SOAP_TYPE__ns1__ExecuteSqlForColb_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteSqlForColb(struct soap*, const char*, int, const _ns1__ExecuteSqlForColb *, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlForColb * SOAP_FMAC4 soap_in__ns1__ExecuteSqlForColb(struct soap*, const char*, _ns1__ExecuteSqlForColb *, const char*);
SOAP_FMAC1 _ns1__ExecuteSqlForColb * SOAP_FMAC2 soap_instantiate__ns1__ExecuteSqlForColb(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExecuteSqlForColb * soap_new__ns1__ExecuteSqlForColb(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ExecuteSqlForColb(soap, n, NULL, NULL, NULL);
}

inline _ns1__ExecuteSqlForColb * soap_new_req__ns1__ExecuteSqlForColb(
	struct soap *soap)
{
	_ns1__ExecuteSqlForColb *_p = ::soap_new__ns1__ExecuteSqlForColb(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ExecuteSqlForColb * soap_new_set__ns1__ExecuteSqlForColb(
	struct soap *soap,
	char *sql,
	char *sqlParName,
	char *fieldValue)
{
	_ns1__ExecuteSqlForColb *_p = ::soap_new__ns1__ExecuteSqlForColb(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlForColb::sql = sql;
		_p->_ns1__ExecuteSqlForColb::sqlParName = sqlParName;
		_p->_ns1__ExecuteSqlForColb::fieldValue = fieldValue;
	}
	return _p;
}

inline int soap_write__ns1__ExecuteSqlForColb(struct soap *soap, _ns1__ExecuteSqlForColb const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForColb", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForColb ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ExecuteSqlForColb(struct soap *soap, const char *URL, _ns1__ExecuteSqlForColb const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForColb", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForColb ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ExecuteSqlForColb(struct soap *soap, const char *URL, _ns1__ExecuteSqlForColb const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlForColb", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlForColb ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ExecuteSqlForColb * SOAP_FMAC4 soap_get__ns1__ExecuteSqlForColb(struct soap*, _ns1__ExecuteSqlForColb *, const char*, const char*);

inline int soap_read__ns1__ExecuteSqlForColb(struct soap *soap, _ns1__ExecuteSqlForColb *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ExecuteSqlForColb(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ExecuteSqlForColb(struct soap *soap, const char *URL, _ns1__ExecuteSqlForColb *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ExecuteSqlForColb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ExecuteSqlForColb(struct soap *soap, _ns1__ExecuteSqlForColb *p)
{
	if (::soap_read__ns1__ExecuteSqlForColb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__UpLoadDataResponse_DEFINED
#define SOAP_TYPE__ns1__UpLoadDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpLoadDataResponse(struct soap*, const char*, int, const _ns1__UpLoadDataResponse *, const char*);
SOAP_FMAC3 _ns1__UpLoadDataResponse * SOAP_FMAC4 soap_in__ns1__UpLoadDataResponse(struct soap*, const char*, _ns1__UpLoadDataResponse *, const char*);
SOAP_FMAC1 _ns1__UpLoadDataResponse * SOAP_FMAC2 soap_instantiate__ns1__UpLoadDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpLoadDataResponse * soap_new__ns1__UpLoadDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__UpLoadDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__UpLoadDataResponse * soap_new_req__ns1__UpLoadDataResponse(
	struct soap *soap)
{
	_ns1__UpLoadDataResponse *_p = ::soap_new__ns1__UpLoadDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__UpLoadDataResponse * soap_new_set__ns1__UpLoadDataResponse(
	struct soap *soap,
	char *UpLoadDataResult)
{
	_ns1__UpLoadDataResponse *_p = ::soap_new__ns1__UpLoadDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpLoadDataResponse::UpLoadDataResult = UpLoadDataResult;
	}
	return _p;
}

inline int soap_write__ns1__UpLoadDataResponse(struct soap *soap, _ns1__UpLoadDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadDataResponse", p->soap_type() == SOAP_TYPE__ns1__UpLoadDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__UpLoadDataResponse(struct soap *soap, const char *URL, _ns1__UpLoadDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadDataResponse", p->soap_type() == SOAP_TYPE__ns1__UpLoadDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__UpLoadDataResponse(struct soap *soap, const char *URL, _ns1__UpLoadDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadDataResponse", p->soap_type() == SOAP_TYPE__ns1__UpLoadDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__UpLoadDataResponse * SOAP_FMAC4 soap_get__ns1__UpLoadDataResponse(struct soap*, _ns1__UpLoadDataResponse *, const char*, const char*);

inline int soap_read__ns1__UpLoadDataResponse(struct soap *soap, _ns1__UpLoadDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__UpLoadDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__UpLoadDataResponse(struct soap *soap, const char *URL, _ns1__UpLoadDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__UpLoadDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__UpLoadDataResponse(struct soap *soap, _ns1__UpLoadDataResponse *p)
{
	if (::soap_read__ns1__UpLoadDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__UpLoadData_DEFINED
#define SOAP_TYPE__ns1__UpLoadData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpLoadData(struct soap*, const char*, int, const _ns1__UpLoadData *, const char*);
SOAP_FMAC3 _ns1__UpLoadData * SOAP_FMAC4 soap_in__ns1__UpLoadData(struct soap*, const char*, _ns1__UpLoadData *, const char*);
SOAP_FMAC1 _ns1__UpLoadData * SOAP_FMAC2 soap_instantiate__ns1__UpLoadData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UpLoadData * soap_new__ns1__UpLoadData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__UpLoadData(soap, n, NULL, NULL, NULL);
}

inline _ns1__UpLoadData * soap_new_req__ns1__UpLoadData(
	struct soap *soap)
{
	_ns1__UpLoadData *_p = ::soap_new__ns1__UpLoadData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__UpLoadData * soap_new_set__ns1__UpLoadData(
	struct soap *soap,
	char *sql,
	char *file,
	char *filename,
	char *dwname)
{
	_ns1__UpLoadData *_p = ::soap_new__ns1__UpLoadData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__UpLoadData::sql = sql;
		_p->_ns1__UpLoadData::file = file;
		_p->_ns1__UpLoadData::filename = filename;
		_p->_ns1__UpLoadData::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__UpLoadData(struct soap *soap, _ns1__UpLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadData", p->soap_type() == SOAP_TYPE__ns1__UpLoadData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__UpLoadData(struct soap *soap, const char *URL, _ns1__UpLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadData", p->soap_type() == SOAP_TYPE__ns1__UpLoadData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__UpLoadData(struct soap *soap, const char *URL, _ns1__UpLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:UpLoadData", p->soap_type() == SOAP_TYPE__ns1__UpLoadData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__UpLoadData * SOAP_FMAC4 soap_get__ns1__UpLoadData(struct soap*, _ns1__UpLoadData *, const char*, const char*);

inline int soap_read__ns1__UpLoadData(struct soap *soap, _ns1__UpLoadData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__UpLoadData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__UpLoadData(struct soap *soap, const char *URL, _ns1__UpLoadData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__UpLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__UpLoadData(struct soap *soap, _ns1__UpLoadData *p)
{
	if (::soap_read__ns1__UpLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__TcdSendupResponse_DEFINED
#define SOAP_TYPE__ns1__TcdSendupResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__TcdSendupResponse(struct soap*, const char*, int, const _ns1__TcdSendupResponse *, const char*);
SOAP_FMAC3 _ns1__TcdSendupResponse * SOAP_FMAC4 soap_in__ns1__TcdSendupResponse(struct soap*, const char*, _ns1__TcdSendupResponse *, const char*);
SOAP_FMAC1 _ns1__TcdSendupResponse * SOAP_FMAC2 soap_instantiate__ns1__TcdSendupResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__TcdSendupResponse * soap_new__ns1__TcdSendupResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__TcdSendupResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__TcdSendupResponse * soap_new_req__ns1__TcdSendupResponse(
	struct soap *soap,
	int TcdSendupResult)
{
	_ns1__TcdSendupResponse *_p = ::soap_new__ns1__TcdSendupResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__TcdSendupResponse::TcdSendupResult = TcdSendupResult;
	}
	return _p;
}

inline _ns1__TcdSendupResponse * soap_new_set__ns1__TcdSendupResponse(
	struct soap *soap,
	int TcdSendupResult)
{
	_ns1__TcdSendupResponse *_p = ::soap_new__ns1__TcdSendupResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__TcdSendupResponse::TcdSendupResult = TcdSendupResult;
	}
	return _p;
}

inline int soap_write__ns1__TcdSendupResponse(struct soap *soap, _ns1__TcdSendupResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdSendupResponse", p->soap_type() == SOAP_TYPE__ns1__TcdSendupResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__TcdSendupResponse(struct soap *soap, const char *URL, _ns1__TcdSendupResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdSendupResponse", p->soap_type() == SOAP_TYPE__ns1__TcdSendupResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__TcdSendupResponse(struct soap *soap, const char *URL, _ns1__TcdSendupResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdSendupResponse", p->soap_type() == SOAP_TYPE__ns1__TcdSendupResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__TcdSendupResponse * SOAP_FMAC4 soap_get__ns1__TcdSendupResponse(struct soap*, _ns1__TcdSendupResponse *, const char*, const char*);

inline int soap_read__ns1__TcdSendupResponse(struct soap *soap, _ns1__TcdSendupResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__TcdSendupResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__TcdSendupResponse(struct soap *soap, const char *URL, _ns1__TcdSendupResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__TcdSendupResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__TcdSendupResponse(struct soap *soap, _ns1__TcdSendupResponse *p)
{
	if (::soap_read__ns1__TcdSendupResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__TcdSendup_DEFINED
#define SOAP_TYPE__ns1__TcdSendup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__TcdSendup(struct soap*, const char*, int, const _ns1__TcdSendup *, const char*);
SOAP_FMAC3 _ns1__TcdSendup * SOAP_FMAC4 soap_in__ns1__TcdSendup(struct soap*, const char*, _ns1__TcdSendup *, const char*);
SOAP_FMAC1 _ns1__TcdSendup * SOAP_FMAC2 soap_instantiate__ns1__TcdSendup(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__TcdSendup * soap_new__ns1__TcdSendup(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__TcdSendup(soap, n, NULL, NULL, NULL);
}

inline _ns1__TcdSendup * soap_new_req__ns1__TcdSendup(
	struct soap *soap)
{
	_ns1__TcdSendup *_p = ::soap_new__ns1__TcdSendup(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__TcdSendup * soap_new_set__ns1__TcdSendup(
	struct soap *soap,
	char *guid,
	char *tctype,
	char *date,
	char *personnum,
	char *time1,
	char *time2)
{
	_ns1__TcdSendup *_p = ::soap_new__ns1__TcdSendup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__TcdSendup::guid = guid;
		_p->_ns1__TcdSendup::tctype = tctype;
		_p->_ns1__TcdSendup::date = date;
		_p->_ns1__TcdSendup::personnum = personnum;
		_p->_ns1__TcdSendup::time1 = time1;
		_p->_ns1__TcdSendup::time2 = time2;
	}
	return _p;
}

inline int soap_write__ns1__TcdSendup(struct soap *soap, _ns1__TcdSendup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdSendup", p->soap_type() == SOAP_TYPE__ns1__TcdSendup ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__TcdSendup(struct soap *soap, const char *URL, _ns1__TcdSendup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdSendup", p->soap_type() == SOAP_TYPE__ns1__TcdSendup ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__TcdSendup(struct soap *soap, const char *URL, _ns1__TcdSendup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdSendup", p->soap_type() == SOAP_TYPE__ns1__TcdSendup ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__TcdSendup * SOAP_FMAC4 soap_get__ns1__TcdSendup(struct soap*, _ns1__TcdSendup *, const char*, const char*);

inline int soap_read__ns1__TcdSendup(struct soap *soap, _ns1__TcdSendup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__TcdSendup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__TcdSendup(struct soap *soap, const char *URL, _ns1__TcdSendup *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__TcdSendup(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__TcdSendup(struct soap *soap, _ns1__TcdSendup *p)
{
	if (::soap_read__ns1__TcdSendup(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__TcdQueryResponse_DEFINED
#define SOAP_TYPE__ns1__TcdQueryResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__TcdQueryResponse(struct soap*, const char*, int, const _ns1__TcdQueryResponse *, const char*);
SOAP_FMAC3 _ns1__TcdQueryResponse * SOAP_FMAC4 soap_in__ns1__TcdQueryResponse(struct soap*, const char*, _ns1__TcdQueryResponse *, const char*);
SOAP_FMAC1 _ns1__TcdQueryResponse * SOAP_FMAC2 soap_instantiate__ns1__TcdQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__TcdQueryResponse * soap_new__ns1__TcdQueryResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__TcdQueryResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__TcdQueryResponse * soap_new_req__ns1__TcdQueryResponse(
	struct soap *soap)
{
	_ns1__TcdQueryResponse *_p = ::soap_new__ns1__TcdQueryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__TcdQueryResponse * soap_new_set__ns1__TcdQueryResponse(
	struct soap *soap,
	char *TcdQueryResult)
{
	_ns1__TcdQueryResponse *_p = ::soap_new__ns1__TcdQueryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__TcdQueryResponse::TcdQueryResult = TcdQueryResult;
	}
	return _p;
}

inline int soap_write__ns1__TcdQueryResponse(struct soap *soap, _ns1__TcdQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdQueryResponse", p->soap_type() == SOAP_TYPE__ns1__TcdQueryResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__TcdQueryResponse(struct soap *soap, const char *URL, _ns1__TcdQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdQueryResponse", p->soap_type() == SOAP_TYPE__ns1__TcdQueryResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__TcdQueryResponse(struct soap *soap, const char *URL, _ns1__TcdQueryResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdQueryResponse", p->soap_type() == SOAP_TYPE__ns1__TcdQueryResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__TcdQueryResponse * SOAP_FMAC4 soap_get__ns1__TcdQueryResponse(struct soap*, _ns1__TcdQueryResponse *, const char*, const char*);

inline int soap_read__ns1__TcdQueryResponse(struct soap *soap, _ns1__TcdQueryResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__TcdQueryResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__TcdQueryResponse(struct soap *soap, const char *URL, _ns1__TcdQueryResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__TcdQueryResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__TcdQueryResponse(struct soap *soap, _ns1__TcdQueryResponse *p)
{
	if (::soap_read__ns1__TcdQueryResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__TcdQuery_DEFINED
#define SOAP_TYPE__ns1__TcdQuery_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__TcdQuery(struct soap*, const char*, int, const _ns1__TcdQuery *, const char*);
SOAP_FMAC3 _ns1__TcdQuery * SOAP_FMAC4 soap_in__ns1__TcdQuery(struct soap*, const char*, _ns1__TcdQuery *, const char*);
SOAP_FMAC1 _ns1__TcdQuery * SOAP_FMAC2 soap_instantiate__ns1__TcdQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__TcdQuery * soap_new__ns1__TcdQuery(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__TcdQuery(soap, n, NULL, NULL, NULL);
}

inline _ns1__TcdQuery * soap_new_req__ns1__TcdQuery(
	struct soap *soap)
{
	_ns1__TcdQuery *_p = ::soap_new__ns1__TcdQuery(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__TcdQuery * soap_new_set__ns1__TcdQuery(
	struct soap *soap,
	char *xb,
	char *station)
{
	_ns1__TcdQuery *_p = ::soap_new__ns1__TcdQuery(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__TcdQuery::xb = xb;
		_p->_ns1__TcdQuery::station = station;
	}
	return _p;
}

inline int soap_write__ns1__TcdQuery(struct soap *soap, _ns1__TcdQuery const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdQuery", p->soap_type() == SOAP_TYPE__ns1__TcdQuery ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__TcdQuery(struct soap *soap, const char *URL, _ns1__TcdQuery const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdQuery", p->soap_type() == SOAP_TYPE__ns1__TcdQuery ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__TcdQuery(struct soap *soap, const char *URL, _ns1__TcdQuery const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:TcdQuery", p->soap_type() == SOAP_TYPE__ns1__TcdQuery ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__TcdQuery * SOAP_FMAC4 soap_get__ns1__TcdQuery(struct soap*, _ns1__TcdQuery *, const char*, const char*);

inline int soap_read__ns1__TcdQuery(struct soap *soap, _ns1__TcdQuery *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__TcdQuery(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__TcdQuery(struct soap *soap, const char *URL, _ns1__TcdQuery *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__TcdQuery(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__TcdQuery(struct soap *soap, _ns1__TcdQuery *p)
{
	if (::soap_read__ns1__TcdQuery(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__QueryPhotobwResponse_DEFINED
#define SOAP_TYPE__ns1__QueryPhotobwResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryPhotobwResponse(struct soap*, const char*, int, const _ns1__QueryPhotobwResponse *, const char*);
SOAP_FMAC3 _ns1__QueryPhotobwResponse * SOAP_FMAC4 soap_in__ns1__QueryPhotobwResponse(struct soap*, const char*, _ns1__QueryPhotobwResponse *, const char*);
SOAP_FMAC1 _ns1__QueryPhotobwResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryPhotobwResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryPhotobwResponse * soap_new__ns1__QueryPhotobwResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__QueryPhotobwResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__QueryPhotobwResponse * soap_new_req__ns1__QueryPhotobwResponse(
	struct soap *soap)
{
	_ns1__QueryPhotobwResponse *_p = ::soap_new__ns1__QueryPhotobwResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__QueryPhotobwResponse * soap_new_set__ns1__QueryPhotobwResponse(
	struct soap *soap,
	char *QueryPhotobwResult)
{
	_ns1__QueryPhotobwResponse *_p = ::soap_new__ns1__QueryPhotobwResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__QueryPhotobwResponse::QueryPhotobwResult = QueryPhotobwResult;
	}
	return _p;
}

inline int soap_write__ns1__QueryPhotobwResponse(struct soap *soap, _ns1__QueryPhotobwResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryPhotobwResponse", p->soap_type() == SOAP_TYPE__ns1__QueryPhotobwResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__QueryPhotobwResponse(struct soap *soap, const char *URL, _ns1__QueryPhotobwResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryPhotobwResponse", p->soap_type() == SOAP_TYPE__ns1__QueryPhotobwResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__QueryPhotobwResponse(struct soap *soap, const char *URL, _ns1__QueryPhotobwResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryPhotobwResponse", p->soap_type() == SOAP_TYPE__ns1__QueryPhotobwResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__QueryPhotobwResponse * SOAP_FMAC4 soap_get__ns1__QueryPhotobwResponse(struct soap*, _ns1__QueryPhotobwResponse *, const char*, const char*);

inline int soap_read__ns1__QueryPhotobwResponse(struct soap *soap, _ns1__QueryPhotobwResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__QueryPhotobwResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__QueryPhotobwResponse(struct soap *soap, const char *URL, _ns1__QueryPhotobwResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__QueryPhotobwResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__QueryPhotobwResponse(struct soap *soap, _ns1__QueryPhotobwResponse *p)
{
	if (::soap_read__ns1__QueryPhotobwResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__QueryPhotobw_DEFINED
#define SOAP_TYPE__ns1__QueryPhotobw_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryPhotobw(struct soap*, const char*, int, const _ns1__QueryPhotobw *, const char*);
SOAP_FMAC3 _ns1__QueryPhotobw * SOAP_FMAC4 soap_in__ns1__QueryPhotobw(struct soap*, const char*, _ns1__QueryPhotobw *, const char*);
SOAP_FMAC1 _ns1__QueryPhotobw * SOAP_FMAC2 soap_instantiate__ns1__QueryPhotobw(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryPhotobw * soap_new__ns1__QueryPhotobw(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__QueryPhotobw(soap, n, NULL, NULL, NULL);
}

inline _ns1__QueryPhotobw * soap_new_req__ns1__QueryPhotobw(
	struct soap *soap)
{
	_ns1__QueryPhotobw *_p = ::soap_new__ns1__QueryPhotobw(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__QueryPhotobw * soap_new_set__ns1__QueryPhotobw(
	struct soap *soap)
{
	_ns1__QueryPhotobw *_p = ::soap_new__ns1__QueryPhotobw(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__QueryPhotobw(struct soap *soap, _ns1__QueryPhotobw const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryPhotobw", p->soap_type() == SOAP_TYPE__ns1__QueryPhotobw ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__QueryPhotobw(struct soap *soap, const char *URL, _ns1__QueryPhotobw const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryPhotobw", p->soap_type() == SOAP_TYPE__ns1__QueryPhotobw ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__QueryPhotobw(struct soap *soap, const char *URL, _ns1__QueryPhotobw const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryPhotobw", p->soap_type() == SOAP_TYPE__ns1__QueryPhotobw ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__QueryPhotobw * SOAP_FMAC4 soap_get__ns1__QueryPhotobw(struct soap*, _ns1__QueryPhotobw *, const char*, const char*);

inline int soap_read__ns1__QueryPhotobw(struct soap *soap, _ns1__QueryPhotobw *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__QueryPhotobw(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__QueryPhotobw(struct soap *soap, const char *URL, _ns1__QueryPhotobw *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__QueryPhotobw(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__QueryPhotobw(struct soap *soap, _ns1__QueryPhotobw *p)
{
	if (::soap_read__ns1__QueryPhotobw(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetOsDateTimeResponse_DEFINED
#define SOAP_TYPE__ns1__GetOsDateTimeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetOsDateTimeResponse(struct soap*, const char*, int, const _ns1__GetOsDateTimeResponse *, const char*);
SOAP_FMAC3 _ns1__GetOsDateTimeResponse * SOAP_FMAC4 soap_in__ns1__GetOsDateTimeResponse(struct soap*, const char*, _ns1__GetOsDateTimeResponse *, const char*);
SOAP_FMAC1 _ns1__GetOsDateTimeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetOsDateTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetOsDateTimeResponse * soap_new__ns1__GetOsDateTimeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetOsDateTimeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetOsDateTimeResponse * soap_new_req__ns1__GetOsDateTimeResponse(
	struct soap *soap)
{
	_ns1__GetOsDateTimeResponse *_p = ::soap_new__ns1__GetOsDateTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetOsDateTimeResponse * soap_new_set__ns1__GetOsDateTimeResponse(
	struct soap *soap,
	char *GetOsDateTimeResult)
{
	_ns1__GetOsDateTimeResponse *_p = ::soap_new__ns1__GetOsDateTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetOsDateTimeResponse::GetOsDateTimeResult = GetOsDateTimeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetOsDateTimeResponse(struct soap *soap, _ns1__GetOsDateTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOsDateTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetOsDateTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetOsDateTimeResponse(struct soap *soap, const char *URL, _ns1__GetOsDateTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOsDateTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetOsDateTimeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetOsDateTimeResponse(struct soap *soap, const char *URL, _ns1__GetOsDateTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOsDateTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetOsDateTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetOsDateTimeResponse * SOAP_FMAC4 soap_get__ns1__GetOsDateTimeResponse(struct soap*, _ns1__GetOsDateTimeResponse *, const char*, const char*);

inline int soap_read__ns1__GetOsDateTimeResponse(struct soap *soap, _ns1__GetOsDateTimeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetOsDateTimeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetOsDateTimeResponse(struct soap *soap, const char *URL, _ns1__GetOsDateTimeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetOsDateTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetOsDateTimeResponse(struct soap *soap, _ns1__GetOsDateTimeResponse *p)
{
	if (::soap_read__ns1__GetOsDateTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetOsDateTime_DEFINED
#define SOAP_TYPE__ns1__GetOsDateTime_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetOsDateTime(struct soap*, const char*, int, const _ns1__GetOsDateTime *, const char*);
SOAP_FMAC3 _ns1__GetOsDateTime * SOAP_FMAC4 soap_in__ns1__GetOsDateTime(struct soap*, const char*, _ns1__GetOsDateTime *, const char*);
SOAP_FMAC1 _ns1__GetOsDateTime * SOAP_FMAC2 soap_instantiate__ns1__GetOsDateTime(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetOsDateTime * soap_new__ns1__GetOsDateTime(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetOsDateTime(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetOsDateTime * soap_new_req__ns1__GetOsDateTime(
	struct soap *soap)
{
	_ns1__GetOsDateTime *_p = ::soap_new__ns1__GetOsDateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetOsDateTime * soap_new_set__ns1__GetOsDateTime(
	struct soap *soap)
{
	_ns1__GetOsDateTime *_p = ::soap_new__ns1__GetOsDateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetOsDateTime(struct soap *soap, _ns1__GetOsDateTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOsDateTime", p->soap_type() == SOAP_TYPE__ns1__GetOsDateTime ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetOsDateTime(struct soap *soap, const char *URL, _ns1__GetOsDateTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOsDateTime", p->soap_type() == SOAP_TYPE__ns1__GetOsDateTime ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetOsDateTime(struct soap *soap, const char *URL, _ns1__GetOsDateTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetOsDateTime", p->soap_type() == SOAP_TYPE__ns1__GetOsDateTime ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetOsDateTime * SOAP_FMAC4 soap_get__ns1__GetOsDateTime(struct soap*, _ns1__GetOsDateTime *, const char*, const char*);

inline int soap_read__ns1__GetOsDateTime(struct soap *soap, _ns1__GetOsDateTime *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetOsDateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetOsDateTime(struct soap *soap, const char *URL, _ns1__GetOsDateTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetOsDateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetOsDateTime(struct soap *soap, _ns1__GetOsDateTime *p)
{
	if (::soap_read__ns1__GetOsDateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__signedUserInfoResponse_DEFINED
#define SOAP_TYPE__ns1__signedUserInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__signedUserInfoResponse(struct soap*, const char*, int, const _ns1__signedUserInfoResponse *, const char*);
SOAP_FMAC3 _ns1__signedUserInfoResponse * SOAP_FMAC4 soap_in__ns1__signedUserInfoResponse(struct soap*, const char*, _ns1__signedUserInfoResponse *, const char*);
SOAP_FMAC1 _ns1__signedUserInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__signedUserInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__signedUserInfoResponse * soap_new__ns1__signedUserInfoResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__signedUserInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__signedUserInfoResponse * soap_new_req__ns1__signedUserInfoResponse(
	struct soap *soap,
	int signedUserInfoResult)
{
	_ns1__signedUserInfoResponse *_p = ::soap_new__ns1__signedUserInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__signedUserInfoResponse::signedUserInfoResult = signedUserInfoResult;
	}
	return _p;
}

inline _ns1__signedUserInfoResponse * soap_new_set__ns1__signedUserInfoResponse(
	struct soap *soap,
	int signedUserInfoResult)
{
	_ns1__signedUserInfoResponse *_p = ::soap_new__ns1__signedUserInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__signedUserInfoResponse::signedUserInfoResult = signedUserInfoResult;
	}
	return _p;
}

inline int soap_write__ns1__signedUserInfoResponse(struct soap *soap, _ns1__signedUserInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:signedUserInfoResponse", p->soap_type() == SOAP_TYPE__ns1__signedUserInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__signedUserInfoResponse(struct soap *soap, const char *URL, _ns1__signedUserInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:signedUserInfoResponse", p->soap_type() == SOAP_TYPE__ns1__signedUserInfoResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__signedUserInfoResponse(struct soap *soap, const char *URL, _ns1__signedUserInfoResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:signedUserInfoResponse", p->soap_type() == SOAP_TYPE__ns1__signedUserInfoResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__signedUserInfoResponse * SOAP_FMAC4 soap_get__ns1__signedUserInfoResponse(struct soap*, _ns1__signedUserInfoResponse *, const char*, const char*);

inline int soap_read__ns1__signedUserInfoResponse(struct soap *soap, _ns1__signedUserInfoResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__signedUserInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__signedUserInfoResponse(struct soap *soap, const char *URL, _ns1__signedUserInfoResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__signedUserInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__signedUserInfoResponse(struct soap *soap, _ns1__signedUserInfoResponse *p)
{
	if (::soap_read__ns1__signedUserInfoResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__signedUserInfo_DEFINED
#define SOAP_TYPE__ns1__signedUserInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__signedUserInfo(struct soap*, const char*, int, const _ns1__signedUserInfo *, const char*);
SOAP_FMAC3 _ns1__signedUserInfo * SOAP_FMAC4 soap_in__ns1__signedUserInfo(struct soap*, const char*, _ns1__signedUserInfo *, const char*);
SOAP_FMAC1 _ns1__signedUserInfo * SOAP_FMAC2 soap_instantiate__ns1__signedUserInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__signedUserInfo * soap_new__ns1__signedUserInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__signedUserInfo(soap, n, NULL, NULL, NULL);
}

inline _ns1__signedUserInfo * soap_new_req__ns1__signedUserInfo(
	struct soap *soap)
{
	_ns1__signedUserInfo *_p = ::soap_new__ns1__signedUserInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__signedUserInfo * soap_new_set__ns1__signedUserInfo(
	struct soap *soap,
	char *personid,
	char *personname,
	char *password,
	char *phonenum,
	char *publishtime,
	char *publishver,
	char *dwname)
{
	_ns1__signedUserInfo *_p = ::soap_new__ns1__signedUserInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__signedUserInfo::personid = personid;
		_p->_ns1__signedUserInfo::personname = personname;
		_p->_ns1__signedUserInfo::password = password;
		_p->_ns1__signedUserInfo::phonenum = phonenum;
		_p->_ns1__signedUserInfo::publishtime = publishtime;
		_p->_ns1__signedUserInfo::publishver = publishver;
		_p->_ns1__signedUserInfo::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__signedUserInfo(struct soap *soap, _ns1__signedUserInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:signedUserInfo", p->soap_type() == SOAP_TYPE__ns1__signedUserInfo ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__signedUserInfo(struct soap *soap, const char *URL, _ns1__signedUserInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:signedUserInfo", p->soap_type() == SOAP_TYPE__ns1__signedUserInfo ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__signedUserInfo(struct soap *soap, const char *URL, _ns1__signedUserInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:signedUserInfo", p->soap_type() == SOAP_TYPE__ns1__signedUserInfo ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__signedUserInfo * SOAP_FMAC4 soap_get__ns1__signedUserInfo(struct soap*, _ns1__signedUserInfo *, const char*, const char*);

inline int soap_read__ns1__signedUserInfo(struct soap *soap, _ns1__signedUserInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__signedUserInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__signedUserInfo(struct soap *soap, const char *URL, _ns1__signedUserInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__signedUserInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__signedUserInfo(struct soap *soap, _ns1__signedUserInfo *p)
{
	if (::soap_read__ns1__signedUserInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetGxdataUpTimeResponse_DEFINED
#define SOAP_TYPE__ns1__GetGxdataUpTimeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGxdataUpTimeResponse(struct soap*, const char*, int, const _ns1__GetGxdataUpTimeResponse *, const char*);
SOAP_FMAC3 _ns1__GetGxdataUpTimeResponse * SOAP_FMAC4 soap_in__ns1__GetGxdataUpTimeResponse(struct soap*, const char*, _ns1__GetGxdataUpTimeResponse *, const char*);
SOAP_FMAC1 _ns1__GetGxdataUpTimeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetGxdataUpTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGxdataUpTimeResponse * soap_new__ns1__GetGxdataUpTimeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetGxdataUpTimeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetGxdataUpTimeResponse * soap_new_req__ns1__GetGxdataUpTimeResponse(
	struct soap *soap)
{
	_ns1__GetGxdataUpTimeResponse *_p = ::soap_new__ns1__GetGxdataUpTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetGxdataUpTimeResponse * soap_new_set__ns1__GetGxdataUpTimeResponse(
	struct soap *soap,
	char *GetGxdataUpTimeResult)
{
	_ns1__GetGxdataUpTimeResponse *_p = ::soap_new__ns1__GetGxdataUpTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetGxdataUpTimeResponse::GetGxdataUpTimeResult = GetGxdataUpTimeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetGxdataUpTimeResponse(struct soap *soap, _ns1__GetGxdataUpTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxdataUpTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetGxdataUpTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetGxdataUpTimeResponse(struct soap *soap, const char *URL, _ns1__GetGxdataUpTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxdataUpTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetGxdataUpTimeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetGxdataUpTimeResponse(struct soap *soap, const char *URL, _ns1__GetGxdataUpTimeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxdataUpTimeResponse", p->soap_type() == SOAP_TYPE__ns1__GetGxdataUpTimeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetGxdataUpTimeResponse * SOAP_FMAC4 soap_get__ns1__GetGxdataUpTimeResponse(struct soap*, _ns1__GetGxdataUpTimeResponse *, const char*, const char*);

inline int soap_read__ns1__GetGxdataUpTimeResponse(struct soap *soap, _ns1__GetGxdataUpTimeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetGxdataUpTimeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetGxdataUpTimeResponse(struct soap *soap, const char *URL, _ns1__GetGxdataUpTimeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetGxdataUpTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetGxdataUpTimeResponse(struct soap *soap, _ns1__GetGxdataUpTimeResponse *p)
{
	if (::soap_read__ns1__GetGxdataUpTimeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetGxdataUpTime_DEFINED
#define SOAP_TYPE__ns1__GetGxdataUpTime_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGxdataUpTime(struct soap*, const char*, int, const _ns1__GetGxdataUpTime *, const char*);
SOAP_FMAC3 _ns1__GetGxdataUpTime * SOAP_FMAC4 soap_in__ns1__GetGxdataUpTime(struct soap*, const char*, _ns1__GetGxdataUpTime *, const char*);
SOAP_FMAC1 _ns1__GetGxdataUpTime * SOAP_FMAC2 soap_instantiate__ns1__GetGxdataUpTime(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGxdataUpTime * soap_new__ns1__GetGxdataUpTime(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetGxdataUpTime(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetGxdataUpTime * soap_new_req__ns1__GetGxdataUpTime(
	struct soap *soap)
{
	_ns1__GetGxdataUpTime *_p = ::soap_new__ns1__GetGxdataUpTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetGxdataUpTime * soap_new_set__ns1__GetGxdataUpTime(
	struct soap *soap,
	char *unitname,
	char *unitlevel)
{
	_ns1__GetGxdataUpTime *_p = ::soap_new__ns1__GetGxdataUpTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetGxdataUpTime::unitname = unitname;
		_p->_ns1__GetGxdataUpTime::unitlevel = unitlevel;
	}
	return _p;
}

inline int soap_write__ns1__GetGxdataUpTime(struct soap *soap, _ns1__GetGxdataUpTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxdataUpTime", p->soap_type() == SOAP_TYPE__ns1__GetGxdataUpTime ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetGxdataUpTime(struct soap *soap, const char *URL, _ns1__GetGxdataUpTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxdataUpTime", p->soap_type() == SOAP_TYPE__ns1__GetGxdataUpTime ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetGxdataUpTime(struct soap *soap, const char *URL, _ns1__GetGxdataUpTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetGxdataUpTime", p->soap_type() == SOAP_TYPE__ns1__GetGxdataUpTime ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetGxdataUpTime * SOAP_FMAC4 soap_get__ns1__GetGxdataUpTime(struct soap*, _ns1__GetGxdataUpTime *, const char*, const char*);

inline int soap_read__ns1__GetGxdataUpTime(struct soap *soap, _ns1__GetGxdataUpTime *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetGxdataUpTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetGxdataUpTime(struct soap *soap, const char *URL, _ns1__GetGxdataUpTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetGxdataUpTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetGxdataUpTime(struct soap *soap, _ns1__GetGxdataUpTime *p)
{
	if (::soap_read__ns1__GetGxdataUpTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownAllPicResponse_DEFINED
#define SOAP_TYPE__ns1__DownAllPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownAllPicResponse(struct soap*, const char*, int, const _ns1__DownAllPicResponse *, const char*);
SOAP_FMAC3 _ns1__DownAllPicResponse * SOAP_FMAC4 soap_in__ns1__DownAllPicResponse(struct soap*, const char*, _ns1__DownAllPicResponse *, const char*);
SOAP_FMAC1 _ns1__DownAllPicResponse * SOAP_FMAC2 soap_instantiate__ns1__DownAllPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownAllPicResponse * soap_new__ns1__DownAllPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownAllPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownAllPicResponse * soap_new_req__ns1__DownAllPicResponse(
	struct soap *soap,
	int DownAllPicResult)
{
	_ns1__DownAllPicResponse *_p = ::soap_new__ns1__DownAllPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownAllPicResponse::DownAllPicResult = DownAllPicResult;
	}
	return _p;
}

inline _ns1__DownAllPicResponse * soap_new_set__ns1__DownAllPicResponse(
	struct soap *soap,
	int DownAllPicResult)
{
	_ns1__DownAllPicResponse *_p = ::soap_new__ns1__DownAllPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownAllPicResponse::DownAllPicResult = DownAllPicResult;
	}
	return _p;
}

inline int soap_write__ns1__DownAllPicResponse(struct soap *soap, _ns1__DownAllPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownAllPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownAllPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownAllPicResponse(struct soap *soap, const char *URL, _ns1__DownAllPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownAllPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownAllPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownAllPicResponse(struct soap *soap, const char *URL, _ns1__DownAllPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownAllPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownAllPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownAllPicResponse * SOAP_FMAC4 soap_get__ns1__DownAllPicResponse(struct soap*, _ns1__DownAllPicResponse *, const char*, const char*);

inline int soap_read__ns1__DownAllPicResponse(struct soap *soap, _ns1__DownAllPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownAllPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownAllPicResponse(struct soap *soap, const char *URL, _ns1__DownAllPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownAllPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownAllPicResponse(struct soap *soap, _ns1__DownAllPicResponse *p)
{
	if (::soap_read__ns1__DownAllPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownAllPic_DEFINED
#define SOAP_TYPE__ns1__DownAllPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownAllPic(struct soap*, const char*, int, const _ns1__DownAllPic *, const char*);
SOAP_FMAC3 _ns1__DownAllPic * SOAP_FMAC4 soap_in__ns1__DownAllPic(struct soap*, const char*, _ns1__DownAllPic *, const char*);
SOAP_FMAC1 _ns1__DownAllPic * SOAP_FMAC2 soap_instantiate__ns1__DownAllPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownAllPic * soap_new__ns1__DownAllPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownAllPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownAllPic * soap_new_req__ns1__DownAllPic(
	struct soap *soap)
{
	_ns1__DownAllPic *_p = ::soap_new__ns1__DownAllPic(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownAllPic * soap_new_set__ns1__DownAllPic(
	struct soap *soap,
	char *dwname)
{
	_ns1__DownAllPic *_p = ::soap_new__ns1__DownAllPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownAllPic::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__DownAllPic(struct soap *soap, _ns1__DownAllPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownAllPic", p->soap_type() == SOAP_TYPE__ns1__DownAllPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownAllPic(struct soap *soap, const char *URL, _ns1__DownAllPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownAllPic", p->soap_type() == SOAP_TYPE__ns1__DownAllPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownAllPic(struct soap *soap, const char *URL, _ns1__DownAllPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownAllPic", p->soap_type() == SOAP_TYPE__ns1__DownAllPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownAllPic * SOAP_FMAC4 soap_get__ns1__DownAllPic(struct soap*, _ns1__DownAllPic *, const char*, const char*);

inline int soap_read__ns1__DownAllPic(struct soap *soap, _ns1__DownAllPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownAllPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownAllPic(struct soap *soap, const char *URL, _ns1__DownAllPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownAllPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownAllPic(struct soap *soap, _ns1__DownAllPic *p)
{
	if (::soap_read__ns1__DownAllPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownPicResponse_DEFINED
#define SOAP_TYPE__ns1__DownPicResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownPicResponse(struct soap*, const char*, int, const _ns1__DownPicResponse *, const char*);
SOAP_FMAC3 _ns1__DownPicResponse * SOAP_FMAC4 soap_in__ns1__DownPicResponse(struct soap*, const char*, _ns1__DownPicResponse *, const char*);
SOAP_FMAC1 _ns1__DownPicResponse * SOAP_FMAC2 soap_instantiate__ns1__DownPicResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownPicResponse * soap_new__ns1__DownPicResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownPicResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownPicResponse * soap_new_req__ns1__DownPicResponse(
	struct soap *soap)
{
	_ns1__DownPicResponse *_p = ::soap_new__ns1__DownPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownPicResponse * soap_new_set__ns1__DownPicResponse(
	struct soap *soap,
	char *DownPicResult)
{
	_ns1__DownPicResponse *_p = ::soap_new__ns1__DownPicResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownPicResponse::DownPicResult = DownPicResult;
	}
	return _p;
}

inline int soap_write__ns1__DownPicResponse(struct soap *soap, _ns1__DownPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownPicResponse(struct soap *soap, const char *URL, _ns1__DownPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownPicResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownPicResponse(struct soap *soap, const char *URL, _ns1__DownPicResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownPicResponse", p->soap_type() == SOAP_TYPE__ns1__DownPicResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownPicResponse * SOAP_FMAC4 soap_get__ns1__DownPicResponse(struct soap*, _ns1__DownPicResponse *, const char*, const char*);

inline int soap_read__ns1__DownPicResponse(struct soap *soap, _ns1__DownPicResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownPicResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownPicResponse(struct soap *soap, const char *URL, _ns1__DownPicResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownPicResponse(struct soap *soap, _ns1__DownPicResponse *p)
{
	if (::soap_read__ns1__DownPicResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__DownPic_DEFINED
#define SOAP_TYPE__ns1__DownPic_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownPic(struct soap*, const char*, int, const _ns1__DownPic *, const char*);
SOAP_FMAC3 _ns1__DownPic * SOAP_FMAC4 soap_in__ns1__DownPic(struct soap*, const char*, _ns1__DownPic *, const char*);
SOAP_FMAC1 _ns1__DownPic * SOAP_FMAC2 soap_instantiate__ns1__DownPic(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownPic * soap_new__ns1__DownPic(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__DownPic(soap, n, NULL, NULL, NULL);
}

inline _ns1__DownPic * soap_new_req__ns1__DownPic(
	struct soap *soap)
{
	_ns1__DownPic *_p = ::soap_new__ns1__DownPic(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__DownPic * soap_new_set__ns1__DownPic(
	struct soap *soap,
	char *guid,
	char *dwname)
{
	_ns1__DownPic *_p = ::soap_new__ns1__DownPic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__DownPic::guid = guid;
		_p->_ns1__DownPic::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__DownPic(struct soap *soap, _ns1__DownPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownPic", p->soap_type() == SOAP_TYPE__ns1__DownPic ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__DownPic(struct soap *soap, const char *URL, _ns1__DownPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownPic", p->soap_type() == SOAP_TYPE__ns1__DownPic ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__DownPic(struct soap *soap, const char *URL, _ns1__DownPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:DownPic", p->soap_type() == SOAP_TYPE__ns1__DownPic ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__DownPic * SOAP_FMAC4 soap_get__ns1__DownPic(struct soap*, _ns1__DownPic *, const char*, const char*);

inline int soap_read__ns1__DownPic(struct soap *soap, _ns1__DownPic *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__DownPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__DownPic(struct soap *soap, const char *URL, _ns1__DownPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__DownPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__DownPic(struct soap *soap, _ns1__DownPic *p)
{
	if (::soap_read__ns1__DownPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SaveFileDataResponse_DEFINED
#define SOAP_TYPE__ns1__SaveFileDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveFileDataResponse(struct soap*, const char*, int, const _ns1__SaveFileDataResponse *, const char*);
SOAP_FMAC3 _ns1__SaveFileDataResponse * SOAP_FMAC4 soap_in__ns1__SaveFileDataResponse(struct soap*, const char*, _ns1__SaveFileDataResponse *, const char*);
SOAP_FMAC1 _ns1__SaveFileDataResponse * SOAP_FMAC2 soap_instantiate__ns1__SaveFileDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveFileDataResponse * soap_new__ns1__SaveFileDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SaveFileDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__SaveFileDataResponse * soap_new_req__ns1__SaveFileDataResponse(
	struct soap *soap)
{
	_ns1__SaveFileDataResponse *_p = ::soap_new__ns1__SaveFileDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SaveFileDataResponse * soap_new_set__ns1__SaveFileDataResponse(
	struct soap *soap,
	char *SaveFileDataResult)
{
	_ns1__SaveFileDataResponse *_p = ::soap_new__ns1__SaveFileDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SaveFileDataResponse::SaveFileDataResult = SaveFileDataResult;
	}
	return _p;
}

inline int soap_write__ns1__SaveFileDataResponse(struct soap *soap, _ns1__SaveFileDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveFileDataResponse", p->soap_type() == SOAP_TYPE__ns1__SaveFileDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SaveFileDataResponse(struct soap *soap, const char *URL, _ns1__SaveFileDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveFileDataResponse", p->soap_type() == SOAP_TYPE__ns1__SaveFileDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SaveFileDataResponse(struct soap *soap, const char *URL, _ns1__SaveFileDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveFileDataResponse", p->soap_type() == SOAP_TYPE__ns1__SaveFileDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SaveFileDataResponse * SOAP_FMAC4 soap_get__ns1__SaveFileDataResponse(struct soap*, _ns1__SaveFileDataResponse *, const char*, const char*);

inline int soap_read__ns1__SaveFileDataResponse(struct soap *soap, _ns1__SaveFileDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SaveFileDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SaveFileDataResponse(struct soap *soap, const char *URL, _ns1__SaveFileDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SaveFileDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SaveFileDataResponse(struct soap *soap, _ns1__SaveFileDataResponse *p)
{
	if (::soap_read__ns1__SaveFileDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SaveFileData_DEFINED
#define SOAP_TYPE__ns1__SaveFileData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveFileData(struct soap*, const char*, int, const _ns1__SaveFileData *, const char*);
SOAP_FMAC3 _ns1__SaveFileData * SOAP_FMAC4 soap_in__ns1__SaveFileData(struct soap*, const char*, _ns1__SaveFileData *, const char*);
SOAP_FMAC1 _ns1__SaveFileData * SOAP_FMAC2 soap_instantiate__ns1__SaveFileData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveFileData * soap_new__ns1__SaveFileData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SaveFileData(soap, n, NULL, NULL, NULL);
}

inline _ns1__SaveFileData * soap_new_req__ns1__SaveFileData(
	struct soap *soap)
{
	_ns1__SaveFileData *_p = ::soap_new__ns1__SaveFileData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SaveFileData * soap_new_set__ns1__SaveFileData(
	struct soap *soap,
	char *xml,
	char *filename,
	char *pics,
	char *dwname)
{
	_ns1__SaveFileData *_p = ::soap_new__ns1__SaveFileData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SaveFileData::xml = xml;
		_p->_ns1__SaveFileData::filename = filename;
		_p->_ns1__SaveFileData::pics = pics;
		_p->_ns1__SaveFileData::dwname = dwname;
	}
	return _p;
}

inline int soap_write__ns1__SaveFileData(struct soap *soap, _ns1__SaveFileData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveFileData", p->soap_type() == SOAP_TYPE__ns1__SaveFileData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SaveFileData(struct soap *soap, const char *URL, _ns1__SaveFileData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveFileData", p->soap_type() == SOAP_TYPE__ns1__SaveFileData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SaveFileData(struct soap *soap, const char *URL, _ns1__SaveFileData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveFileData", p->soap_type() == SOAP_TYPE__ns1__SaveFileData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SaveFileData * SOAP_FMAC4 soap_get__ns1__SaveFileData(struct soap*, _ns1__SaveFileData *, const char*, const char*);

inline int soap_read__ns1__SaveFileData(struct soap *soap, _ns1__SaveFileData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SaveFileData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SaveFileData(struct soap *soap, const char *URL, _ns1__SaveFileData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SaveFileData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SaveFileData(struct soap *soap, _ns1__SaveFileData *p)
{
	if (::soap_read__ns1__SaveFileData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SaveDataResponse_DEFINED
#define SOAP_TYPE__ns1__SaveDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveDataResponse(struct soap*, const char*, int, const _ns1__SaveDataResponse *, const char*);
SOAP_FMAC3 _ns1__SaveDataResponse * SOAP_FMAC4 soap_in__ns1__SaveDataResponse(struct soap*, const char*, _ns1__SaveDataResponse *, const char*);
SOAP_FMAC1 _ns1__SaveDataResponse * SOAP_FMAC2 soap_instantiate__ns1__SaveDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveDataResponse * soap_new__ns1__SaveDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SaveDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__SaveDataResponse * soap_new_req__ns1__SaveDataResponse(
	struct soap *soap)
{
	_ns1__SaveDataResponse *_p = ::soap_new__ns1__SaveDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SaveDataResponse * soap_new_set__ns1__SaveDataResponse(
	struct soap *soap,
	char *SaveDataResult)
{
	_ns1__SaveDataResponse *_p = ::soap_new__ns1__SaveDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SaveDataResponse::SaveDataResult = SaveDataResult;
	}
	return _p;
}

inline int soap_write__ns1__SaveDataResponse(struct soap *soap, _ns1__SaveDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveDataResponse", p->soap_type() == SOAP_TYPE__ns1__SaveDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SaveDataResponse(struct soap *soap, const char *URL, _ns1__SaveDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveDataResponse", p->soap_type() == SOAP_TYPE__ns1__SaveDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SaveDataResponse(struct soap *soap, const char *URL, _ns1__SaveDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveDataResponse", p->soap_type() == SOAP_TYPE__ns1__SaveDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SaveDataResponse * SOAP_FMAC4 soap_get__ns1__SaveDataResponse(struct soap*, _ns1__SaveDataResponse *, const char*, const char*);

inline int soap_read__ns1__SaveDataResponse(struct soap *soap, _ns1__SaveDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SaveDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SaveDataResponse(struct soap *soap, const char *URL, _ns1__SaveDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SaveDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SaveDataResponse(struct soap *soap, _ns1__SaveDataResponse *p)
{
	if (::soap_read__ns1__SaveDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__SaveData_DEFINED
#define SOAP_TYPE__ns1__SaveData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveData(struct soap*, const char*, int, const _ns1__SaveData *, const char*);
SOAP_FMAC3 _ns1__SaveData * SOAP_FMAC4 soap_in__ns1__SaveData(struct soap*, const char*, _ns1__SaveData *, const char*);
SOAP_FMAC1 _ns1__SaveData * SOAP_FMAC2 soap_instantiate__ns1__SaveData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveData * soap_new__ns1__SaveData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__SaveData(soap, n, NULL, NULL, NULL);
}

inline _ns1__SaveData * soap_new_req__ns1__SaveData(
	struct soap *soap)
{
	_ns1__SaveData *_p = ::soap_new__ns1__SaveData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__SaveData * soap_new_set__ns1__SaveData(
	struct soap *soap,
	char *xml)
{
	_ns1__SaveData *_p = ::soap_new__ns1__SaveData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__SaveData::xml = xml;
	}
	return _p;
}

inline int soap_write__ns1__SaveData(struct soap *soap, _ns1__SaveData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveData", p->soap_type() == SOAP_TYPE__ns1__SaveData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__SaveData(struct soap *soap, const char *URL, _ns1__SaveData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveData", p->soap_type() == SOAP_TYPE__ns1__SaveData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__SaveData(struct soap *soap, const char *URL, _ns1__SaveData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:SaveData", p->soap_type() == SOAP_TYPE__ns1__SaveData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__SaveData * SOAP_FMAC4 soap_get__ns1__SaveData(struct soap*, _ns1__SaveData *, const char*, const char*);

inline int soap_read__ns1__SaveData(struct soap *soap, _ns1__SaveData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__SaveData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__SaveData(struct soap *soap, const char *URL, _ns1__SaveData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__SaveData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__SaveData(struct soap *soap, _ns1__SaveData *p)
{
	if (::soap_read__ns1__SaveData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ExecuteSqlResponse_DEFINED
#define SOAP_TYPE__ns1__ExecuteSqlResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteSqlResponse(struct soap*, const char*, int, const _ns1__ExecuteSqlResponse *, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlResponse * SOAP_FMAC4 soap_in__ns1__ExecuteSqlResponse(struct soap*, const char*, _ns1__ExecuteSqlResponse *, const char*);
SOAP_FMAC1 _ns1__ExecuteSqlResponse * SOAP_FMAC2 soap_instantiate__ns1__ExecuteSqlResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExecuteSqlResponse * soap_new__ns1__ExecuteSqlResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ExecuteSqlResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__ExecuteSqlResponse * soap_new_req__ns1__ExecuteSqlResponse(
	struct soap *soap,
	int ExecuteSqlResult)
{
	_ns1__ExecuteSqlResponse *_p = ::soap_new__ns1__ExecuteSqlResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlResponse::ExecuteSqlResult = ExecuteSqlResult;
	}
	return _p;
}

inline _ns1__ExecuteSqlResponse * soap_new_set__ns1__ExecuteSqlResponse(
	struct soap *soap,
	int ExecuteSqlResult)
{
	_ns1__ExecuteSqlResponse *_p = ::soap_new__ns1__ExecuteSqlResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSqlResponse::ExecuteSqlResult = ExecuteSqlResult;
	}
	return _p;
}

inline int soap_write__ns1__ExecuteSqlResponse(struct soap *soap, _ns1__ExecuteSqlResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ExecuteSqlResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ExecuteSqlResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSqlResponse", p->soap_type() == SOAP_TYPE__ns1__ExecuteSqlResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ExecuteSqlResponse * SOAP_FMAC4 soap_get__ns1__ExecuteSqlResponse(struct soap*, _ns1__ExecuteSqlResponse *, const char*, const char*);

inline int soap_read__ns1__ExecuteSqlResponse(struct soap *soap, _ns1__ExecuteSqlResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ExecuteSqlResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ExecuteSqlResponse(struct soap *soap, const char *URL, _ns1__ExecuteSqlResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ExecuteSqlResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ExecuteSqlResponse(struct soap *soap, _ns1__ExecuteSqlResponse *p)
{
	if (::soap_read__ns1__ExecuteSqlResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__ExecuteSql_DEFINED
#define SOAP_TYPE__ns1__ExecuteSql_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteSql(struct soap*, const char*, int, const _ns1__ExecuteSql *, const char*);
SOAP_FMAC3 _ns1__ExecuteSql * SOAP_FMAC4 soap_in__ns1__ExecuteSql(struct soap*, const char*, _ns1__ExecuteSql *, const char*);
SOAP_FMAC1 _ns1__ExecuteSql * SOAP_FMAC2 soap_instantiate__ns1__ExecuteSql(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ExecuteSql * soap_new__ns1__ExecuteSql(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__ExecuteSql(soap, n, NULL, NULL, NULL);
}

inline _ns1__ExecuteSql * soap_new_req__ns1__ExecuteSql(
	struct soap *soap)
{
	_ns1__ExecuteSql *_p = ::soap_new__ns1__ExecuteSql(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__ExecuteSql * soap_new_set__ns1__ExecuteSql(
	struct soap *soap,
	char *sql)
{
	_ns1__ExecuteSql *_p = ::soap_new__ns1__ExecuteSql(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__ExecuteSql::sql = sql;
	}
	return _p;
}

inline int soap_write__ns1__ExecuteSql(struct soap *soap, _ns1__ExecuteSql const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSql", p->soap_type() == SOAP_TYPE__ns1__ExecuteSql ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__ExecuteSql(struct soap *soap, const char *URL, _ns1__ExecuteSql const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSql", p->soap_type() == SOAP_TYPE__ns1__ExecuteSql ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__ExecuteSql(struct soap *soap, const char *URL, _ns1__ExecuteSql const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ExecuteSql", p->soap_type() == SOAP_TYPE__ns1__ExecuteSql ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__ExecuteSql * SOAP_FMAC4 soap_get__ns1__ExecuteSql(struct soap*, _ns1__ExecuteSql *, const char*, const char*);

inline int soap_read__ns1__ExecuteSql(struct soap *soap, _ns1__ExecuteSql *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__ExecuteSql(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__ExecuteSql(struct soap *soap, const char *URL, _ns1__ExecuteSql *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__ExecuteSql(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__ExecuteSql(struct soap *soap, _ns1__ExecuteSql *p)
{
	if (::soap_read__ns1__ExecuteSql(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__QueryDataCountResponse_DEFINED
#define SOAP_TYPE__ns1__QueryDataCountResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryDataCountResponse(struct soap*, const char*, int, const _ns1__QueryDataCountResponse *, const char*);
SOAP_FMAC3 _ns1__QueryDataCountResponse * SOAP_FMAC4 soap_in__ns1__QueryDataCountResponse(struct soap*, const char*, _ns1__QueryDataCountResponse *, const char*);
SOAP_FMAC1 _ns1__QueryDataCountResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryDataCountResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryDataCountResponse * soap_new__ns1__QueryDataCountResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__QueryDataCountResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__QueryDataCountResponse * soap_new_req__ns1__QueryDataCountResponse(
	struct soap *soap,
	int QueryDataCountResult)
{
	_ns1__QueryDataCountResponse *_p = ::soap_new__ns1__QueryDataCountResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__QueryDataCountResponse::QueryDataCountResult = QueryDataCountResult;
	}
	return _p;
}

inline _ns1__QueryDataCountResponse * soap_new_set__ns1__QueryDataCountResponse(
	struct soap *soap,
	int QueryDataCountResult)
{
	_ns1__QueryDataCountResponse *_p = ::soap_new__ns1__QueryDataCountResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__QueryDataCountResponse::QueryDataCountResult = QueryDataCountResult;
	}
	return _p;
}

inline int soap_write__ns1__QueryDataCountResponse(struct soap *soap, _ns1__QueryDataCountResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataCountResponse", p->soap_type() == SOAP_TYPE__ns1__QueryDataCountResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__QueryDataCountResponse(struct soap *soap, const char *URL, _ns1__QueryDataCountResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataCountResponse", p->soap_type() == SOAP_TYPE__ns1__QueryDataCountResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__QueryDataCountResponse(struct soap *soap, const char *URL, _ns1__QueryDataCountResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataCountResponse", p->soap_type() == SOAP_TYPE__ns1__QueryDataCountResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__QueryDataCountResponse * SOAP_FMAC4 soap_get__ns1__QueryDataCountResponse(struct soap*, _ns1__QueryDataCountResponse *, const char*, const char*);

inline int soap_read__ns1__QueryDataCountResponse(struct soap *soap, _ns1__QueryDataCountResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__QueryDataCountResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__QueryDataCountResponse(struct soap *soap, const char *URL, _ns1__QueryDataCountResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__QueryDataCountResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__QueryDataCountResponse(struct soap *soap, _ns1__QueryDataCountResponse *p)
{
	if (::soap_read__ns1__QueryDataCountResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__QueryDataCount_DEFINED
#define SOAP_TYPE__ns1__QueryDataCount_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryDataCount(struct soap*, const char*, int, const _ns1__QueryDataCount *, const char*);
SOAP_FMAC3 _ns1__QueryDataCount * SOAP_FMAC4 soap_in__ns1__QueryDataCount(struct soap*, const char*, _ns1__QueryDataCount *, const char*);
SOAP_FMAC1 _ns1__QueryDataCount * SOAP_FMAC2 soap_instantiate__ns1__QueryDataCount(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryDataCount * soap_new__ns1__QueryDataCount(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__QueryDataCount(soap, n, NULL, NULL, NULL);
}

inline _ns1__QueryDataCount * soap_new_req__ns1__QueryDataCount(
	struct soap *soap)
{
	_ns1__QueryDataCount *_p = ::soap_new__ns1__QueryDataCount(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__QueryDataCount * soap_new_set__ns1__QueryDataCount(
	struct soap *soap,
	char *sql)
{
	_ns1__QueryDataCount *_p = ::soap_new__ns1__QueryDataCount(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__QueryDataCount::sql = sql;
	}
	return _p;
}

inline int soap_write__ns1__QueryDataCount(struct soap *soap, _ns1__QueryDataCount const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataCount", p->soap_type() == SOAP_TYPE__ns1__QueryDataCount ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__QueryDataCount(struct soap *soap, const char *URL, _ns1__QueryDataCount const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataCount", p->soap_type() == SOAP_TYPE__ns1__QueryDataCount ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__QueryDataCount(struct soap *soap, const char *URL, _ns1__QueryDataCount const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataCount", p->soap_type() == SOAP_TYPE__ns1__QueryDataCount ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__QueryDataCount * SOAP_FMAC4 soap_get__ns1__QueryDataCount(struct soap*, _ns1__QueryDataCount *, const char*, const char*);

inline int soap_read__ns1__QueryDataCount(struct soap *soap, _ns1__QueryDataCount *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__QueryDataCount(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__QueryDataCount(struct soap *soap, const char *URL, _ns1__QueryDataCount *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__QueryDataCount(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__QueryDataCount(struct soap *soap, _ns1__QueryDataCount *p)
{
	if (::soap_read__ns1__QueryDataCount(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__QueryDataResponse_DEFINED
#define SOAP_TYPE__ns1__QueryDataResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryDataResponse(struct soap*, const char*, int, const _ns1__QueryDataResponse *, const char*);
SOAP_FMAC3 _ns1__QueryDataResponse * SOAP_FMAC4 soap_in__ns1__QueryDataResponse(struct soap*, const char*, _ns1__QueryDataResponse *, const char*);
SOAP_FMAC1 _ns1__QueryDataResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryDataResponse * soap_new__ns1__QueryDataResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__QueryDataResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__QueryDataResponse * soap_new_req__ns1__QueryDataResponse(
	struct soap *soap)
{
	_ns1__QueryDataResponse *_p = ::soap_new__ns1__QueryDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__QueryDataResponse * soap_new_set__ns1__QueryDataResponse(
	struct soap *soap,
	char *QueryDataResult)
{
	_ns1__QueryDataResponse *_p = ::soap_new__ns1__QueryDataResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__QueryDataResponse::QueryDataResult = QueryDataResult;
	}
	return _p;
}

inline int soap_write__ns1__QueryDataResponse(struct soap *soap, _ns1__QueryDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataResponse", p->soap_type() == SOAP_TYPE__ns1__QueryDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__QueryDataResponse(struct soap *soap, const char *URL, _ns1__QueryDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataResponse", p->soap_type() == SOAP_TYPE__ns1__QueryDataResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__QueryDataResponse(struct soap *soap, const char *URL, _ns1__QueryDataResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryDataResponse", p->soap_type() == SOAP_TYPE__ns1__QueryDataResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__QueryDataResponse * SOAP_FMAC4 soap_get__ns1__QueryDataResponse(struct soap*, _ns1__QueryDataResponse *, const char*, const char*);

inline int soap_read__ns1__QueryDataResponse(struct soap *soap, _ns1__QueryDataResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__QueryDataResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__QueryDataResponse(struct soap *soap, const char *URL, _ns1__QueryDataResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__QueryDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__QueryDataResponse(struct soap *soap, _ns1__QueryDataResponse *p)
{
	if (::soap_read__ns1__QueryDataResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__QueryData_DEFINED
#define SOAP_TYPE__ns1__QueryData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryData(struct soap*, const char*, int, const _ns1__QueryData *, const char*);
SOAP_FMAC3 _ns1__QueryData * SOAP_FMAC4 soap_in__ns1__QueryData(struct soap*, const char*, _ns1__QueryData *, const char*);
SOAP_FMAC1 _ns1__QueryData * SOAP_FMAC2 soap_instantiate__ns1__QueryData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryData * soap_new__ns1__QueryData(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__QueryData(soap, n, NULL, NULL, NULL);
}

inline _ns1__QueryData * soap_new_req__ns1__QueryData(
	struct soap *soap)
{
	_ns1__QueryData *_p = ::soap_new__ns1__QueryData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__QueryData * soap_new_set__ns1__QueryData(
	struct soap *soap,
	char *sql)
{
	_ns1__QueryData *_p = ::soap_new__ns1__QueryData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__QueryData::sql = sql;
	}
	return _p;
}

inline int soap_write__ns1__QueryData(struct soap *soap, _ns1__QueryData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryData", p->soap_type() == SOAP_TYPE__ns1__QueryData ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__QueryData(struct soap *soap, const char *URL, _ns1__QueryData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryData", p->soap_type() == SOAP_TYPE__ns1__QueryData ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__QueryData(struct soap *soap, const char *URL, _ns1__QueryData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:QueryData", p->soap_type() == SOAP_TYPE__ns1__QueryData ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__QueryData * SOAP_FMAC4 soap_get__ns1__QueryData(struct soap*, _ns1__QueryData *, const char*, const char*);

inline int soap_read__ns1__QueryData(struct soap *soap, _ns1__QueryData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__QueryData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__QueryData(struct soap *soap, const char *URL, _ns1__QueryData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__QueryData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__QueryData(struct soap *soap, _ns1__QueryData *p)
{
	if (::soap_read__ns1__QueryData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDBStringResponse_DEFINED
#define SOAP_TYPE__ns1__GetDBStringResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDBStringResponse(struct soap*, const char*, int, const _ns1__GetDBStringResponse *, const char*);
SOAP_FMAC3 _ns1__GetDBStringResponse * SOAP_FMAC4 soap_in__ns1__GetDBStringResponse(struct soap*, const char*, _ns1__GetDBStringResponse *, const char*);
SOAP_FMAC1 _ns1__GetDBStringResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDBStringResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDBStringResponse * soap_new__ns1__GetDBStringResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDBStringResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDBStringResponse * soap_new_req__ns1__GetDBStringResponse(
	struct soap *soap)
{
	_ns1__GetDBStringResponse *_p = ::soap_new__ns1__GetDBStringResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDBStringResponse * soap_new_set__ns1__GetDBStringResponse(
	struct soap *soap,
	char *GetDBStringResult)
{
	_ns1__GetDBStringResponse *_p = ::soap_new__ns1__GetDBStringResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDBStringResponse::GetDBStringResult = GetDBStringResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDBStringResponse(struct soap *soap, _ns1__GetDBStringResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDBStringResponse", p->soap_type() == SOAP_TYPE__ns1__GetDBStringResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDBStringResponse(struct soap *soap, const char *URL, _ns1__GetDBStringResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDBStringResponse", p->soap_type() == SOAP_TYPE__ns1__GetDBStringResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDBStringResponse(struct soap *soap, const char *URL, _ns1__GetDBStringResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDBStringResponse", p->soap_type() == SOAP_TYPE__ns1__GetDBStringResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDBStringResponse * SOAP_FMAC4 soap_get__ns1__GetDBStringResponse(struct soap*, _ns1__GetDBStringResponse *, const char*, const char*);

inline int soap_read__ns1__GetDBStringResponse(struct soap *soap, _ns1__GetDBStringResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDBStringResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDBStringResponse(struct soap *soap, const char *URL, _ns1__GetDBStringResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDBStringResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDBStringResponse(struct soap *soap, _ns1__GetDBStringResponse *p)
{
	if (::soap_read__ns1__GetDBStringResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDBString_DEFINED
#define SOAP_TYPE__ns1__GetDBString_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDBString(struct soap*, const char*, int, const _ns1__GetDBString *, const char*);
SOAP_FMAC3 _ns1__GetDBString * SOAP_FMAC4 soap_in__ns1__GetDBString(struct soap*, const char*, _ns1__GetDBString *, const char*);
SOAP_FMAC1 _ns1__GetDBString * SOAP_FMAC2 soap_instantiate__ns1__GetDBString(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDBString * soap_new__ns1__GetDBString(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDBString(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDBString * soap_new_req__ns1__GetDBString(
	struct soap *soap)
{
	_ns1__GetDBString *_p = ::soap_new__ns1__GetDBString(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDBString * soap_new_set__ns1__GetDBString(
	struct soap *soap)
{
	_ns1__GetDBString *_p = ::soap_new__ns1__GetDBString(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetDBString(struct soap *soap, _ns1__GetDBString const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDBString", p->soap_type() == SOAP_TYPE__ns1__GetDBString ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDBString(struct soap *soap, const char *URL, _ns1__GetDBString const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDBString", p->soap_type() == SOAP_TYPE__ns1__GetDBString ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDBString(struct soap *soap, const char *URL, _ns1__GetDBString const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDBString", p->soap_type() == SOAP_TYPE__ns1__GetDBString ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDBString * SOAP_FMAC4 soap_get__ns1__GetDBString(struct soap*, _ns1__GetDBString *, const char*, const char*);

inline int soap_read__ns1__GetDBString(struct soap *soap, _ns1__GetDBString *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDBString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDBString(struct soap *soap, const char *URL, _ns1__GetDBString *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDBString(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDBString(struct soap *soap, _ns1__GetDBString *p)
{
	if (::soap_read__ns1__GetDBString(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__HelloWorldResponse_DEFINED
#define SOAP_TYPE__ns1__HelloWorldResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__HelloWorldResponse(struct soap*, const char*, int, const _ns1__HelloWorldResponse *, const char*);
SOAP_FMAC3 _ns1__HelloWorldResponse * SOAP_FMAC4 soap_in__ns1__HelloWorldResponse(struct soap*, const char*, _ns1__HelloWorldResponse *, const char*);
SOAP_FMAC1 _ns1__HelloWorldResponse * SOAP_FMAC2 soap_instantiate__ns1__HelloWorldResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__HelloWorldResponse * soap_new__ns1__HelloWorldResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__HelloWorldResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__HelloWorldResponse * soap_new_req__ns1__HelloWorldResponse(
	struct soap *soap)
{
	_ns1__HelloWorldResponse *_p = ::soap_new__ns1__HelloWorldResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__HelloWorldResponse * soap_new_set__ns1__HelloWorldResponse(
	struct soap *soap,
	char *HelloWorldResult)
{
	_ns1__HelloWorldResponse *_p = ::soap_new__ns1__HelloWorldResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__HelloWorldResponse::HelloWorldResult = HelloWorldResult;
	}
	return _p;
}

inline int soap_write__ns1__HelloWorldResponse(struct soap *soap, _ns1__HelloWorldResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:HelloWorldResponse", p->soap_type() == SOAP_TYPE__ns1__HelloWorldResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__HelloWorldResponse(struct soap *soap, const char *URL, _ns1__HelloWorldResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:HelloWorldResponse", p->soap_type() == SOAP_TYPE__ns1__HelloWorldResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__HelloWorldResponse(struct soap *soap, const char *URL, _ns1__HelloWorldResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:HelloWorldResponse", p->soap_type() == SOAP_TYPE__ns1__HelloWorldResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__HelloWorldResponse * SOAP_FMAC4 soap_get__ns1__HelloWorldResponse(struct soap*, _ns1__HelloWorldResponse *, const char*, const char*);

inline int soap_read__ns1__HelloWorldResponse(struct soap *soap, _ns1__HelloWorldResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__HelloWorldResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__HelloWorldResponse(struct soap *soap, const char *URL, _ns1__HelloWorldResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__HelloWorldResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__HelloWorldResponse(struct soap *soap, _ns1__HelloWorldResponse *p)
{
	if (::soap_read__ns1__HelloWorldResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__HelloWorld_DEFINED
#define SOAP_TYPE__ns1__HelloWorld_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__HelloWorld(struct soap*, const char*, int, const _ns1__HelloWorld *, const char*);
SOAP_FMAC3 _ns1__HelloWorld * SOAP_FMAC4 soap_in__ns1__HelloWorld(struct soap*, const char*, _ns1__HelloWorld *, const char*);
SOAP_FMAC1 _ns1__HelloWorld * SOAP_FMAC2 soap_instantiate__ns1__HelloWorld(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__HelloWorld * soap_new__ns1__HelloWorld(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__HelloWorld(soap, n, NULL, NULL, NULL);
}

inline _ns1__HelloWorld * soap_new_req__ns1__HelloWorld(
	struct soap *soap)
{
	_ns1__HelloWorld *_p = ::soap_new__ns1__HelloWorld(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__HelloWorld * soap_new_set__ns1__HelloWorld(
	struct soap *soap,
	char *helloworld)
{
	_ns1__HelloWorld *_p = ::soap_new__ns1__HelloWorld(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__HelloWorld::helloworld = helloworld;
	}
	return _p;
}

inline int soap_write__ns1__HelloWorld(struct soap *soap, _ns1__HelloWorld const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:HelloWorld", p->soap_type() == SOAP_TYPE__ns1__HelloWorld ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__HelloWorld(struct soap *soap, const char *URL, _ns1__HelloWorld const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:HelloWorld", p->soap_type() == SOAP_TYPE__ns1__HelloWorld ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__HelloWorld(struct soap *soap, const char *URL, _ns1__HelloWorld const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:HelloWorld", p->soap_type() == SOAP_TYPE__ns1__HelloWorld ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__HelloWorld * SOAP_FMAC4 soap_get__ns1__HelloWorld(struct soap*, _ns1__HelloWorld *, const char*, const char*);

inline int soap_read__ns1__HelloWorld(struct soap *soap, _ns1__HelloWorld *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__HelloWorld(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__HelloWorld(struct soap *soap, const char *URL, _ns1__HelloWorld *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__HelloWorld(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__HelloWorld(struct soap *soap, _ns1__HelloWorld *p)
{
	if (::soap_read__ns1__HelloWorld(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__CheckDevCodeResponse_DEFINED
#define SOAP_TYPE__ns1__CheckDevCodeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckDevCodeResponse(struct soap*, const char*, int, const _ns1__CheckDevCodeResponse *, const char*);
SOAP_FMAC3 _ns1__CheckDevCodeResponse * SOAP_FMAC4 soap_in__ns1__CheckDevCodeResponse(struct soap*, const char*, _ns1__CheckDevCodeResponse *, const char*);
SOAP_FMAC1 _ns1__CheckDevCodeResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckDevCodeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckDevCodeResponse * soap_new__ns1__CheckDevCodeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CheckDevCodeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__CheckDevCodeResponse * soap_new_req__ns1__CheckDevCodeResponse(
	struct soap *soap,
	int CheckDevCodeResult)
{
	_ns1__CheckDevCodeResponse *_p = ::soap_new__ns1__CheckDevCodeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckDevCodeResponse::CheckDevCodeResult = CheckDevCodeResult;
	}
	return _p;
}

inline _ns1__CheckDevCodeResponse * soap_new_set__ns1__CheckDevCodeResponse(
	struct soap *soap,
	int CheckDevCodeResult)
{
	_ns1__CheckDevCodeResponse *_p = ::soap_new__ns1__CheckDevCodeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckDevCodeResponse::CheckDevCodeResult = CheckDevCodeResult;
	}
	return _p;
}

inline int soap_write__ns1__CheckDevCodeResponse(struct soap *soap, _ns1__CheckDevCodeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckDevCodeResponse", p->soap_type() == SOAP_TYPE__ns1__CheckDevCodeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CheckDevCodeResponse(struct soap *soap, const char *URL, _ns1__CheckDevCodeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckDevCodeResponse", p->soap_type() == SOAP_TYPE__ns1__CheckDevCodeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CheckDevCodeResponse(struct soap *soap, const char *URL, _ns1__CheckDevCodeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckDevCodeResponse", p->soap_type() == SOAP_TYPE__ns1__CheckDevCodeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CheckDevCodeResponse * SOAP_FMAC4 soap_get__ns1__CheckDevCodeResponse(struct soap*, _ns1__CheckDevCodeResponse *, const char*, const char*);

inline int soap_read__ns1__CheckDevCodeResponse(struct soap *soap, _ns1__CheckDevCodeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CheckDevCodeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CheckDevCodeResponse(struct soap *soap, const char *URL, _ns1__CheckDevCodeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CheckDevCodeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__CheckDevCodeResponse(struct soap *soap, _ns1__CheckDevCodeResponse *p)
{
	if (::soap_read__ns1__CheckDevCodeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__CheckDevCode_DEFINED
#define SOAP_TYPE__ns1__CheckDevCode_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckDevCode(struct soap*, const char*, int, const _ns1__CheckDevCode *, const char*);
SOAP_FMAC3 _ns1__CheckDevCode * SOAP_FMAC4 soap_in__ns1__CheckDevCode(struct soap*, const char*, _ns1__CheckDevCode *, const char*);
SOAP_FMAC1 _ns1__CheckDevCode * SOAP_FMAC2 soap_instantiate__ns1__CheckDevCode(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckDevCode * soap_new__ns1__CheckDevCode(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CheckDevCode(soap, n, NULL, NULL, NULL);
}

inline _ns1__CheckDevCode * soap_new_req__ns1__CheckDevCode(
	struct soap *soap)
{
	_ns1__CheckDevCode *_p = ::soap_new__ns1__CheckDevCode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CheckDevCode * soap_new_set__ns1__CheckDevCode(
	struct soap *soap,
	char *xb,
	char *station)
{
	_ns1__CheckDevCode *_p = ::soap_new__ns1__CheckDevCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckDevCode::xb = xb;
		_p->_ns1__CheckDevCode::station = station;
	}
	return _p;
}

inline int soap_write__ns1__CheckDevCode(struct soap *soap, _ns1__CheckDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckDevCode", p->soap_type() == SOAP_TYPE__ns1__CheckDevCode ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CheckDevCode(struct soap *soap, const char *URL, _ns1__CheckDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckDevCode", p->soap_type() == SOAP_TYPE__ns1__CheckDevCode ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CheckDevCode(struct soap *soap, const char *URL, _ns1__CheckDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckDevCode", p->soap_type() == SOAP_TYPE__ns1__CheckDevCode ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CheckDevCode * SOAP_FMAC4 soap_get__ns1__CheckDevCode(struct soap*, _ns1__CheckDevCode *, const char*, const char*);

inline int soap_read__ns1__CheckDevCode(struct soap *soap, _ns1__CheckDevCode *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CheckDevCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CheckDevCode(struct soap *soap, const char *URL, _ns1__CheckDevCode *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CheckDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__CheckDevCode(struct soap *soap, _ns1__CheckDevCode *p)
{
	if (::soap_read__ns1__CheckDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDevCodeResponse_DEFINED
#define SOAP_TYPE__ns1__GetDevCodeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDevCodeResponse(struct soap*, const char*, int, const _ns1__GetDevCodeResponse *, const char*);
SOAP_FMAC3 _ns1__GetDevCodeResponse * SOAP_FMAC4 soap_in__ns1__GetDevCodeResponse(struct soap*, const char*, _ns1__GetDevCodeResponse *, const char*);
SOAP_FMAC1 _ns1__GetDevCodeResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDevCodeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDevCodeResponse * soap_new__ns1__GetDevCodeResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDevCodeResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDevCodeResponse * soap_new_req__ns1__GetDevCodeResponse(
	struct soap *soap)
{
	_ns1__GetDevCodeResponse *_p = ::soap_new__ns1__GetDevCodeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetDevCodeResponse * soap_new_set__ns1__GetDevCodeResponse(
	struct soap *soap,
	char *GetDevCodeResult)
{
	_ns1__GetDevCodeResponse *_p = ::soap_new__ns1__GetDevCodeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDevCodeResponse::GetDevCodeResult = GetDevCodeResult;
	}
	return _p;
}

inline int soap_write__ns1__GetDevCodeResponse(struct soap *soap, _ns1__GetDevCodeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevCodeResponse", p->soap_type() == SOAP_TYPE__ns1__GetDevCodeResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDevCodeResponse(struct soap *soap, const char *URL, _ns1__GetDevCodeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevCodeResponse", p->soap_type() == SOAP_TYPE__ns1__GetDevCodeResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDevCodeResponse(struct soap *soap, const char *URL, _ns1__GetDevCodeResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevCodeResponse", p->soap_type() == SOAP_TYPE__ns1__GetDevCodeResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDevCodeResponse * SOAP_FMAC4 soap_get__ns1__GetDevCodeResponse(struct soap*, _ns1__GetDevCodeResponse *, const char*, const char*);

inline int soap_read__ns1__GetDevCodeResponse(struct soap *soap, _ns1__GetDevCodeResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDevCodeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDevCodeResponse(struct soap *soap, const char *URL, _ns1__GetDevCodeResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDevCodeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDevCodeResponse(struct soap *soap, _ns1__GetDevCodeResponse *p)
{
	if (::soap_read__ns1__GetDevCodeResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetDevCode_DEFINED
#define SOAP_TYPE__ns1__GetDevCode_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDevCode(struct soap*, const char*, int, const _ns1__GetDevCode *, const char*);
SOAP_FMAC3 _ns1__GetDevCode * SOAP_FMAC4 soap_in__ns1__GetDevCode(struct soap*, const char*, _ns1__GetDevCode *, const char*);
SOAP_FMAC1 _ns1__GetDevCode * SOAP_FMAC2 soap_instantiate__ns1__GetDevCode(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDevCode * soap_new__ns1__GetDevCode(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetDevCode(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetDevCode * soap_new_req__ns1__GetDevCode(
	struct soap *soap,
	int iscode)
{
	_ns1__GetDevCode *_p = ::soap_new__ns1__GetDevCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDevCode::iscode = iscode;
	}
	return _p;
}

inline _ns1__GetDevCode * soap_new_set__ns1__GetDevCode(
	struct soap *soap,
	char *xb,
	char *station,
	int iscode)
{
	_ns1__GetDevCode *_p = ::soap_new__ns1__GetDevCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetDevCode::xb = xb;
		_p->_ns1__GetDevCode::station = station;
		_p->_ns1__GetDevCode::iscode = iscode;
	}
	return _p;
}

inline int soap_write__ns1__GetDevCode(struct soap *soap, _ns1__GetDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevCode", p->soap_type() == SOAP_TYPE__ns1__GetDevCode ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetDevCode(struct soap *soap, const char *URL, _ns1__GetDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevCode", p->soap_type() == SOAP_TYPE__ns1__GetDevCode ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetDevCode(struct soap *soap, const char *URL, _ns1__GetDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetDevCode", p->soap_type() == SOAP_TYPE__ns1__GetDevCode ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetDevCode * SOAP_FMAC4 soap_get__ns1__GetDevCode(struct soap*, _ns1__GetDevCode *, const char*, const char*);

inline int soap_read__ns1__GetDevCode(struct soap *soap, _ns1__GetDevCode *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetDevCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetDevCode(struct soap *soap, const char *URL, _ns1__GetDevCode *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetDevCode(struct soap *soap, _ns1__GetDevCode *p)
{
	if (::soap_read__ns1__GetDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetRyUnitResponse_DEFINED
#define SOAP_TYPE__ns1__GetRyUnitResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetRyUnitResponse(struct soap*, const char*, int, const _ns1__GetRyUnitResponse *, const char*);
SOAP_FMAC3 _ns1__GetRyUnitResponse * SOAP_FMAC4 soap_in__ns1__GetRyUnitResponse(struct soap*, const char*, _ns1__GetRyUnitResponse *, const char*);
SOAP_FMAC1 _ns1__GetRyUnitResponse * SOAP_FMAC2 soap_instantiate__ns1__GetRyUnitResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetRyUnitResponse * soap_new__ns1__GetRyUnitResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetRyUnitResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetRyUnitResponse * soap_new_req__ns1__GetRyUnitResponse(
	struct soap *soap)
{
	_ns1__GetRyUnitResponse *_p = ::soap_new__ns1__GetRyUnitResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetRyUnitResponse * soap_new_set__ns1__GetRyUnitResponse(
	struct soap *soap,
	char *GetRyUnitResult)
{
	_ns1__GetRyUnitResponse *_p = ::soap_new__ns1__GetRyUnitResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetRyUnitResponse::GetRyUnitResult = GetRyUnitResult;
	}
	return _p;
}

inline int soap_write__ns1__GetRyUnitResponse(struct soap *soap, _ns1__GetRyUnitResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetRyUnitResponse", p->soap_type() == SOAP_TYPE__ns1__GetRyUnitResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetRyUnitResponse(struct soap *soap, const char *URL, _ns1__GetRyUnitResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetRyUnitResponse", p->soap_type() == SOAP_TYPE__ns1__GetRyUnitResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetRyUnitResponse(struct soap *soap, const char *URL, _ns1__GetRyUnitResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetRyUnitResponse", p->soap_type() == SOAP_TYPE__ns1__GetRyUnitResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetRyUnitResponse * SOAP_FMAC4 soap_get__ns1__GetRyUnitResponse(struct soap*, _ns1__GetRyUnitResponse *, const char*, const char*);

inline int soap_read__ns1__GetRyUnitResponse(struct soap *soap, _ns1__GetRyUnitResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetRyUnitResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetRyUnitResponse(struct soap *soap, const char *URL, _ns1__GetRyUnitResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetRyUnitResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetRyUnitResponse(struct soap *soap, _ns1__GetRyUnitResponse *p)
{
	if (::soap_read__ns1__GetRyUnitResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetRyUnit_DEFINED
#define SOAP_TYPE__ns1__GetRyUnit_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetRyUnit(struct soap*, const char*, int, const _ns1__GetRyUnit *, const char*);
SOAP_FMAC3 _ns1__GetRyUnit * SOAP_FMAC4 soap_in__ns1__GetRyUnit(struct soap*, const char*, _ns1__GetRyUnit *, const char*);
SOAP_FMAC1 _ns1__GetRyUnit * SOAP_FMAC2 soap_instantiate__ns1__GetRyUnit(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetRyUnit * soap_new__ns1__GetRyUnit(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetRyUnit(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetRyUnit * soap_new_req__ns1__GetRyUnit(
	struct soap *soap)
{
	_ns1__GetRyUnit *_p = ::soap_new__ns1__GetRyUnit(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetRyUnit * soap_new_set__ns1__GetRyUnit(
	struct soap *soap)
{
	_ns1__GetRyUnit *_p = ::soap_new__ns1__GetRyUnit(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetRyUnit(struct soap *soap, _ns1__GetRyUnit const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetRyUnit", p->soap_type() == SOAP_TYPE__ns1__GetRyUnit ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetRyUnit(struct soap *soap, const char *URL, _ns1__GetRyUnit const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetRyUnit", p->soap_type() == SOAP_TYPE__ns1__GetRyUnit ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetRyUnit(struct soap *soap, const char *URL, _ns1__GetRyUnit const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetRyUnit", p->soap_type() == SOAP_TYPE__ns1__GetRyUnit ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetRyUnit * SOAP_FMAC4 soap_get__ns1__GetRyUnit(struct soap*, _ns1__GetRyUnit *, const char*, const char*);

inline int soap_read__ns1__GetRyUnit(struct soap *soap, _ns1__GetRyUnit *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetRyUnit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetRyUnit(struct soap *soap, const char *URL, _ns1__GetRyUnit *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetRyUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetRyUnit(struct soap *soap, _ns1__GetRyUnit *p)
{
	if (::soap_read__ns1__GetRyUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__CheckLoginUserResponse_DEFINED
#define SOAP_TYPE__ns1__CheckLoginUserResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckLoginUserResponse(struct soap*, const char*, int, const _ns1__CheckLoginUserResponse *, const char*);
SOAP_FMAC3 _ns1__CheckLoginUserResponse * SOAP_FMAC4 soap_in__ns1__CheckLoginUserResponse(struct soap*, const char*, _ns1__CheckLoginUserResponse *, const char*);
SOAP_FMAC1 _ns1__CheckLoginUserResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckLoginUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckLoginUserResponse * soap_new__ns1__CheckLoginUserResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CheckLoginUserResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__CheckLoginUserResponse * soap_new_req__ns1__CheckLoginUserResponse(
	struct soap *soap,
	int CheckLoginUserResult)
{
	_ns1__CheckLoginUserResponse *_p = ::soap_new__ns1__CheckLoginUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckLoginUserResponse::CheckLoginUserResult = CheckLoginUserResult;
	}
	return _p;
}

inline _ns1__CheckLoginUserResponse * soap_new_set__ns1__CheckLoginUserResponse(
	struct soap *soap,
	int CheckLoginUserResult)
{
	_ns1__CheckLoginUserResponse *_p = ::soap_new__ns1__CheckLoginUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckLoginUserResponse::CheckLoginUserResult = CheckLoginUserResult;
	}
	return _p;
}

inline int soap_write__ns1__CheckLoginUserResponse(struct soap *soap, _ns1__CheckLoginUserResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckLoginUserResponse", p->soap_type() == SOAP_TYPE__ns1__CheckLoginUserResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CheckLoginUserResponse(struct soap *soap, const char *URL, _ns1__CheckLoginUserResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckLoginUserResponse", p->soap_type() == SOAP_TYPE__ns1__CheckLoginUserResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CheckLoginUserResponse(struct soap *soap, const char *URL, _ns1__CheckLoginUserResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckLoginUserResponse", p->soap_type() == SOAP_TYPE__ns1__CheckLoginUserResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CheckLoginUserResponse * SOAP_FMAC4 soap_get__ns1__CheckLoginUserResponse(struct soap*, _ns1__CheckLoginUserResponse *, const char*, const char*);

inline int soap_read__ns1__CheckLoginUserResponse(struct soap *soap, _ns1__CheckLoginUserResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CheckLoginUserResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CheckLoginUserResponse(struct soap *soap, const char *URL, _ns1__CheckLoginUserResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CheckLoginUserResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__CheckLoginUserResponse(struct soap *soap, _ns1__CheckLoginUserResponse *p)
{
	if (::soap_read__ns1__CheckLoginUserResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__CheckLoginUser_DEFINED
#define SOAP_TYPE__ns1__CheckLoginUser_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckLoginUser(struct soap*, const char*, int, const _ns1__CheckLoginUser *, const char*);
SOAP_FMAC3 _ns1__CheckLoginUser * SOAP_FMAC4 soap_in__ns1__CheckLoginUser(struct soap*, const char*, _ns1__CheckLoginUser *, const char*);
SOAP_FMAC1 _ns1__CheckLoginUser * SOAP_FMAC2 soap_instantiate__ns1__CheckLoginUser(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CheckLoginUser * soap_new__ns1__CheckLoginUser(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__CheckLoginUser(soap, n, NULL, NULL, NULL);
}

inline _ns1__CheckLoginUser * soap_new_req__ns1__CheckLoginUser(
	struct soap *soap)
{
	_ns1__CheckLoginUser *_p = ::soap_new__ns1__CheckLoginUser(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__CheckLoginUser * soap_new_set__ns1__CheckLoginUser(
	struct soap *soap,
	char *username,
	char *pass,
	char *dwname,
	char *peid)
{
	_ns1__CheckLoginUser *_p = ::soap_new__ns1__CheckLoginUser(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__CheckLoginUser::username = username;
		_p->_ns1__CheckLoginUser::pass = pass;
		_p->_ns1__CheckLoginUser::dwname = dwname;
		_p->_ns1__CheckLoginUser::peid = peid;
	}
	return _p;
}

inline int soap_write__ns1__CheckLoginUser(struct soap *soap, _ns1__CheckLoginUser const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckLoginUser", p->soap_type() == SOAP_TYPE__ns1__CheckLoginUser ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__CheckLoginUser(struct soap *soap, const char *URL, _ns1__CheckLoginUser const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckLoginUser", p->soap_type() == SOAP_TYPE__ns1__CheckLoginUser ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__CheckLoginUser(struct soap *soap, const char *URL, _ns1__CheckLoginUser const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:CheckLoginUser", p->soap_type() == SOAP_TYPE__ns1__CheckLoginUser ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__CheckLoginUser * SOAP_FMAC4 soap_get__ns1__CheckLoginUser(struct soap*, _ns1__CheckLoginUser *, const char*, const char*);

inline int soap_read__ns1__CheckLoginUser(struct soap *soap, _ns1__CheckLoginUser *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__CheckLoginUser(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__CheckLoginUser(struct soap *soap, const char *URL, _ns1__CheckLoginUser *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__CheckLoginUser(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__CheckLoginUser(struct soap *soap, _ns1__CheckLoginUser *p)
{
	if (::soap_read__ns1__CheckLoginUser(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetPropNameResponse_DEFINED
#define SOAP_TYPE__ns1__GetPropNameResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPropNameResponse(struct soap*, const char*, int, const _ns1__GetPropNameResponse *, const char*);
SOAP_FMAC3 _ns1__GetPropNameResponse * SOAP_FMAC4 soap_in__ns1__GetPropNameResponse(struct soap*, const char*, _ns1__GetPropNameResponse *, const char*);
SOAP_FMAC1 _ns1__GetPropNameResponse * SOAP_FMAC2 soap_instantiate__ns1__GetPropNameResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPropNameResponse * soap_new__ns1__GetPropNameResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetPropNameResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetPropNameResponse * soap_new_req__ns1__GetPropNameResponse(
	struct soap *soap)
{
	_ns1__GetPropNameResponse *_p = ::soap_new__ns1__GetPropNameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetPropNameResponse * soap_new_set__ns1__GetPropNameResponse(
	struct soap *soap,
	char *GetPropNameResult)
{
	_ns1__GetPropNameResponse *_p = ::soap_new__ns1__GetPropNameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPropNameResponse::GetPropNameResult = GetPropNameResult;
	}
	return _p;
}

inline int soap_write__ns1__GetPropNameResponse(struct soap *soap, _ns1__GetPropNameResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropNameResponse", p->soap_type() == SOAP_TYPE__ns1__GetPropNameResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetPropNameResponse(struct soap *soap, const char *URL, _ns1__GetPropNameResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropNameResponse", p->soap_type() == SOAP_TYPE__ns1__GetPropNameResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetPropNameResponse(struct soap *soap, const char *URL, _ns1__GetPropNameResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropNameResponse", p->soap_type() == SOAP_TYPE__ns1__GetPropNameResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetPropNameResponse * SOAP_FMAC4 soap_get__ns1__GetPropNameResponse(struct soap*, _ns1__GetPropNameResponse *, const char*, const char*);

inline int soap_read__ns1__GetPropNameResponse(struct soap *soap, _ns1__GetPropNameResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetPropNameResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetPropNameResponse(struct soap *soap, const char *URL, _ns1__GetPropNameResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetPropNameResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetPropNameResponse(struct soap *soap, _ns1__GetPropNameResponse *p)
{
	if (::soap_read__ns1__GetPropNameResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetPropName_DEFINED
#define SOAP_TYPE__ns1__GetPropName_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPropName(struct soap*, const char*, int, const _ns1__GetPropName *, const char*);
SOAP_FMAC3 _ns1__GetPropName * SOAP_FMAC4 soap_in__ns1__GetPropName(struct soap*, const char*, _ns1__GetPropName *, const char*);
SOAP_FMAC1 _ns1__GetPropName * SOAP_FMAC2 soap_instantiate__ns1__GetPropName(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPropName * soap_new__ns1__GetPropName(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetPropName(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetPropName * soap_new_req__ns1__GetPropName(
	struct soap *soap,
	int stationtypeid)
{
	_ns1__GetPropName *_p = ::soap_new__ns1__GetPropName(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPropName::stationtypeid = stationtypeid;
	}
	return _p;
}

inline _ns1__GetPropName * soap_new_set__ns1__GetPropName(
	struct soap *soap,
	int stationtypeid)
{
	_ns1__GetPropName *_p = ::soap_new__ns1__GetPropName(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPropName::stationtypeid = stationtypeid;
	}
	return _p;
}

inline int soap_write__ns1__GetPropName(struct soap *soap, _ns1__GetPropName const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropName", p->soap_type() == SOAP_TYPE__ns1__GetPropName ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetPropName(struct soap *soap, const char *URL, _ns1__GetPropName const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropName", p->soap_type() == SOAP_TYPE__ns1__GetPropName ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetPropName(struct soap *soap, const char *URL, _ns1__GetPropName const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropName", p->soap_type() == SOAP_TYPE__ns1__GetPropName ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetPropName * SOAP_FMAC4 soap_get__ns1__GetPropName(struct soap*, _ns1__GetPropName *, const char*, const char*);

inline int soap_read__ns1__GetPropName(struct soap *soap, _ns1__GetPropName *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetPropName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetPropName(struct soap *soap, const char *URL, _ns1__GetPropName *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetPropName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetPropName(struct soap *soap, _ns1__GetPropName *p)
{
	if (::soap_read__ns1__GetPropName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetPropListResponse_DEFINED
#define SOAP_TYPE__ns1__GetPropListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPropListResponse(struct soap*, const char*, int, const _ns1__GetPropListResponse *, const char*);
SOAP_FMAC3 _ns1__GetPropListResponse * SOAP_FMAC4 soap_in__ns1__GetPropListResponse(struct soap*, const char*, _ns1__GetPropListResponse *, const char*);
SOAP_FMAC1 _ns1__GetPropListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetPropListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPropListResponse * soap_new__ns1__GetPropListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetPropListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetPropListResponse * soap_new_req__ns1__GetPropListResponse(
	struct soap *soap)
{
	_ns1__GetPropListResponse *_p = ::soap_new__ns1__GetPropListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetPropListResponse * soap_new_set__ns1__GetPropListResponse(
	struct soap *soap,
	char *GetPropListResult)
{
	_ns1__GetPropListResponse *_p = ::soap_new__ns1__GetPropListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPropListResponse::GetPropListResult = GetPropListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetPropListResponse(struct soap *soap, _ns1__GetPropListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropListResponse", p->soap_type() == SOAP_TYPE__ns1__GetPropListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetPropListResponse(struct soap *soap, const char *URL, _ns1__GetPropListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropListResponse", p->soap_type() == SOAP_TYPE__ns1__GetPropListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetPropListResponse(struct soap *soap, const char *URL, _ns1__GetPropListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropListResponse", p->soap_type() == SOAP_TYPE__ns1__GetPropListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetPropListResponse * SOAP_FMAC4 soap_get__ns1__GetPropListResponse(struct soap*, _ns1__GetPropListResponse *, const char*, const char*);

inline int soap_read__ns1__GetPropListResponse(struct soap *soap, _ns1__GetPropListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetPropListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetPropListResponse(struct soap *soap, const char *URL, _ns1__GetPropListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetPropListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetPropListResponse(struct soap *soap, _ns1__GetPropListResponse *p)
{
	if (::soap_read__ns1__GetPropListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetPropList_DEFINED
#define SOAP_TYPE__ns1__GetPropList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetPropList(struct soap*, const char*, int, const _ns1__GetPropList *, const char*);
SOAP_FMAC3 _ns1__GetPropList * SOAP_FMAC4 soap_in__ns1__GetPropList(struct soap*, const char*, _ns1__GetPropList *, const char*);
SOAP_FMAC1 _ns1__GetPropList * SOAP_FMAC2 soap_instantiate__ns1__GetPropList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetPropList * soap_new__ns1__GetPropList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetPropList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetPropList * soap_new_req__ns1__GetPropList(
	struct soap *soap)
{
	_ns1__GetPropList *_p = ::soap_new__ns1__GetPropList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetPropList * soap_new_set__ns1__GetPropList(
	struct soap *soap,
	char *dwname,
	char *xbname,
	char *station)
{
	_ns1__GetPropList *_p = ::soap_new__ns1__GetPropList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetPropList::dwname = dwname;
		_p->_ns1__GetPropList::xbname = xbname;
		_p->_ns1__GetPropList::station = station;
	}
	return _p;
}

inline int soap_write__ns1__GetPropList(struct soap *soap, _ns1__GetPropList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropList", p->soap_type() == SOAP_TYPE__ns1__GetPropList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetPropList(struct soap *soap, const char *URL, _ns1__GetPropList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropList", p->soap_type() == SOAP_TYPE__ns1__GetPropList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetPropList(struct soap *soap, const char *URL, _ns1__GetPropList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetPropList", p->soap_type() == SOAP_TYPE__ns1__GetPropList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetPropList * SOAP_FMAC4 soap_get__ns1__GetPropList(struct soap*, _ns1__GetPropList *, const char*, const char*);

inline int soap_read__ns1__GetPropList(struct soap *soap, _ns1__GetPropList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetPropList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetPropList(struct soap *soap, const char *URL, _ns1__GetPropList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetPropList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetPropList(struct soap *soap, _ns1__GetPropList *p)
{
	if (::soap_read__ns1__GetPropList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskDevFlowChartListResponse_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskDevFlowChartListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskDevFlowChartListResponse(struct soap*, const char*, int, const _ns1__GetYjzhZskDevFlowChartListResponse *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskDevFlowChartListResponse * SOAP_FMAC4 soap_in__ns1__GetYjzhZskDevFlowChartListResponse(struct soap*, const char*, _ns1__GetYjzhZskDevFlowChartListResponse *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskDevFlowChartListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskDevFlowChartListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskDevFlowChartListResponse * soap_new__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskDevFlowChartListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskDevFlowChartListResponse * soap_new_req__ns1__GetYjzhZskDevFlowChartListResponse(
	struct soap *soap)
{
	_ns1__GetYjzhZskDevFlowChartListResponse *_p = ::soap_new__ns1__GetYjzhZskDevFlowChartListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskDevFlowChartListResponse * soap_new_set__ns1__GetYjzhZskDevFlowChartListResponse(
	struct soap *soap,
	char *GetYjzhZskDevFlowChartListResult)
{
	_ns1__GetYjzhZskDevFlowChartListResponse *_p = ::soap_new__ns1__GetYjzhZskDevFlowChartListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskDevFlowChartListResponse::GetYjzhZskDevFlowChartListResult = GetYjzhZskDevFlowChartListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, _ns1__GetYjzhZskDevFlowChartListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskDevFlowChartListResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskDevFlowChartListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskDevFlowChartListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskDevFlowChartListResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskDevFlowChartListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskDevFlowChartListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskDevFlowChartListResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskDevFlowChartListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskDevFlowChartListResponse * SOAP_FMAC4 soap_get__ns1__GetYjzhZskDevFlowChartListResponse(struct soap*, _ns1__GetYjzhZskDevFlowChartListResponse *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, _ns1__GetYjzhZskDevFlowChartListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskDevFlowChartListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskDevFlowChartListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskDevFlowChartListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskDevFlowChartListResponse(struct soap *soap, _ns1__GetYjzhZskDevFlowChartListResponse *p)
{
	if (::soap_read__ns1__GetYjzhZskDevFlowChartListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskDevFlowChartList_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskDevFlowChartList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskDevFlowChartList(struct soap*, const char*, int, const _ns1__GetYjzhZskDevFlowChartList *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskDevFlowChartList * SOAP_FMAC4 soap_in__ns1__GetYjzhZskDevFlowChartList(struct soap*, const char*, _ns1__GetYjzhZskDevFlowChartList *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskDevFlowChartList * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskDevFlowChartList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskDevFlowChartList * soap_new__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskDevFlowChartList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskDevFlowChartList * soap_new_req__ns1__GetYjzhZskDevFlowChartList(
	struct soap *soap)
{
	_ns1__GetYjzhZskDevFlowChartList *_p = ::soap_new__ns1__GetYjzhZskDevFlowChartList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskDevFlowChartList * soap_new_set__ns1__GetYjzhZskDevFlowChartList(
	struct soap *soap,
	char *xb,
	char *cz,
	char *devtypeid,
	char *devname)
{
	_ns1__GetYjzhZskDevFlowChartList *_p = ::soap_new__ns1__GetYjzhZskDevFlowChartList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskDevFlowChartList::xb = xb;
		_p->_ns1__GetYjzhZskDevFlowChartList::cz = cz;
		_p->_ns1__GetYjzhZskDevFlowChartList::devtypeid = devtypeid;
		_p->_ns1__GetYjzhZskDevFlowChartList::devname = devname;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, _ns1__GetYjzhZskDevFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskDevFlowChartList", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskDevFlowChartList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *URL, _ns1__GetYjzhZskDevFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskDevFlowChartList", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskDevFlowChartList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *URL, _ns1__GetYjzhZskDevFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskDevFlowChartList", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskDevFlowChartList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskDevFlowChartList * SOAP_FMAC4 soap_get__ns1__GetYjzhZskDevFlowChartList(struct soap*, _ns1__GetYjzhZskDevFlowChartList *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, _ns1__GetYjzhZskDevFlowChartList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskDevFlowChartList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *URL, _ns1__GetYjzhZskDevFlowChartList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskDevFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskDevFlowChartList(struct soap *soap, _ns1__GetYjzhZskDevFlowChartList *p)
{
	if (::soap_read__ns1__GetYjzhZskDevFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartListResponse_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartListResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap*, const char*, int, const _ns1__GetYjzhZskOtherFlowChartListResponse *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskOtherFlowChartListResponse * SOAP_FMAC4 soap_in__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap*, const char*, _ns1__GetYjzhZskOtherFlowChartListResponse *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskOtherFlowChartListResponse * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskOtherFlowChartListResponse * soap_new__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskOtherFlowChartListResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskOtherFlowChartListResponse * soap_new_req__ns1__GetYjzhZskOtherFlowChartListResponse(
	struct soap *soap)
{
	_ns1__GetYjzhZskOtherFlowChartListResponse *_p = ::soap_new__ns1__GetYjzhZskOtherFlowChartListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskOtherFlowChartListResponse * soap_new_set__ns1__GetYjzhZskOtherFlowChartListResponse(
	struct soap *soap,
	char *GetYjzhZskOtherFlowChartListResult)
{
	_ns1__GetYjzhZskOtherFlowChartListResponse *_p = ::soap_new__ns1__GetYjzhZskOtherFlowChartListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskOtherFlowChartListResponse::GetYjzhZskOtherFlowChartListResult = GetYjzhZskOtherFlowChartListResult;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, _ns1__GetYjzhZskOtherFlowChartListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskOtherFlowChartListResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartListResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskOtherFlowChartListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskOtherFlowChartListResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartListResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskOtherFlowChartListResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskOtherFlowChartListResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartListResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskOtherFlowChartListResponse * SOAP_FMAC4 soap_get__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap*, _ns1__GetYjzhZskOtherFlowChartListResponse *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, _ns1__GetYjzhZskOtherFlowChartListResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskOtherFlowChartListResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskOtherFlowChartListResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskOtherFlowChartListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskOtherFlowChartListResponse(struct soap *soap, _ns1__GetYjzhZskOtherFlowChartListResponse *p)
{
	if (::soap_read__ns1__GetYjzhZskOtherFlowChartListResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartList_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartList_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskOtherFlowChartList(struct soap*, const char*, int, const _ns1__GetYjzhZskOtherFlowChartList *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskOtherFlowChartList * SOAP_FMAC4 soap_in__ns1__GetYjzhZskOtherFlowChartList(struct soap*, const char*, _ns1__GetYjzhZskOtherFlowChartList *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskOtherFlowChartList * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskOtherFlowChartList(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskOtherFlowChartList * soap_new__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskOtherFlowChartList(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskOtherFlowChartList * soap_new_req__ns1__GetYjzhZskOtherFlowChartList(
	struct soap *soap)
{
	_ns1__GetYjzhZskOtherFlowChartList *_p = ::soap_new__ns1__GetYjzhZskOtherFlowChartList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskOtherFlowChartList * soap_new_set__ns1__GetYjzhZskOtherFlowChartList(
	struct soap *soap)
{
	_ns1__GetYjzhZskOtherFlowChartList *_p = ::soap_new__ns1__GetYjzhZskOtherFlowChartList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, _ns1__GetYjzhZskOtherFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskOtherFlowChartList", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartList ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *URL, _ns1__GetYjzhZskOtherFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskOtherFlowChartList", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartList ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *URL, _ns1__GetYjzhZskOtherFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskOtherFlowChartList", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskOtherFlowChartList ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskOtherFlowChartList * SOAP_FMAC4 soap_get__ns1__GetYjzhZskOtherFlowChartList(struct soap*, _ns1__GetYjzhZskOtherFlowChartList *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, _ns1__GetYjzhZskOtherFlowChartList *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskOtherFlowChartList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *URL, _ns1__GetYjzhZskOtherFlowChartList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskOtherFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, _ns1__GetYjzhZskOtherFlowChartList *p)
{
	if (::soap_read__ns1__GetYjzhZskOtherFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskGzFlowResponse_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskGzFlowResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskGzFlowResponse(struct soap*, const char*, int, const _ns1__GetYjzhZskGzFlowResponse *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskGzFlowResponse * SOAP_FMAC4 soap_in__ns1__GetYjzhZskGzFlowResponse(struct soap*, const char*, _ns1__GetYjzhZskGzFlowResponse *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskGzFlowResponse * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskGzFlowResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskGzFlowResponse * soap_new__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskGzFlowResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskGzFlowResponse * soap_new_req__ns1__GetYjzhZskGzFlowResponse(
	struct soap *soap)
{
	_ns1__GetYjzhZskGzFlowResponse *_p = ::soap_new__ns1__GetYjzhZskGzFlowResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskGzFlowResponse * soap_new_set__ns1__GetYjzhZskGzFlowResponse(
	struct soap *soap,
	char *GetYjzhZskGzFlowResult)
{
	_ns1__GetYjzhZskGzFlowResponse *_p = ::soap_new__ns1__GetYjzhZskGzFlowResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskGzFlowResponse::GetYjzhZskGzFlowResult = GetYjzhZskGzFlowResult;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, _ns1__GetYjzhZskGzFlowResponse const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskGzFlowResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskGzFlowResponse ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskGzFlowResponse const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskGzFlowResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskGzFlowResponse ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskGzFlowResponse const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskGzFlowResponse", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskGzFlowResponse ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskGzFlowResponse * SOAP_FMAC4 soap_get__ns1__GetYjzhZskGzFlowResponse(struct soap*, _ns1__GetYjzhZskGzFlowResponse *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, _ns1__GetYjzhZskGzFlowResponse *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskGzFlowResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, const char *URL, _ns1__GetYjzhZskGzFlowResponse *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskGzFlowResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskGzFlowResponse(struct soap *soap, _ns1__GetYjzhZskGzFlowResponse *p)
{
	if (::soap_read__ns1__GetYjzhZskGzFlowResponse(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__GetYjzhZskGzFlow_DEFINED
#define SOAP_TYPE__ns1__GetYjzhZskGzFlow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetYjzhZskGzFlow(struct soap*, const char*, int, const _ns1__GetYjzhZskGzFlow *, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskGzFlow * SOAP_FMAC4 soap_in__ns1__GetYjzhZskGzFlow(struct soap*, const char*, _ns1__GetYjzhZskGzFlow *, const char*);
SOAP_FMAC1 _ns1__GetYjzhZskGzFlow * SOAP_FMAC2 soap_instantiate__ns1__GetYjzhZskGzFlow(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetYjzhZskGzFlow * soap_new__ns1__GetYjzhZskGzFlow(struct soap *soap, int n = -1)
{
	return soap_instantiate__ns1__GetYjzhZskGzFlow(soap, n, NULL, NULL, NULL);
}

inline _ns1__GetYjzhZskGzFlow * soap_new_req__ns1__GetYjzhZskGzFlow(
	struct soap *soap)
{
	_ns1__GetYjzhZskGzFlow *_p = ::soap_new__ns1__GetYjzhZskGzFlow(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _ns1__GetYjzhZskGzFlow * soap_new_set__ns1__GetYjzhZskGzFlow(
	struct soap *soap,
	char *id)
{
	_ns1__GetYjzhZskGzFlow *_p = ::soap_new__ns1__GetYjzhZskGzFlow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__GetYjzhZskGzFlow::id = id;
	}
	return _p;
}

inline int soap_write__ns1__GetYjzhZskGzFlow(struct soap *soap, _ns1__GetYjzhZskGzFlow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskGzFlow", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskGzFlow ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ns1__GetYjzhZskGzFlow(struct soap *soap, const char *URL, _ns1__GetYjzhZskGzFlow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskGzFlow", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskGzFlow ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ns1__GetYjzhZskGzFlow(struct soap *soap, const char *URL, _ns1__GetYjzhZskGzFlow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:GetYjzhZskGzFlow", p->soap_type() == SOAP_TYPE__ns1__GetYjzhZskGzFlow ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__GetYjzhZskGzFlow * SOAP_FMAC4 soap_get__ns1__GetYjzhZskGzFlow(struct soap*, _ns1__GetYjzhZskGzFlow *, const char*, const char*);

inline int soap_read__ns1__GetYjzhZskGzFlow(struct soap *soap, _ns1__GetYjzhZskGzFlow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get__ns1__GetYjzhZskGzFlow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__ns1__GetYjzhZskGzFlow(struct soap *soap, const char *URL, _ns1__GetYjzhZskGzFlow *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__ns1__GetYjzhZskGzFlow(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__ns1__GetYjzhZskGzFlow(struct soap *soap, _ns1__GetYjzhZskGzFlow *p)
{
	if (::soap_read__ns1__GetYjzhZskGzFlow(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfBase64Binary_DEFINED
#define SOAP_TYPE_ns1__ArrayOfBase64Binary_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfBase64Binary(struct soap*, const char*, int, const ns1__ArrayOfBase64Binary *, const char*);
SOAP_FMAC3 ns1__ArrayOfBase64Binary * SOAP_FMAC4 soap_in_ns1__ArrayOfBase64Binary(struct soap*, const char*, ns1__ArrayOfBase64Binary *, const char*);
SOAP_FMAC1 ns1__ArrayOfBase64Binary * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfBase64Binary(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfBase64Binary * soap_new_ns1__ArrayOfBase64Binary(struct soap *soap, int n = -1)
{
	return soap_instantiate_ns1__ArrayOfBase64Binary(soap, n, NULL, NULL, NULL);
}

inline ns1__ArrayOfBase64Binary * soap_new_req_ns1__ArrayOfBase64Binary(
	struct soap *soap,
	int __sizebase64Binary,
	xsd__base64Binary *base64Binary)
{
	ns1__ArrayOfBase64Binary *_p = ::soap_new_ns1__ArrayOfBase64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfBase64Binary::__sizebase64Binary = __sizebase64Binary;
		_p->ns1__ArrayOfBase64Binary::base64Binary = base64Binary;
	}
	return _p;
}

inline ns1__ArrayOfBase64Binary * soap_new_set_ns1__ArrayOfBase64Binary(
	struct soap *soap,
	int __sizebase64Binary,
	xsd__base64Binary *base64Binary)
{
	ns1__ArrayOfBase64Binary *_p = ::soap_new_ns1__ArrayOfBase64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ArrayOfBase64Binary::__sizebase64Binary = __sizebase64Binary;
		_p->ns1__ArrayOfBase64Binary::base64Binary = base64Binary;
	}
	return _p;
}

inline int soap_write_ns1__ArrayOfBase64Binary(struct soap *soap, ns1__ArrayOfBase64Binary const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfBase64Binary", p->soap_type() == SOAP_TYPE_ns1__ArrayOfBase64Binary ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ns1__ArrayOfBase64Binary(struct soap *soap, const char *URL, ns1__ArrayOfBase64Binary const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfBase64Binary", p->soap_type() == SOAP_TYPE_ns1__ArrayOfBase64Binary ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ns1__ArrayOfBase64Binary(struct soap *soap, const char *URL, ns1__ArrayOfBase64Binary const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ArrayOfBase64Binary", p->soap_type() == SOAP_TYPE_ns1__ArrayOfBase64Binary ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ArrayOfBase64Binary * SOAP_FMAC4 soap_get_ns1__ArrayOfBase64Binary(struct soap*, ns1__ArrayOfBase64Binary *, const char*, const char*);

inline int soap_read_ns1__ArrayOfBase64Binary(struct soap *soap, ns1__ArrayOfBase64Binary *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_ns1__ArrayOfBase64Binary(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ns1__ArrayOfBase64Binary(struct soap *soap, const char *URL, ns1__ArrayOfBase64Binary *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_ns1__ArrayOfBase64Binary(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_ns1__ArrayOfBase64Binary(struct soap *soap, ns1__ArrayOfBase64Binary *p)
{
	if (::soap_read_ns1__ArrayOfBase64Binary(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_xsd__base64Binary_DEFINED
#define SOAP_TYPE_xsd__base64Binary_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__base64Binary2s(struct soap*, xsd__base64Binary);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *);
SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1)
{
	return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL);
}

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(
	struct soap *soap)
{
	xsd__base64Binary *_p = ::soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(
	struct soap *soap,
	unsigned char *__ptr,
	int __size,
	char *id,
	char *type,
	char *options)
{
	xsd__base64Binary *_p = ::soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->xsd__base64Binary::__ptr = __ptr;
		_p->xsd__base64Binary::__size = __size;
		_p->xsd__base64Binary::id = id;
		_p->xsd__base64Binary::type = type;
		_p->xsd__base64Binary::options = options;
	}
	return _p;
}

inline int soap_write_xsd__base64Binary(struct soap *soap, xsd__base64Binary const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "xsd:base64Binary", p->soap_type() == SOAP_TYPE_xsd__base64Binary ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_xsd__base64Binary(struct soap *soap, const char *URL, xsd__base64Binary const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "xsd:base64Binary", p->soap_type() == SOAP_TYPE_xsd__base64Binary ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_xsd__base64Binary(struct soap *soap, const char *URL, xsd__base64Binary const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "xsd:base64Binary", p->soap_type() == SOAP_TYPE_xsd__base64Binary ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

inline int soap_read_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || ::soap_get_xsd__base64Binary(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_xsd__base64Binary(struct soap *soap, const char *URL, xsd__base64Binary *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_xsd__base64Binary(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p)
{
	if (::soap_read_xsd__base64Binary(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{
	struct SOAP_ENV__Fault *_p = ::soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{
	struct SOAP_ENV__Fault *_p = ::soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || ::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Fault(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (::soap_read_SOAP_ENV__Fault(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{
	struct SOAP_ENV__Reason *_p = ::soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{
	struct SOAP_ENV__Reason *_p = ::soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || ::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Reason(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (::soap_read_SOAP_ENV__Reason(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = ::soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = ::soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || ::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Detail(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (::soap_read_SOAP_ENV__Detail(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{
	struct SOAP_ENV__Code *_p = ::soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{
	struct SOAP_ENV__Code *_p = ::soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Code(soap, p), 0) || ::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Code(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (::soap_read_SOAP_ENV__Code(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = ::soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = ::soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	::soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize_SOAP_ENV__Header(soap, p), 0) || ::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (p)
	{	::soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || ::soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_SOAP_ENV__Header(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (::soap_read_SOAP_ENV__Header(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskAlarmTypes__DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskAlarmTypes__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskAlarmTypes_(struct soap*, struct __ns1__GetYjzhZskAlarmTypes_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskAlarmTypes_(struct soap*, const struct __ns1__GetYjzhZskAlarmTypes_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskAlarmTypes_(struct soap*, const char*, int, const struct __ns1__GetYjzhZskAlarmTypes_ *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskAlarmTypes_ * SOAP_FMAC4 soap_in___ns1__GetYjzhZskAlarmTypes_(struct soap*, const char*, struct __ns1__GetYjzhZskAlarmTypes_ *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskAlarmTypes_ * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskAlarmTypes_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskAlarmTypes_ * soap_new___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskAlarmTypes_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskAlarmTypes_ * soap_new_req___ns1__GetYjzhZskAlarmTypes_(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskAlarmTypes_ *_p = ::soap_new___ns1__GetYjzhZskAlarmTypes_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskAlarmTypes_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskAlarmTypes_ * soap_new_set___ns1__GetYjzhZskAlarmTypes_(
	struct soap *soap,
	_ns1__GetYjzhZskAlarmTypes *ns1__GetYjzhZskAlarmTypes)
{
	struct __ns1__GetYjzhZskAlarmTypes_ *_p = ::soap_new___ns1__GetYjzhZskAlarmTypes_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskAlarmTypes_(soap, _p);
		_p->ns1__GetYjzhZskAlarmTypes = ns1__GetYjzhZskAlarmTypes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskAlarmTypes_(struct soap*, const struct __ns1__GetYjzhZskAlarmTypes_ *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, struct __ns1__GetYjzhZskAlarmTypes_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskAlarmTypes_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskAlarmTypes_(soap, p, "-ns1:GetYjzhZskAlarmTypes", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskAlarmTypes_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskAlarmTypes_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskAlarmTypes_(soap, p, "-ns1:GetYjzhZskAlarmTypes", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskAlarmTypes_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskAlarmTypes_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskAlarmTypes_(soap, p, "-ns1:GetYjzhZskAlarmTypes", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskAlarmTypes_ * SOAP_FMAC4 soap_get___ns1__GetYjzhZskAlarmTypes_(struct soap*, struct __ns1__GetYjzhZskAlarmTypes_ *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, struct __ns1__GetYjzhZskAlarmTypes_ *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskAlarmTypes_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskAlarmTypes_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskAlarmTypes_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskAlarmTypes_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, struct __ns1__GetYjzhZskAlarmTypes_ *p)
{
	if (::soap_read___ns1__GetYjzhZskAlarmTypes_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SelectYjzhDevice__DEFINED
#define SOAP_TYPE___ns1__SelectYjzhDevice__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectYjzhDevice_(struct soap*, struct __ns1__SelectYjzhDevice_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectYjzhDevice_(struct soap*, const struct __ns1__SelectYjzhDevice_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectYjzhDevice_(struct soap*, const char*, int, const struct __ns1__SelectYjzhDevice_ *, const char*);
SOAP_FMAC3 struct __ns1__SelectYjzhDevice_ * SOAP_FMAC4 soap_in___ns1__SelectYjzhDevice_(struct soap*, const char*, struct __ns1__SelectYjzhDevice_ *, const char*);
SOAP_FMAC1 struct __ns1__SelectYjzhDevice_ * SOAP_FMAC2 soap_instantiate___ns1__SelectYjzhDevice_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SelectYjzhDevice_ * soap_new___ns1__SelectYjzhDevice_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SelectYjzhDevice_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SelectYjzhDevice_ * soap_new_req___ns1__SelectYjzhDevice_(
	struct soap *soap)
{
	struct __ns1__SelectYjzhDevice_ *_p = ::soap_new___ns1__SelectYjzhDevice_(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhDevice_(soap, _p);
	}
	return _p;
}

inline struct __ns1__SelectYjzhDevice_ * soap_new_set___ns1__SelectYjzhDevice_(
	struct soap *soap,
	_ns1__SelectYjzhDevice *ns1__SelectYjzhDevice)
{
	struct __ns1__SelectYjzhDevice_ *_p = ::soap_new___ns1__SelectYjzhDevice_(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhDevice_(soap, _p);
		_p->ns1__SelectYjzhDevice = ns1__SelectYjzhDevice;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectYjzhDevice_(struct soap*, const struct __ns1__SelectYjzhDevice_ *, const char*, const char*);

inline int soap_write___ns1__SelectYjzhDevice_(struct soap *soap, struct __ns1__SelectYjzhDevice_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SelectYjzhDevice_(soap, p), 0) || ::soap_put___ns1__SelectYjzhDevice_(soap, p, "-ns1:SelectYjzhDevice", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SelectYjzhDevice_(struct soap *soap, const char *URL, struct __ns1__SelectYjzhDevice_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhDevice_(soap, p), 0) || ::soap_put___ns1__SelectYjzhDevice_(soap, p, "-ns1:SelectYjzhDevice", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SelectYjzhDevice_(struct soap *soap, const char *URL, struct __ns1__SelectYjzhDevice_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhDevice_(soap, p), 0) || ::soap_put___ns1__SelectYjzhDevice_(soap, p, "-ns1:SelectYjzhDevice", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SelectYjzhDevice_ * SOAP_FMAC4 soap_get___ns1__SelectYjzhDevice_(struct soap*, struct __ns1__SelectYjzhDevice_ *, const char*, const char*);

inline int soap_read___ns1__SelectYjzhDevice_(struct soap *soap, struct __ns1__SelectYjzhDevice_ *p)
{
	if (p)
	{	::soap_default___ns1__SelectYjzhDevice_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SelectYjzhDevice_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SelectYjzhDevice_(struct soap *soap, const char *URL, struct __ns1__SelectYjzhDevice_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SelectYjzhDevice_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SelectYjzhDevice_(struct soap *soap, struct __ns1__SelectYjzhDevice_ *p)
{
	if (::soap_read___ns1__SelectYjzhDevice_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SelectYjzhStation__DEFINED
#define SOAP_TYPE___ns1__SelectYjzhStation__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectYjzhStation_(struct soap*, struct __ns1__SelectYjzhStation_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectYjzhStation_(struct soap*, const struct __ns1__SelectYjzhStation_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectYjzhStation_(struct soap*, const char*, int, const struct __ns1__SelectYjzhStation_ *, const char*);
SOAP_FMAC3 struct __ns1__SelectYjzhStation_ * SOAP_FMAC4 soap_in___ns1__SelectYjzhStation_(struct soap*, const char*, struct __ns1__SelectYjzhStation_ *, const char*);
SOAP_FMAC1 struct __ns1__SelectYjzhStation_ * SOAP_FMAC2 soap_instantiate___ns1__SelectYjzhStation_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SelectYjzhStation_ * soap_new___ns1__SelectYjzhStation_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SelectYjzhStation_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SelectYjzhStation_ * soap_new_req___ns1__SelectYjzhStation_(
	struct soap *soap)
{
	struct __ns1__SelectYjzhStation_ *_p = ::soap_new___ns1__SelectYjzhStation_(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhStation_(soap, _p);
	}
	return _p;
}

inline struct __ns1__SelectYjzhStation_ * soap_new_set___ns1__SelectYjzhStation_(
	struct soap *soap,
	_ns1__SelectYjzhStation *ns1__SelectYjzhStation)
{
	struct __ns1__SelectYjzhStation_ *_p = ::soap_new___ns1__SelectYjzhStation_(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhStation_(soap, _p);
		_p->ns1__SelectYjzhStation = ns1__SelectYjzhStation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectYjzhStation_(struct soap*, const struct __ns1__SelectYjzhStation_ *, const char*, const char*);

inline int soap_write___ns1__SelectYjzhStation_(struct soap *soap, struct __ns1__SelectYjzhStation_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SelectYjzhStation_(soap, p), 0) || ::soap_put___ns1__SelectYjzhStation_(soap, p, "-ns1:SelectYjzhStation", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SelectYjzhStation_(struct soap *soap, const char *URL, struct __ns1__SelectYjzhStation_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhStation_(soap, p), 0) || ::soap_put___ns1__SelectYjzhStation_(soap, p, "-ns1:SelectYjzhStation", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SelectYjzhStation_(struct soap *soap, const char *URL, struct __ns1__SelectYjzhStation_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhStation_(soap, p), 0) || ::soap_put___ns1__SelectYjzhStation_(soap, p, "-ns1:SelectYjzhStation", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SelectYjzhStation_ * SOAP_FMAC4 soap_get___ns1__SelectYjzhStation_(struct soap*, struct __ns1__SelectYjzhStation_ *, const char*, const char*);

inline int soap_read___ns1__SelectYjzhStation_(struct soap *soap, struct __ns1__SelectYjzhStation_ *p)
{
	if (p)
	{	::soap_default___ns1__SelectYjzhStation_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SelectYjzhStation_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SelectYjzhStation_(struct soap *soap, const char *URL, struct __ns1__SelectYjzhStation_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SelectYjzhStation_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SelectYjzhStation_(struct soap *soap, struct __ns1__SelectYjzhStation_ *p)
{
	if (::soap_read___ns1__SelectYjzhStation_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SaveMapFile__DEFINED
#define SOAP_TYPE___ns1__SaveMapFile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveMapFile_(struct soap*, struct __ns1__SaveMapFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveMapFile_(struct soap*, const struct __ns1__SaveMapFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveMapFile_(struct soap*, const char*, int, const struct __ns1__SaveMapFile_ *, const char*);
SOAP_FMAC3 struct __ns1__SaveMapFile_ * SOAP_FMAC4 soap_in___ns1__SaveMapFile_(struct soap*, const char*, struct __ns1__SaveMapFile_ *, const char*);
SOAP_FMAC1 struct __ns1__SaveMapFile_ * SOAP_FMAC2 soap_instantiate___ns1__SaveMapFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveMapFile_ * soap_new___ns1__SaveMapFile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SaveMapFile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SaveMapFile_ * soap_new_req___ns1__SaveMapFile_(
	struct soap *soap)
{
	struct __ns1__SaveMapFile_ *_p = ::soap_new___ns1__SaveMapFile_(soap);
	if (_p)
	{	::soap_default___ns1__SaveMapFile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__SaveMapFile_ * soap_new_set___ns1__SaveMapFile_(
	struct soap *soap,
	_ns1__SaveMapFile *ns1__SaveMapFile)
{
	struct __ns1__SaveMapFile_ *_p = ::soap_new___ns1__SaveMapFile_(soap);
	if (_p)
	{	::soap_default___ns1__SaveMapFile_(soap, _p);
		_p->ns1__SaveMapFile = ns1__SaveMapFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveMapFile_(struct soap*, const struct __ns1__SaveMapFile_ *, const char*, const char*);

inline int soap_write___ns1__SaveMapFile_(struct soap *soap, struct __ns1__SaveMapFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SaveMapFile_(soap, p), 0) || ::soap_put___ns1__SaveMapFile_(soap, p, "-ns1:SaveMapFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SaveMapFile_(struct soap *soap, const char *URL, struct __ns1__SaveMapFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveMapFile_(soap, p), 0) || ::soap_put___ns1__SaveMapFile_(soap, p, "-ns1:SaveMapFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SaveMapFile_(struct soap *soap, const char *URL, struct __ns1__SaveMapFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveMapFile_(soap, p), 0) || ::soap_put___ns1__SaveMapFile_(soap, p, "-ns1:SaveMapFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SaveMapFile_ * SOAP_FMAC4 soap_get___ns1__SaveMapFile_(struct soap*, struct __ns1__SaveMapFile_ *, const char*, const char*);

inline int soap_read___ns1__SaveMapFile_(struct soap *soap, struct __ns1__SaveMapFile_ *p)
{
	if (p)
	{	::soap_default___ns1__SaveMapFile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SaveMapFile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SaveMapFile_(struct soap *soap, const char *URL, struct __ns1__SaveMapFile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SaveMapFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SaveMapFile_(struct soap *soap, struct __ns1__SaveMapFile_ *p)
{
	if (::soap_read___ns1__SaveMapFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GzGetDeviceStruct__DEFINED
#define SOAP_TYPE___ns1__GzGetDeviceStruct__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GzGetDeviceStruct_(struct soap*, struct __ns1__GzGetDeviceStruct_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GzGetDeviceStruct_(struct soap*, const struct __ns1__GzGetDeviceStruct_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GzGetDeviceStruct_(struct soap*, const char*, int, const struct __ns1__GzGetDeviceStruct_ *, const char*);
SOAP_FMAC3 struct __ns1__GzGetDeviceStruct_ * SOAP_FMAC4 soap_in___ns1__GzGetDeviceStruct_(struct soap*, const char*, struct __ns1__GzGetDeviceStruct_ *, const char*);
SOAP_FMAC1 struct __ns1__GzGetDeviceStruct_ * SOAP_FMAC2 soap_instantiate___ns1__GzGetDeviceStruct_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GzGetDeviceStruct_ * soap_new___ns1__GzGetDeviceStruct_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GzGetDeviceStruct_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GzGetDeviceStruct_ * soap_new_req___ns1__GzGetDeviceStruct_(
	struct soap *soap)
{
	struct __ns1__GzGetDeviceStruct_ *_p = ::soap_new___ns1__GzGetDeviceStruct_(soap);
	if (_p)
	{	::soap_default___ns1__GzGetDeviceStruct_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GzGetDeviceStruct_ * soap_new_set___ns1__GzGetDeviceStruct_(
	struct soap *soap,
	_ns1__GzGetDeviceStruct *ns1__GzGetDeviceStruct)
{
	struct __ns1__GzGetDeviceStruct_ *_p = ::soap_new___ns1__GzGetDeviceStruct_(soap);
	if (_p)
	{	::soap_default___ns1__GzGetDeviceStruct_(soap, _p);
		_p->ns1__GzGetDeviceStruct = ns1__GzGetDeviceStruct;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GzGetDeviceStruct_(struct soap*, const struct __ns1__GzGetDeviceStruct_ *, const char*, const char*);

inline int soap_write___ns1__GzGetDeviceStruct_(struct soap *soap, struct __ns1__GzGetDeviceStruct_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GzGetDeviceStruct_(soap, p), 0) || ::soap_put___ns1__GzGetDeviceStruct_(soap, p, "-ns1:GzGetDeviceStruct", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GzGetDeviceStruct_(struct soap *soap, const char *URL, struct __ns1__GzGetDeviceStruct_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetDeviceStruct_(soap, p), 0) || ::soap_put___ns1__GzGetDeviceStruct_(soap, p, "-ns1:GzGetDeviceStruct", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GzGetDeviceStruct_(struct soap *soap, const char *URL, struct __ns1__GzGetDeviceStruct_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetDeviceStruct_(soap, p), 0) || ::soap_put___ns1__GzGetDeviceStruct_(soap, p, "-ns1:GzGetDeviceStruct", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GzGetDeviceStruct_ * SOAP_FMAC4 soap_get___ns1__GzGetDeviceStruct_(struct soap*, struct __ns1__GzGetDeviceStruct_ *, const char*, const char*);

inline int soap_read___ns1__GzGetDeviceStruct_(struct soap *soap, struct __ns1__GzGetDeviceStruct_ *p)
{
	if (p)
	{	::soap_default___ns1__GzGetDeviceStruct_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GzGetDeviceStruct_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GzGetDeviceStruct_(struct soap *soap, const char *URL, struct __ns1__GzGetDeviceStruct_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GzGetDeviceStruct_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GzGetDeviceStruct_(struct soap *soap, struct __ns1__GzGetDeviceStruct_ *p)
{
	if (::soap_read___ns1__GzGetDeviceStruct_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GzGetTypeList__DEFINED
#define SOAP_TYPE___ns1__GzGetTypeList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GzGetTypeList_(struct soap*, struct __ns1__GzGetTypeList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GzGetTypeList_(struct soap*, const struct __ns1__GzGetTypeList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GzGetTypeList_(struct soap*, const char*, int, const struct __ns1__GzGetTypeList_ *, const char*);
SOAP_FMAC3 struct __ns1__GzGetTypeList_ * SOAP_FMAC4 soap_in___ns1__GzGetTypeList_(struct soap*, const char*, struct __ns1__GzGetTypeList_ *, const char*);
SOAP_FMAC1 struct __ns1__GzGetTypeList_ * SOAP_FMAC2 soap_instantiate___ns1__GzGetTypeList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GzGetTypeList_ * soap_new___ns1__GzGetTypeList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GzGetTypeList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GzGetTypeList_ * soap_new_req___ns1__GzGetTypeList_(
	struct soap *soap)
{
	struct __ns1__GzGetTypeList_ *_p = ::soap_new___ns1__GzGetTypeList_(soap);
	if (_p)
	{	::soap_default___ns1__GzGetTypeList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GzGetTypeList_ * soap_new_set___ns1__GzGetTypeList_(
	struct soap *soap,
	_ns1__GzGetTypeList *ns1__GzGetTypeList)
{
	struct __ns1__GzGetTypeList_ *_p = ::soap_new___ns1__GzGetTypeList_(soap);
	if (_p)
	{	::soap_default___ns1__GzGetTypeList_(soap, _p);
		_p->ns1__GzGetTypeList = ns1__GzGetTypeList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GzGetTypeList_(struct soap*, const struct __ns1__GzGetTypeList_ *, const char*, const char*);

inline int soap_write___ns1__GzGetTypeList_(struct soap *soap, struct __ns1__GzGetTypeList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GzGetTypeList_(soap, p), 0) || ::soap_put___ns1__GzGetTypeList_(soap, p, "-ns1:GzGetTypeList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GzGetTypeList_(struct soap *soap, const char *URL, struct __ns1__GzGetTypeList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetTypeList_(soap, p), 0) || ::soap_put___ns1__GzGetTypeList_(soap, p, "-ns1:GzGetTypeList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GzGetTypeList_(struct soap *soap, const char *URL, struct __ns1__GzGetTypeList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetTypeList_(soap, p), 0) || ::soap_put___ns1__GzGetTypeList_(soap, p, "-ns1:GzGetTypeList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GzGetTypeList_ * SOAP_FMAC4 soap_get___ns1__GzGetTypeList_(struct soap*, struct __ns1__GzGetTypeList_ *, const char*, const char*);

inline int soap_read___ns1__GzGetTypeList_(struct soap *soap, struct __ns1__GzGetTypeList_ *p)
{
	if (p)
	{	::soap_default___ns1__GzGetTypeList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GzGetTypeList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GzGetTypeList_(struct soap *soap, const char *URL, struct __ns1__GzGetTypeList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GzGetTypeList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GzGetTypeList_(struct soap *soap, struct __ns1__GzGetTypeList_ *p)
{
	if (::soap_read___ns1__GzGetTypeList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SGCDrawEmf__DEFINED
#define SOAP_TYPE___ns1__SGCDrawEmf__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SGCDrawEmf_(struct soap*, struct __ns1__SGCDrawEmf_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SGCDrawEmf_(struct soap*, const struct __ns1__SGCDrawEmf_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SGCDrawEmf_(struct soap*, const char*, int, const struct __ns1__SGCDrawEmf_ *, const char*);
SOAP_FMAC3 struct __ns1__SGCDrawEmf_ * SOAP_FMAC4 soap_in___ns1__SGCDrawEmf_(struct soap*, const char*, struct __ns1__SGCDrawEmf_ *, const char*);
SOAP_FMAC1 struct __ns1__SGCDrawEmf_ * SOAP_FMAC2 soap_instantiate___ns1__SGCDrawEmf_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SGCDrawEmf_ * soap_new___ns1__SGCDrawEmf_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SGCDrawEmf_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SGCDrawEmf_ * soap_new_req___ns1__SGCDrawEmf_(
	struct soap *soap)
{
	struct __ns1__SGCDrawEmf_ *_p = ::soap_new___ns1__SGCDrawEmf_(soap);
	if (_p)
	{	::soap_default___ns1__SGCDrawEmf_(soap, _p);
	}
	return _p;
}

inline struct __ns1__SGCDrawEmf_ * soap_new_set___ns1__SGCDrawEmf_(
	struct soap *soap,
	_ns1__SGCDrawEmf *ns1__SGCDrawEmf)
{
	struct __ns1__SGCDrawEmf_ *_p = ::soap_new___ns1__SGCDrawEmf_(soap);
	if (_p)
	{	::soap_default___ns1__SGCDrawEmf_(soap, _p);
		_p->ns1__SGCDrawEmf = ns1__SGCDrawEmf;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SGCDrawEmf_(struct soap*, const struct __ns1__SGCDrawEmf_ *, const char*, const char*);

inline int soap_write___ns1__SGCDrawEmf_(struct soap *soap, struct __ns1__SGCDrawEmf_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SGCDrawEmf_(soap, p), 0) || ::soap_put___ns1__SGCDrawEmf_(soap, p, "-ns1:SGCDrawEmf", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SGCDrawEmf_(struct soap *soap, const char *URL, struct __ns1__SGCDrawEmf_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SGCDrawEmf_(soap, p), 0) || ::soap_put___ns1__SGCDrawEmf_(soap, p, "-ns1:SGCDrawEmf", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SGCDrawEmf_(struct soap *soap, const char *URL, struct __ns1__SGCDrawEmf_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SGCDrawEmf_(soap, p), 0) || ::soap_put___ns1__SGCDrawEmf_(soap, p, "-ns1:SGCDrawEmf", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SGCDrawEmf_ * SOAP_FMAC4 soap_get___ns1__SGCDrawEmf_(struct soap*, struct __ns1__SGCDrawEmf_ *, const char*, const char*);

inline int soap_read___ns1__SGCDrawEmf_(struct soap *soap, struct __ns1__SGCDrawEmf_ *p)
{
	if (p)
	{	::soap_default___ns1__SGCDrawEmf_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SGCDrawEmf_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SGCDrawEmf_(struct soap *soap, const char *URL, struct __ns1__SGCDrawEmf_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SGCDrawEmf_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SGCDrawEmf_(struct soap *soap, struct __ns1__SGCDrawEmf_ *p)
{
	if (::soap_read___ns1__SGCDrawEmf_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__FlowChartEmf__DEFINED
#define SOAP_TYPE___ns1__FlowChartEmf__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__FlowChartEmf_(struct soap*, struct __ns1__FlowChartEmf_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__FlowChartEmf_(struct soap*, const struct __ns1__FlowChartEmf_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__FlowChartEmf_(struct soap*, const char*, int, const struct __ns1__FlowChartEmf_ *, const char*);
SOAP_FMAC3 struct __ns1__FlowChartEmf_ * SOAP_FMAC4 soap_in___ns1__FlowChartEmf_(struct soap*, const char*, struct __ns1__FlowChartEmf_ *, const char*);
SOAP_FMAC1 struct __ns1__FlowChartEmf_ * SOAP_FMAC2 soap_instantiate___ns1__FlowChartEmf_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__FlowChartEmf_ * soap_new___ns1__FlowChartEmf_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__FlowChartEmf_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__FlowChartEmf_ * soap_new_req___ns1__FlowChartEmf_(
	struct soap *soap)
{
	struct __ns1__FlowChartEmf_ *_p = ::soap_new___ns1__FlowChartEmf_(soap);
	if (_p)
	{	::soap_default___ns1__FlowChartEmf_(soap, _p);
	}
	return _p;
}

inline struct __ns1__FlowChartEmf_ * soap_new_set___ns1__FlowChartEmf_(
	struct soap *soap,
	_ns1__FlowChartEmf *ns1__FlowChartEmf)
{
	struct __ns1__FlowChartEmf_ *_p = ::soap_new___ns1__FlowChartEmf_(soap);
	if (_p)
	{	::soap_default___ns1__FlowChartEmf_(soap, _p);
		_p->ns1__FlowChartEmf = ns1__FlowChartEmf;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__FlowChartEmf_(struct soap*, const struct __ns1__FlowChartEmf_ *, const char*, const char*);

inline int soap_write___ns1__FlowChartEmf_(struct soap *soap, struct __ns1__FlowChartEmf_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__FlowChartEmf_(soap, p), 0) || ::soap_put___ns1__FlowChartEmf_(soap, p, "-ns1:FlowChartEmf", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__FlowChartEmf_(struct soap *soap, const char *URL, struct __ns1__FlowChartEmf_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__FlowChartEmf_(soap, p), 0) || ::soap_put___ns1__FlowChartEmf_(soap, p, "-ns1:FlowChartEmf", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__FlowChartEmf_(struct soap *soap, const char *URL, struct __ns1__FlowChartEmf_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__FlowChartEmf_(soap, p), 0) || ::soap_put___ns1__FlowChartEmf_(soap, p, "-ns1:FlowChartEmf", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__FlowChartEmf_ * SOAP_FMAC4 soap_get___ns1__FlowChartEmf_(struct soap*, struct __ns1__FlowChartEmf_ *, const char*, const char*);

inline int soap_read___ns1__FlowChartEmf_(struct soap *soap, struct __ns1__FlowChartEmf_ *p)
{
	if (p)
	{	::soap_default___ns1__FlowChartEmf_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__FlowChartEmf_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__FlowChartEmf_(struct soap *soap, const char *URL, struct __ns1__FlowChartEmf_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__FlowChartEmf_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__FlowChartEmf_(struct soap *soap, struct __ns1__FlowChartEmf_ *p)
{
	if (::soap_read___ns1__FlowChartEmf_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetZhouQi__DEFINED
#define SOAP_TYPE___ns1__GetZhouQi__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetZhouQi_(struct soap*, struct __ns1__GetZhouQi_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetZhouQi_(struct soap*, const struct __ns1__GetZhouQi_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetZhouQi_(struct soap*, const char*, int, const struct __ns1__GetZhouQi_ *, const char*);
SOAP_FMAC3 struct __ns1__GetZhouQi_ * SOAP_FMAC4 soap_in___ns1__GetZhouQi_(struct soap*, const char*, struct __ns1__GetZhouQi_ *, const char*);
SOAP_FMAC1 struct __ns1__GetZhouQi_ * SOAP_FMAC2 soap_instantiate___ns1__GetZhouQi_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetZhouQi_ * soap_new___ns1__GetZhouQi_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetZhouQi_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetZhouQi_ * soap_new_req___ns1__GetZhouQi_(
	struct soap *soap)
{
	struct __ns1__GetZhouQi_ *_p = ::soap_new___ns1__GetZhouQi_(soap);
	if (_p)
	{	::soap_default___ns1__GetZhouQi_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetZhouQi_ * soap_new_set___ns1__GetZhouQi_(
	struct soap *soap,
	_ns1__GetZhouQi *ns1__GetZhouQi)
{
	struct __ns1__GetZhouQi_ *_p = ::soap_new___ns1__GetZhouQi_(soap);
	if (_p)
	{	::soap_default___ns1__GetZhouQi_(soap, _p);
		_p->ns1__GetZhouQi = ns1__GetZhouQi;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetZhouQi_(struct soap*, const struct __ns1__GetZhouQi_ *, const char*, const char*);

inline int soap_write___ns1__GetZhouQi_(struct soap *soap, struct __ns1__GetZhouQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetZhouQi_(soap, p), 0) || ::soap_put___ns1__GetZhouQi_(soap, p, "-ns1:GetZhouQi", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetZhouQi_(struct soap *soap, const char *URL, struct __ns1__GetZhouQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetZhouQi_(soap, p), 0) || ::soap_put___ns1__GetZhouQi_(soap, p, "-ns1:GetZhouQi", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetZhouQi_(struct soap *soap, const char *URL, struct __ns1__GetZhouQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetZhouQi_(soap, p), 0) || ::soap_put___ns1__GetZhouQi_(soap, p, "-ns1:GetZhouQi", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetZhouQi_ * SOAP_FMAC4 soap_get___ns1__GetZhouQi_(struct soap*, struct __ns1__GetZhouQi_ *, const char*, const char*);

inline int soap_read___ns1__GetZhouQi_(struct soap *soap, struct __ns1__GetZhouQi_ *p)
{
	if (p)
	{	::soap_default___ns1__GetZhouQi_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetZhouQi_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetZhouQi_(struct soap *soap, const char *URL, struct __ns1__GetZhouQi_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetZhouQi_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetZhouQi_(struct soap *soap, struct __ns1__GetZhouQi_ *p)
{
	if (::soap_read___ns1__GetZhouQi_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__JiChaoQi__DEFINED
#define SOAP_TYPE___ns1__JiChaoQi__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__JiChaoQi_(struct soap*, struct __ns1__JiChaoQi_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__JiChaoQi_(struct soap*, const struct __ns1__JiChaoQi_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__JiChaoQi_(struct soap*, const char*, int, const struct __ns1__JiChaoQi_ *, const char*);
SOAP_FMAC3 struct __ns1__JiChaoQi_ * SOAP_FMAC4 soap_in___ns1__JiChaoQi_(struct soap*, const char*, struct __ns1__JiChaoQi_ *, const char*);
SOAP_FMAC1 struct __ns1__JiChaoQi_ * SOAP_FMAC2 soap_instantiate___ns1__JiChaoQi_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__JiChaoQi_ * soap_new___ns1__JiChaoQi_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__JiChaoQi_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__JiChaoQi_ * soap_new_req___ns1__JiChaoQi_(
	struct soap *soap)
{
	struct __ns1__JiChaoQi_ *_p = ::soap_new___ns1__JiChaoQi_(soap);
	if (_p)
	{	::soap_default___ns1__JiChaoQi_(soap, _p);
	}
	return _p;
}

inline struct __ns1__JiChaoQi_ * soap_new_set___ns1__JiChaoQi_(
	struct soap *soap,
	_ns1__JiChaoQi *ns1__JiChaoQi)
{
	struct __ns1__JiChaoQi_ *_p = ::soap_new___ns1__JiChaoQi_(soap);
	if (_p)
	{	::soap_default___ns1__JiChaoQi_(soap, _p);
		_p->ns1__JiChaoQi = ns1__JiChaoQi;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__JiChaoQi_(struct soap*, const struct __ns1__JiChaoQi_ *, const char*, const char*);

inline int soap_write___ns1__JiChaoQi_(struct soap *soap, struct __ns1__JiChaoQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__JiChaoQi_(soap, p), 0) || ::soap_put___ns1__JiChaoQi_(soap, p, "-ns1:JiChaoQi", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__JiChaoQi_(struct soap *soap, const char *URL, struct __ns1__JiChaoQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__JiChaoQi_(soap, p), 0) || ::soap_put___ns1__JiChaoQi_(soap, p, "-ns1:JiChaoQi", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__JiChaoQi_(struct soap *soap, const char *URL, struct __ns1__JiChaoQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__JiChaoQi_(soap, p), 0) || ::soap_put___ns1__JiChaoQi_(soap, p, "-ns1:JiChaoQi", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__JiChaoQi_ * SOAP_FMAC4 soap_get___ns1__JiChaoQi_(struct soap*, struct __ns1__JiChaoQi_ *, const char*, const char*);

inline int soap_read___ns1__JiChaoQi_(struct soap *soap, struct __ns1__JiChaoQi_ *p)
{
	if (p)
	{	::soap_default___ns1__JiChaoQi_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__JiChaoQi_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__JiChaoQi_(struct soap *soap, const char *URL, struct __ns1__JiChaoQi_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__JiChaoQi_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__JiChaoQi_(struct soap *soap, struct __ns1__JiChaoQi_ *p)
{
	if (::soap_read___ns1__JiChaoQi_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ChaoQi__DEFINED
#define SOAP_TYPE___ns1__ChaoQi__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChaoQi_(struct soap*, struct __ns1__ChaoQi_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChaoQi_(struct soap*, const struct __ns1__ChaoQi_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChaoQi_(struct soap*, const char*, int, const struct __ns1__ChaoQi_ *, const char*);
SOAP_FMAC3 struct __ns1__ChaoQi_ * SOAP_FMAC4 soap_in___ns1__ChaoQi_(struct soap*, const char*, struct __ns1__ChaoQi_ *, const char*);
SOAP_FMAC1 struct __ns1__ChaoQi_ * SOAP_FMAC2 soap_instantiate___ns1__ChaoQi_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChaoQi_ * soap_new___ns1__ChaoQi_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChaoQi_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChaoQi_ * soap_new_req___ns1__ChaoQi_(
	struct soap *soap)
{
	struct __ns1__ChaoQi_ *_p = ::soap_new___ns1__ChaoQi_(soap);
	if (_p)
	{	::soap_default___ns1__ChaoQi_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChaoQi_ * soap_new_set___ns1__ChaoQi_(
	struct soap *soap,
	_ns1__ChaoQi *ns1__ChaoQi)
{
	struct __ns1__ChaoQi_ *_p = ::soap_new___ns1__ChaoQi_(soap);
	if (_p)
	{	::soap_default___ns1__ChaoQi_(soap, _p);
		_p->ns1__ChaoQi = ns1__ChaoQi;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChaoQi_(struct soap*, const struct __ns1__ChaoQi_ *, const char*, const char*);

inline int soap_write___ns1__ChaoQi_(struct soap *soap, struct __ns1__ChaoQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChaoQi_(soap, p), 0) || ::soap_put___ns1__ChaoQi_(soap, p, "-ns1:ChaoQi", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChaoQi_(struct soap *soap, const char *URL, struct __ns1__ChaoQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChaoQi_(soap, p), 0) || ::soap_put___ns1__ChaoQi_(soap, p, "-ns1:ChaoQi", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChaoQi_(struct soap *soap, const char *URL, struct __ns1__ChaoQi_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChaoQi_(soap, p), 0) || ::soap_put___ns1__ChaoQi_(soap, p, "-ns1:ChaoQi", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChaoQi_ * SOAP_FMAC4 soap_get___ns1__ChaoQi_(struct soap*, struct __ns1__ChaoQi_ *, const char*, const char*);

inline int soap_read___ns1__ChaoQi_(struct soap *soap, struct __ns1__ChaoQi_ *p)
{
	if (p)
	{	::soap_default___ns1__ChaoQi_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChaoQi_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChaoQi_(struct soap *soap, const char *URL, struct __ns1__ChaoQi_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChaoQi_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ChaoQi_(struct soap *soap, struct __ns1__ChaoQi_ *p)
{
	if (::soap_read___ns1__ChaoQi_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__OpenMapExe__DEFINED
#define SOAP_TYPE___ns1__OpenMapExe__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__OpenMapExe_(struct soap*, struct __ns1__OpenMapExe_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__OpenMapExe_(struct soap*, const struct __ns1__OpenMapExe_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__OpenMapExe_(struct soap*, const char*, int, const struct __ns1__OpenMapExe_ *, const char*);
SOAP_FMAC3 struct __ns1__OpenMapExe_ * SOAP_FMAC4 soap_in___ns1__OpenMapExe_(struct soap*, const char*, struct __ns1__OpenMapExe_ *, const char*);
SOAP_FMAC1 struct __ns1__OpenMapExe_ * SOAP_FMAC2 soap_instantiate___ns1__OpenMapExe_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__OpenMapExe_ * soap_new___ns1__OpenMapExe_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__OpenMapExe_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__OpenMapExe_ * soap_new_req___ns1__OpenMapExe_(
	struct soap *soap)
{
	struct __ns1__OpenMapExe_ *_p = ::soap_new___ns1__OpenMapExe_(soap);
	if (_p)
	{	::soap_default___ns1__OpenMapExe_(soap, _p);
	}
	return _p;
}

inline struct __ns1__OpenMapExe_ * soap_new_set___ns1__OpenMapExe_(
	struct soap *soap,
	_ns1__OpenMapExe *ns1__OpenMapExe)
{
	struct __ns1__OpenMapExe_ *_p = ::soap_new___ns1__OpenMapExe_(soap);
	if (_p)
	{	::soap_default___ns1__OpenMapExe_(soap, _p);
		_p->ns1__OpenMapExe = ns1__OpenMapExe;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__OpenMapExe_(struct soap*, const struct __ns1__OpenMapExe_ *, const char*, const char*);

inline int soap_write___ns1__OpenMapExe_(struct soap *soap, struct __ns1__OpenMapExe_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__OpenMapExe_(soap, p), 0) || ::soap_put___ns1__OpenMapExe_(soap, p, "-ns1:OpenMapExe", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__OpenMapExe_(struct soap *soap, const char *URL, struct __ns1__OpenMapExe_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenMapExe_(soap, p), 0) || ::soap_put___ns1__OpenMapExe_(soap, p, "-ns1:OpenMapExe", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__OpenMapExe_(struct soap *soap, const char *URL, struct __ns1__OpenMapExe_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenMapExe_(soap, p), 0) || ::soap_put___ns1__OpenMapExe_(soap, p, "-ns1:OpenMapExe", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__OpenMapExe_ * SOAP_FMAC4 soap_get___ns1__OpenMapExe_(struct soap*, struct __ns1__OpenMapExe_ *, const char*, const char*);

inline int soap_read___ns1__OpenMapExe_(struct soap *soap, struct __ns1__OpenMapExe_ *p)
{
	if (p)
	{	::soap_default___ns1__OpenMapExe_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__OpenMapExe_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__OpenMapExe_(struct soap *soap, const char *URL, struct __ns1__OpenMapExe_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__OpenMapExe_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__OpenMapExe_(struct soap *soap, struct __ns1__OpenMapExe_ *p)
{
	if (::soap_read___ns1__OpenMapExe_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetEmfPngFile__DEFINED
#define SOAP_TYPE___ns1__GetEmfPngFile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetEmfPngFile_(struct soap*, struct __ns1__GetEmfPngFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetEmfPngFile_(struct soap*, const struct __ns1__GetEmfPngFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetEmfPngFile_(struct soap*, const char*, int, const struct __ns1__GetEmfPngFile_ *, const char*);
SOAP_FMAC3 struct __ns1__GetEmfPngFile_ * SOAP_FMAC4 soap_in___ns1__GetEmfPngFile_(struct soap*, const char*, struct __ns1__GetEmfPngFile_ *, const char*);
SOAP_FMAC1 struct __ns1__GetEmfPngFile_ * SOAP_FMAC2 soap_instantiate___ns1__GetEmfPngFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetEmfPngFile_ * soap_new___ns1__GetEmfPngFile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetEmfPngFile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetEmfPngFile_ * soap_new_req___ns1__GetEmfPngFile_(
	struct soap *soap)
{
	struct __ns1__GetEmfPngFile_ *_p = ::soap_new___ns1__GetEmfPngFile_(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngFile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetEmfPngFile_ * soap_new_set___ns1__GetEmfPngFile_(
	struct soap *soap,
	_ns1__GetEmfPngFile *ns1__GetEmfPngFile)
{
	struct __ns1__GetEmfPngFile_ *_p = ::soap_new___ns1__GetEmfPngFile_(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngFile_(soap, _p);
		_p->ns1__GetEmfPngFile = ns1__GetEmfPngFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetEmfPngFile_(struct soap*, const struct __ns1__GetEmfPngFile_ *, const char*, const char*);

inline int soap_write___ns1__GetEmfPngFile_(struct soap *soap, struct __ns1__GetEmfPngFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetEmfPngFile_(soap, p), 0) || ::soap_put___ns1__GetEmfPngFile_(soap, p, "-ns1:GetEmfPngFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetEmfPngFile_(struct soap *soap, const char *URL, struct __ns1__GetEmfPngFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngFile_(soap, p), 0) || ::soap_put___ns1__GetEmfPngFile_(soap, p, "-ns1:GetEmfPngFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetEmfPngFile_(struct soap *soap, const char *URL, struct __ns1__GetEmfPngFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngFile_(soap, p), 0) || ::soap_put___ns1__GetEmfPngFile_(soap, p, "-ns1:GetEmfPngFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetEmfPngFile_ * SOAP_FMAC4 soap_get___ns1__GetEmfPngFile_(struct soap*, struct __ns1__GetEmfPngFile_ *, const char*, const char*);

inline int soap_read___ns1__GetEmfPngFile_(struct soap *soap, struct __ns1__GetEmfPngFile_ *p)
{
	if (p)
	{	::soap_default___ns1__GetEmfPngFile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetEmfPngFile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetEmfPngFile_(struct soap *soap, const char *URL, struct __ns1__GetEmfPngFile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetEmfPngFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetEmfPngFile_(struct soap *soap, struct __ns1__GetEmfPngFile_ *p)
{
	if (::soap_read___ns1__GetEmfPngFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetEmfPngVer__DEFINED
#define SOAP_TYPE___ns1__GetEmfPngVer__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetEmfPngVer_(struct soap*, struct __ns1__GetEmfPngVer_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetEmfPngVer_(struct soap*, const struct __ns1__GetEmfPngVer_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetEmfPngVer_(struct soap*, const char*, int, const struct __ns1__GetEmfPngVer_ *, const char*);
SOAP_FMAC3 struct __ns1__GetEmfPngVer_ * SOAP_FMAC4 soap_in___ns1__GetEmfPngVer_(struct soap*, const char*, struct __ns1__GetEmfPngVer_ *, const char*);
SOAP_FMAC1 struct __ns1__GetEmfPngVer_ * SOAP_FMAC2 soap_instantiate___ns1__GetEmfPngVer_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetEmfPngVer_ * soap_new___ns1__GetEmfPngVer_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetEmfPngVer_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetEmfPngVer_ * soap_new_req___ns1__GetEmfPngVer_(
	struct soap *soap)
{
	struct __ns1__GetEmfPngVer_ *_p = ::soap_new___ns1__GetEmfPngVer_(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngVer_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetEmfPngVer_ * soap_new_set___ns1__GetEmfPngVer_(
	struct soap *soap,
	_ns1__GetEmfPngVer *ns1__GetEmfPngVer)
{
	struct __ns1__GetEmfPngVer_ *_p = ::soap_new___ns1__GetEmfPngVer_(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngVer_(soap, _p);
		_p->ns1__GetEmfPngVer = ns1__GetEmfPngVer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetEmfPngVer_(struct soap*, const struct __ns1__GetEmfPngVer_ *, const char*, const char*);

inline int soap_write___ns1__GetEmfPngVer_(struct soap *soap, struct __ns1__GetEmfPngVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetEmfPngVer_(soap, p), 0) || ::soap_put___ns1__GetEmfPngVer_(soap, p, "-ns1:GetEmfPngVer", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetEmfPngVer_(struct soap *soap, const char *URL, struct __ns1__GetEmfPngVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngVer_(soap, p), 0) || ::soap_put___ns1__GetEmfPngVer_(soap, p, "-ns1:GetEmfPngVer", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetEmfPngVer_(struct soap *soap, const char *URL, struct __ns1__GetEmfPngVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngVer_(soap, p), 0) || ::soap_put___ns1__GetEmfPngVer_(soap, p, "-ns1:GetEmfPngVer", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetEmfPngVer_ * SOAP_FMAC4 soap_get___ns1__GetEmfPngVer_(struct soap*, struct __ns1__GetEmfPngVer_ *, const char*, const char*);

inline int soap_read___ns1__GetEmfPngVer_(struct soap *soap, struct __ns1__GetEmfPngVer_ *p)
{
	if (p)
	{	::soap_default___ns1__GetEmfPngVer_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetEmfPngVer_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetEmfPngVer_(struct soap *soap, const char *URL, struct __ns1__GetEmfPngVer_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetEmfPngVer_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetEmfPngVer_(struct soap *soap, struct __ns1__GetEmfPngVer_ *p)
{
	if (::soap_read___ns1__GetEmfPngVer_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__OpenProcess__DEFINED
#define SOAP_TYPE___ns1__OpenProcess__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__OpenProcess_(struct soap*, struct __ns1__OpenProcess_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__OpenProcess_(struct soap*, const struct __ns1__OpenProcess_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__OpenProcess_(struct soap*, const char*, int, const struct __ns1__OpenProcess_ *, const char*);
SOAP_FMAC3 struct __ns1__OpenProcess_ * SOAP_FMAC4 soap_in___ns1__OpenProcess_(struct soap*, const char*, struct __ns1__OpenProcess_ *, const char*);
SOAP_FMAC1 struct __ns1__OpenProcess_ * SOAP_FMAC2 soap_instantiate___ns1__OpenProcess_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__OpenProcess_ * soap_new___ns1__OpenProcess_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__OpenProcess_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__OpenProcess_ * soap_new_req___ns1__OpenProcess_(
	struct soap *soap)
{
	struct __ns1__OpenProcess_ *_p = ::soap_new___ns1__OpenProcess_(soap);
	if (_p)
	{	::soap_default___ns1__OpenProcess_(soap, _p);
	}
	return _p;
}

inline struct __ns1__OpenProcess_ * soap_new_set___ns1__OpenProcess_(
	struct soap *soap,
	_ns1__OpenProcess *ns1__OpenProcess)
{
	struct __ns1__OpenProcess_ *_p = ::soap_new___ns1__OpenProcess_(soap);
	if (_p)
	{	::soap_default___ns1__OpenProcess_(soap, _p);
		_p->ns1__OpenProcess = ns1__OpenProcess;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__OpenProcess_(struct soap*, const struct __ns1__OpenProcess_ *, const char*, const char*);

inline int soap_write___ns1__OpenProcess_(struct soap *soap, struct __ns1__OpenProcess_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__OpenProcess_(soap, p), 0) || ::soap_put___ns1__OpenProcess_(soap, p, "-ns1:OpenProcess", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__OpenProcess_(struct soap *soap, const char *URL, struct __ns1__OpenProcess_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenProcess_(soap, p), 0) || ::soap_put___ns1__OpenProcess_(soap, p, "-ns1:OpenProcess", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__OpenProcess_(struct soap *soap, const char *URL, struct __ns1__OpenProcess_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenProcess_(soap, p), 0) || ::soap_put___ns1__OpenProcess_(soap, p, "-ns1:OpenProcess", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__OpenProcess_ * SOAP_FMAC4 soap_get___ns1__OpenProcess_(struct soap*, struct __ns1__OpenProcess_ *, const char*, const char*);

inline int soap_read___ns1__OpenProcess_(struct soap *soap, struct __ns1__OpenProcess_ *p)
{
	if (p)
	{	::soap_default___ns1__OpenProcess_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__OpenProcess_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__OpenProcess_(struct soap *soap, const char *URL, struct __ns1__OpenProcess_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__OpenProcess_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__OpenProcess_(struct soap *soap, struct __ns1__OpenProcess_ *p)
{
	if (::soap_read___ns1__OpenProcess_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMangeMapUpdate__DEFINED
#define SOAP_TYPE___ns1__GetMangeMapUpdate__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMangeMapUpdate_(struct soap*, struct __ns1__GetMangeMapUpdate_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMangeMapUpdate_(struct soap*, const struct __ns1__GetMangeMapUpdate_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMangeMapUpdate_(struct soap*, const char*, int, const struct __ns1__GetMangeMapUpdate_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMangeMapUpdate_ * SOAP_FMAC4 soap_in___ns1__GetMangeMapUpdate_(struct soap*, const char*, struct __ns1__GetMangeMapUpdate_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMangeMapUpdate_ * SOAP_FMAC2 soap_instantiate___ns1__GetMangeMapUpdate_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMangeMapUpdate_ * soap_new___ns1__GetMangeMapUpdate_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMangeMapUpdate_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMangeMapUpdate_ * soap_new_req___ns1__GetMangeMapUpdate_(
	struct soap *soap)
{
	struct __ns1__GetMangeMapUpdate_ *_p = ::soap_new___ns1__GetMangeMapUpdate_(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeMapUpdate_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMangeMapUpdate_ * soap_new_set___ns1__GetMangeMapUpdate_(
	struct soap *soap,
	_ns1__GetMangeMapUpdate *ns1__GetMangeMapUpdate)
{
	struct __ns1__GetMangeMapUpdate_ *_p = ::soap_new___ns1__GetMangeMapUpdate_(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeMapUpdate_(soap, _p);
		_p->ns1__GetMangeMapUpdate = ns1__GetMangeMapUpdate;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMangeMapUpdate_(struct soap*, const struct __ns1__GetMangeMapUpdate_ *, const char*, const char*);

inline int soap_write___ns1__GetMangeMapUpdate_(struct soap *soap, struct __ns1__GetMangeMapUpdate_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMangeMapUpdate_(soap, p), 0) || ::soap_put___ns1__GetMangeMapUpdate_(soap, p, "-ns1:GetMangeMapUpdate", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMangeMapUpdate_(struct soap *soap, const char *URL, struct __ns1__GetMangeMapUpdate_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeMapUpdate_(soap, p), 0) || ::soap_put___ns1__GetMangeMapUpdate_(soap, p, "-ns1:GetMangeMapUpdate", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMangeMapUpdate_(struct soap *soap, const char *URL, struct __ns1__GetMangeMapUpdate_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeMapUpdate_(soap, p), 0) || ::soap_put___ns1__GetMangeMapUpdate_(soap, p, "-ns1:GetMangeMapUpdate", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMangeMapUpdate_ * SOAP_FMAC4 soap_get___ns1__GetMangeMapUpdate_(struct soap*, struct __ns1__GetMangeMapUpdate_ *, const char*, const char*);

inline int soap_read___ns1__GetMangeMapUpdate_(struct soap *soap, struct __ns1__GetMangeMapUpdate_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMangeMapUpdate_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMangeMapUpdate_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMangeMapUpdate_(struct soap *soap, const char *URL, struct __ns1__GetMangeMapUpdate_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMangeMapUpdate_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMangeMapUpdate_(struct soap *soap, struct __ns1__GetMangeMapUpdate_ *p)
{
	if (::soap_read___ns1__GetMangeMapUpdate_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitMapVer__DEFINED
#define SOAP_TYPE___ns1__GetUnitMapVer__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitMapVer_(struct soap*, struct __ns1__GetUnitMapVer_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitMapVer_(struct soap*, const struct __ns1__GetUnitMapVer_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitMapVer_(struct soap*, const char*, int, const struct __ns1__GetUnitMapVer_ *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitMapVer_ * SOAP_FMAC4 soap_in___ns1__GetUnitMapVer_(struct soap*, const char*, struct __ns1__GetUnitMapVer_ *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitMapVer_ * SOAP_FMAC2 soap_instantiate___ns1__GetUnitMapVer_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitMapVer_ * soap_new___ns1__GetUnitMapVer_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitMapVer_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitMapVer_ * soap_new_req___ns1__GetUnitMapVer_(
	struct soap *soap)
{
	struct __ns1__GetUnitMapVer_ *_p = ::soap_new___ns1__GetUnitMapVer_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitMapVer_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitMapVer_ * soap_new_set___ns1__GetUnitMapVer_(
	struct soap *soap,
	_ns1__GetUnitMapVer *ns1__GetUnitMapVer)
{
	struct __ns1__GetUnitMapVer_ *_p = ::soap_new___ns1__GetUnitMapVer_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitMapVer_(soap, _p);
		_p->ns1__GetUnitMapVer = ns1__GetUnitMapVer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitMapVer_(struct soap*, const struct __ns1__GetUnitMapVer_ *, const char*, const char*);

inline int soap_write___ns1__GetUnitMapVer_(struct soap *soap, struct __ns1__GetUnitMapVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitMapVer_(soap, p), 0) || ::soap_put___ns1__GetUnitMapVer_(soap, p, "-ns1:GetUnitMapVer", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitMapVer_(struct soap *soap, const char *URL, struct __ns1__GetUnitMapVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitMapVer_(soap, p), 0) || ::soap_put___ns1__GetUnitMapVer_(soap, p, "-ns1:GetUnitMapVer", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitMapVer_(struct soap *soap, const char *URL, struct __ns1__GetUnitMapVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitMapVer_(soap, p), 0) || ::soap_put___ns1__GetUnitMapVer_(soap, p, "-ns1:GetUnitMapVer", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitMapVer_ * SOAP_FMAC4 soap_get___ns1__GetUnitMapVer_(struct soap*, struct __ns1__GetUnitMapVer_ *, const char*, const char*);

inline int soap_read___ns1__GetUnitMapVer_(struct soap *soap, struct __ns1__GetUnitMapVer_ *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitMapVer_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitMapVer_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitMapVer_(struct soap *soap, const char *URL, struct __ns1__GetUnitMapVer_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitMapVer_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitMapVer_(struct soap *soap, struct __ns1__GetUnitMapVer_ *p)
{
	if (::soap_read___ns1__GetUnitMapVer_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__UpdateGzclMap__DEFINED
#define SOAP_TYPE___ns1__UpdateGzclMap__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateGzclMap_(struct soap*, struct __ns1__UpdateGzclMap_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateGzclMap_(struct soap*, const struct __ns1__UpdateGzclMap_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateGzclMap_(struct soap*, const char*, int, const struct __ns1__UpdateGzclMap_ *, const char*);
SOAP_FMAC3 struct __ns1__UpdateGzclMap_ * SOAP_FMAC4 soap_in___ns1__UpdateGzclMap_(struct soap*, const char*, struct __ns1__UpdateGzclMap_ *, const char*);
SOAP_FMAC1 struct __ns1__UpdateGzclMap_ * SOAP_FMAC2 soap_instantiate___ns1__UpdateGzclMap_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateGzclMap_ * soap_new___ns1__UpdateGzclMap_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__UpdateGzclMap_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__UpdateGzclMap_ * soap_new_req___ns1__UpdateGzclMap_(
	struct soap *soap)
{
	struct __ns1__UpdateGzclMap_ *_p = ::soap_new___ns1__UpdateGzclMap_(soap);
	if (_p)
	{	::soap_default___ns1__UpdateGzclMap_(soap, _p);
	}
	return _p;
}

inline struct __ns1__UpdateGzclMap_ * soap_new_set___ns1__UpdateGzclMap_(
	struct soap *soap,
	_ns1__UpdateGzclMap *ns1__UpdateGzclMap)
{
	struct __ns1__UpdateGzclMap_ *_p = ::soap_new___ns1__UpdateGzclMap_(soap);
	if (_p)
	{	::soap_default___ns1__UpdateGzclMap_(soap, _p);
		_p->ns1__UpdateGzclMap = ns1__UpdateGzclMap;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateGzclMap_(struct soap*, const struct __ns1__UpdateGzclMap_ *, const char*, const char*);

inline int soap_write___ns1__UpdateGzclMap_(struct soap *soap, struct __ns1__UpdateGzclMap_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__UpdateGzclMap_(soap, p), 0) || ::soap_put___ns1__UpdateGzclMap_(soap, p, "-ns1:UpdateGzclMap", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__UpdateGzclMap_(struct soap *soap, const char *URL, struct __ns1__UpdateGzclMap_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpdateGzclMap_(soap, p), 0) || ::soap_put___ns1__UpdateGzclMap_(soap, p, "-ns1:UpdateGzclMap", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__UpdateGzclMap_(struct soap *soap, const char *URL, struct __ns1__UpdateGzclMap_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpdateGzclMap_(soap, p), 0) || ::soap_put___ns1__UpdateGzclMap_(soap, p, "-ns1:UpdateGzclMap", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__UpdateGzclMap_ * SOAP_FMAC4 soap_get___ns1__UpdateGzclMap_(struct soap*, struct __ns1__UpdateGzclMap_ *, const char*, const char*);

inline int soap_read___ns1__UpdateGzclMap_(struct soap *soap, struct __ns1__UpdateGzclMap_ *p)
{
	if (p)
	{	::soap_default___ns1__UpdateGzclMap_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__UpdateGzclMap_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__UpdateGzclMap_(struct soap *soap, const char *URL, struct __ns1__UpdateGzclMap_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__UpdateGzclMap_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__UpdateGzclMap_(struct soap *soap, struct __ns1__UpdateGzclMap_ *p)
{
	if (::soap_read___ns1__UpdateGzclMap_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapListTime__DEFINED
#define SOAP_TYPE___ns1__GetMapListTime__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapListTime_(struct soap*, struct __ns1__GetMapListTime_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapListTime_(struct soap*, const struct __ns1__GetMapListTime_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapListTime_(struct soap*, const char*, int, const struct __ns1__GetMapListTime_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMapListTime_ * SOAP_FMAC4 soap_in___ns1__GetMapListTime_(struct soap*, const char*, struct __ns1__GetMapListTime_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMapListTime_ * SOAP_FMAC2 soap_instantiate___ns1__GetMapListTime_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapListTime_ * soap_new___ns1__GetMapListTime_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapListTime_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapListTime_ * soap_new_req___ns1__GetMapListTime_(
	struct soap *soap)
{
	struct __ns1__GetMapListTime_ *_p = ::soap_new___ns1__GetMapListTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapListTime_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapListTime_ * soap_new_set___ns1__GetMapListTime_(
	struct soap *soap,
	_ns1__GetMapListTime *ns1__GetMapListTime)
{
	struct __ns1__GetMapListTime_ *_p = ::soap_new___ns1__GetMapListTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapListTime_(soap, _p);
		_p->ns1__GetMapListTime = ns1__GetMapListTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapListTime_(struct soap*, const struct __ns1__GetMapListTime_ *, const char*, const char*);

inline int soap_write___ns1__GetMapListTime_(struct soap *soap, struct __ns1__GetMapListTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapListTime_(soap, p), 0) || ::soap_put___ns1__GetMapListTime_(soap, p, "-ns1:GetMapListTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapListTime_(struct soap *soap, const char *URL, struct __ns1__GetMapListTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapListTime_(soap, p), 0) || ::soap_put___ns1__GetMapListTime_(soap, p, "-ns1:GetMapListTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapListTime_(struct soap *soap, const char *URL, struct __ns1__GetMapListTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapListTime_(soap, p), 0) || ::soap_put___ns1__GetMapListTime_(soap, p, "-ns1:GetMapListTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapListTime_ * SOAP_FMAC4 soap_get___ns1__GetMapListTime_(struct soap*, struct __ns1__GetMapListTime_ *, const char*, const char*);

inline int soap_read___ns1__GetMapListTime_(struct soap *soap, struct __ns1__GetMapListTime_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMapListTime_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapListTime_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapListTime_(struct soap *soap, const char *URL, struct __ns1__GetMapListTime_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapListTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapListTime_(struct soap *soap, struct __ns1__GetMapListTime_ *p)
{
	if (::soap_read___ns1__GetMapListTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ServerLevel__DEFINED
#define SOAP_TYPE___ns1__ServerLevel__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ServerLevel_(struct soap*, struct __ns1__ServerLevel_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ServerLevel_(struct soap*, const struct __ns1__ServerLevel_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ServerLevel_(struct soap*, const char*, int, const struct __ns1__ServerLevel_ *, const char*);
SOAP_FMAC3 struct __ns1__ServerLevel_ * SOAP_FMAC4 soap_in___ns1__ServerLevel_(struct soap*, const char*, struct __ns1__ServerLevel_ *, const char*);
SOAP_FMAC1 struct __ns1__ServerLevel_ * SOAP_FMAC2 soap_instantiate___ns1__ServerLevel_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ServerLevel_ * soap_new___ns1__ServerLevel_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ServerLevel_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ServerLevel_ * soap_new_req___ns1__ServerLevel_(
	struct soap *soap)
{
	struct __ns1__ServerLevel_ *_p = ::soap_new___ns1__ServerLevel_(soap);
	if (_p)
	{	::soap_default___ns1__ServerLevel_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ServerLevel_ * soap_new_set___ns1__ServerLevel_(
	struct soap *soap,
	_ns1__ServerLevel *ns1__ServerLevel)
{
	struct __ns1__ServerLevel_ *_p = ::soap_new___ns1__ServerLevel_(soap);
	if (_p)
	{	::soap_default___ns1__ServerLevel_(soap, _p);
		_p->ns1__ServerLevel = ns1__ServerLevel;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ServerLevel_(struct soap*, const struct __ns1__ServerLevel_ *, const char*, const char*);

inline int soap_write___ns1__ServerLevel_(struct soap *soap, struct __ns1__ServerLevel_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ServerLevel_(soap, p), 0) || ::soap_put___ns1__ServerLevel_(soap, p, "-ns1:ServerLevel", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ServerLevel_(struct soap *soap, const char *URL, struct __ns1__ServerLevel_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ServerLevel_(soap, p), 0) || ::soap_put___ns1__ServerLevel_(soap, p, "-ns1:ServerLevel", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ServerLevel_(struct soap *soap, const char *URL, struct __ns1__ServerLevel_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ServerLevel_(soap, p), 0) || ::soap_put___ns1__ServerLevel_(soap, p, "-ns1:ServerLevel", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ServerLevel_ * SOAP_FMAC4 soap_get___ns1__ServerLevel_(struct soap*, struct __ns1__ServerLevel_ *, const char*, const char*);

inline int soap_read___ns1__ServerLevel_(struct soap *soap, struct __ns1__ServerLevel_ *p)
{
	if (p)
	{	::soap_default___ns1__ServerLevel_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ServerLevel_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ServerLevel_(struct soap *soap, const char *URL, struct __ns1__ServerLevel_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ServerLevel_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ServerLevel_(struct soap *soap, struct __ns1__ServerLevel_ *p)
{
	if (::soap_read___ns1__ServerLevel_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetTableData__DEFINED
#define SOAP_TYPE___ns1__GetTableData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetTableData_(struct soap*, struct __ns1__GetTableData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetTableData_(struct soap*, const struct __ns1__GetTableData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetTableData_(struct soap*, const char*, int, const struct __ns1__GetTableData_ *, const char*);
SOAP_FMAC3 struct __ns1__GetTableData_ * SOAP_FMAC4 soap_in___ns1__GetTableData_(struct soap*, const char*, struct __ns1__GetTableData_ *, const char*);
SOAP_FMAC1 struct __ns1__GetTableData_ * SOAP_FMAC2 soap_instantiate___ns1__GetTableData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetTableData_ * soap_new___ns1__GetTableData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetTableData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetTableData_ * soap_new_req___ns1__GetTableData_(
	struct soap *soap)
{
	struct __ns1__GetTableData_ *_p = ::soap_new___ns1__GetTableData_(soap);
	if (_p)
	{	::soap_default___ns1__GetTableData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetTableData_ * soap_new_set___ns1__GetTableData_(
	struct soap *soap,
	_ns1__GetTableData *ns1__GetTableData)
{
	struct __ns1__GetTableData_ *_p = ::soap_new___ns1__GetTableData_(soap);
	if (_p)
	{	::soap_default___ns1__GetTableData_(soap, _p);
		_p->ns1__GetTableData = ns1__GetTableData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetTableData_(struct soap*, const struct __ns1__GetTableData_ *, const char*, const char*);

inline int soap_write___ns1__GetTableData_(struct soap *soap, struct __ns1__GetTableData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetTableData_(soap, p), 0) || ::soap_put___ns1__GetTableData_(soap, p, "-ns1:GetTableData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetTableData_(struct soap *soap, const char *URL, struct __ns1__GetTableData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTableData_(soap, p), 0) || ::soap_put___ns1__GetTableData_(soap, p, "-ns1:GetTableData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetTableData_(struct soap *soap, const char *URL, struct __ns1__GetTableData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTableData_(soap, p), 0) || ::soap_put___ns1__GetTableData_(soap, p, "-ns1:GetTableData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetTableData_ * SOAP_FMAC4 soap_get___ns1__GetTableData_(struct soap*, struct __ns1__GetTableData_ *, const char*, const char*);

inline int soap_read___ns1__GetTableData_(struct soap *soap, struct __ns1__GetTableData_ *p)
{
	if (p)
	{	::soap_default___ns1__GetTableData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetTableData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetTableData_(struct soap *soap, const char *URL, struct __ns1__GetTableData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetTableData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetTableData_(struct soap *soap, struct __ns1__GetTableData_ *p)
{
	if (::soap_read___ns1__GetTableData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMap__DEFINED
#define SOAP_TYPE___ns1__GetMap__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMap_(struct soap*, struct __ns1__GetMap_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMap_(struct soap*, const struct __ns1__GetMap_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMap_(struct soap*, const char*, int, const struct __ns1__GetMap_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMap_ * SOAP_FMAC4 soap_in___ns1__GetMap_(struct soap*, const char*, struct __ns1__GetMap_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMap_ * SOAP_FMAC2 soap_instantiate___ns1__GetMap_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMap_ * soap_new___ns1__GetMap_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMap_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMap_ * soap_new_req___ns1__GetMap_(
	struct soap *soap)
{
	struct __ns1__GetMap_ *_p = ::soap_new___ns1__GetMap_(soap);
	if (_p)
	{	::soap_default___ns1__GetMap_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMap_ * soap_new_set___ns1__GetMap_(
	struct soap *soap,
	_ns1__GetMap *ns1__GetMap)
{
	struct __ns1__GetMap_ *_p = ::soap_new___ns1__GetMap_(soap);
	if (_p)
	{	::soap_default___ns1__GetMap_(soap, _p);
		_p->ns1__GetMap = ns1__GetMap;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMap_(struct soap*, const struct __ns1__GetMap_ *, const char*, const char*);

inline int soap_write___ns1__GetMap_(struct soap *soap, struct __ns1__GetMap_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMap_(soap, p), 0) || ::soap_put___ns1__GetMap_(soap, p, "-ns1:GetMap", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMap_(struct soap *soap, const char *URL, struct __ns1__GetMap_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMap_(soap, p), 0) || ::soap_put___ns1__GetMap_(soap, p, "-ns1:GetMap", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMap_(struct soap *soap, const char *URL, struct __ns1__GetMap_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMap_(soap, p), 0) || ::soap_put___ns1__GetMap_(soap, p, "-ns1:GetMap", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMap_ * SOAP_FMAC4 soap_get___ns1__GetMap_(struct soap*, struct __ns1__GetMap_ *, const char*, const char*);

inline int soap_read___ns1__GetMap_(struct soap *soap, struct __ns1__GetMap_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMap_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMap_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMap_(struct soap *soap, const char *URL, struct __ns1__GetMap_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMap_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMap_(struct soap *soap, struct __ns1__GetMap_ *p)
{
	if (::soap_read___ns1__GetMap_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__CheckMapVer__DEFINED
#define SOAP_TYPE___ns1__CheckMapVer__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckMapVer_(struct soap*, struct __ns1__CheckMapVer_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckMapVer_(struct soap*, const struct __ns1__CheckMapVer_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckMapVer_(struct soap*, const char*, int, const struct __ns1__CheckMapVer_ *, const char*);
SOAP_FMAC3 struct __ns1__CheckMapVer_ * SOAP_FMAC4 soap_in___ns1__CheckMapVer_(struct soap*, const char*, struct __ns1__CheckMapVer_ *, const char*);
SOAP_FMAC1 struct __ns1__CheckMapVer_ * SOAP_FMAC2 soap_instantiate___ns1__CheckMapVer_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckMapVer_ * soap_new___ns1__CheckMapVer_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CheckMapVer_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CheckMapVer_ * soap_new_req___ns1__CheckMapVer_(
	struct soap *soap)
{
	struct __ns1__CheckMapVer_ *_p = ::soap_new___ns1__CheckMapVer_(soap);
	if (_p)
	{	::soap_default___ns1__CheckMapVer_(soap, _p);
	}
	return _p;
}

inline struct __ns1__CheckMapVer_ * soap_new_set___ns1__CheckMapVer_(
	struct soap *soap,
	_ns1__CheckMapVer *ns1__CheckMapVer)
{
	struct __ns1__CheckMapVer_ *_p = ::soap_new___ns1__CheckMapVer_(soap);
	if (_p)
	{	::soap_default___ns1__CheckMapVer_(soap, _p);
		_p->ns1__CheckMapVer = ns1__CheckMapVer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckMapVer_(struct soap*, const struct __ns1__CheckMapVer_ *, const char*, const char*);

inline int soap_write___ns1__CheckMapVer_(struct soap *soap, struct __ns1__CheckMapVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CheckMapVer_(soap, p), 0) || ::soap_put___ns1__CheckMapVer_(soap, p, "-ns1:CheckMapVer", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CheckMapVer_(struct soap *soap, const char *URL, struct __ns1__CheckMapVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckMapVer_(soap, p), 0) || ::soap_put___ns1__CheckMapVer_(soap, p, "-ns1:CheckMapVer", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CheckMapVer_(struct soap *soap, const char *URL, struct __ns1__CheckMapVer_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckMapVer_(soap, p), 0) || ::soap_put___ns1__CheckMapVer_(soap, p, "-ns1:CheckMapVer", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CheckMapVer_ * SOAP_FMAC4 soap_get___ns1__CheckMapVer_(struct soap*, struct __ns1__CheckMapVer_ *, const char*, const char*);

inline int soap_read___ns1__CheckMapVer_(struct soap *soap, struct __ns1__CheckMapVer_ *p)
{
	if (p)
	{	::soap_default___ns1__CheckMapVer_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CheckMapVer_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CheckMapVer_(struct soap *soap, const char *URL, struct __ns1__CheckMapVer_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CheckMapVer_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__CheckMapVer_(struct soap *soap, struct __ns1__CheckMapVer_ *p)
{
	if (::soap_read___ns1__CheckMapVer_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMangeXb__DEFINED
#define SOAP_TYPE___ns1__GetMangeXb__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMangeXb_(struct soap*, struct __ns1__GetMangeXb_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMangeXb_(struct soap*, const struct __ns1__GetMangeXb_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMangeXb_(struct soap*, const char*, int, const struct __ns1__GetMangeXb_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMangeXb_ * SOAP_FMAC4 soap_in___ns1__GetMangeXb_(struct soap*, const char*, struct __ns1__GetMangeXb_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMangeXb_ * SOAP_FMAC2 soap_instantiate___ns1__GetMangeXb_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMangeXb_ * soap_new___ns1__GetMangeXb_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMangeXb_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMangeXb_ * soap_new_req___ns1__GetMangeXb_(
	struct soap *soap)
{
	struct __ns1__GetMangeXb_ *_p = ::soap_new___ns1__GetMangeXb_(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeXb_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMangeXb_ * soap_new_set___ns1__GetMangeXb_(
	struct soap *soap,
	_ns1__GetMangeXb *ns1__GetMangeXb)
{
	struct __ns1__GetMangeXb_ *_p = ::soap_new___ns1__GetMangeXb_(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeXb_(soap, _p);
		_p->ns1__GetMangeXb = ns1__GetMangeXb;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMangeXb_(struct soap*, const struct __ns1__GetMangeXb_ *, const char*, const char*);

inline int soap_write___ns1__GetMangeXb_(struct soap *soap, struct __ns1__GetMangeXb_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMangeXb_(soap, p), 0) || ::soap_put___ns1__GetMangeXb_(soap, p, "-ns1:GetMangeXb", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMangeXb_(struct soap *soap, const char *URL, struct __ns1__GetMangeXb_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeXb_(soap, p), 0) || ::soap_put___ns1__GetMangeXb_(soap, p, "-ns1:GetMangeXb", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMangeXb_(struct soap *soap, const char *URL, struct __ns1__GetMangeXb_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeXb_(soap, p), 0) || ::soap_put___ns1__GetMangeXb_(soap, p, "-ns1:GetMangeXb", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMangeXb_ * SOAP_FMAC4 soap_get___ns1__GetMangeXb_(struct soap*, struct __ns1__GetMangeXb_ *, const char*, const char*);

inline int soap_read___ns1__GetMangeXb_(struct soap *soap, struct __ns1__GetMangeXb_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMangeXb_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMangeXb_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMangeXb_(struct soap *soap, const char *URL, struct __ns1__GetMangeXb_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMangeXb_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMangeXb_(struct soap *soap, struct __ns1__GetMangeXb_ *p)
{
	if (::soap_read___ns1__GetMangeXb_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMangeUnit__DEFINED
#define SOAP_TYPE___ns1__GetMangeUnit__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMangeUnit_(struct soap*, struct __ns1__GetMangeUnit_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMangeUnit_(struct soap*, const struct __ns1__GetMangeUnit_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMangeUnit_(struct soap*, const char*, int, const struct __ns1__GetMangeUnit_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMangeUnit_ * SOAP_FMAC4 soap_in___ns1__GetMangeUnit_(struct soap*, const char*, struct __ns1__GetMangeUnit_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMangeUnit_ * SOAP_FMAC2 soap_instantiate___ns1__GetMangeUnit_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMangeUnit_ * soap_new___ns1__GetMangeUnit_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMangeUnit_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMangeUnit_ * soap_new_req___ns1__GetMangeUnit_(
	struct soap *soap)
{
	struct __ns1__GetMangeUnit_ *_p = ::soap_new___ns1__GetMangeUnit_(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeUnit_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMangeUnit_ * soap_new_set___ns1__GetMangeUnit_(
	struct soap *soap,
	_ns1__GetMangeUnit *ns1__GetMangeUnit)
{
	struct __ns1__GetMangeUnit_ *_p = ::soap_new___ns1__GetMangeUnit_(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeUnit_(soap, _p);
		_p->ns1__GetMangeUnit = ns1__GetMangeUnit;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMangeUnit_(struct soap*, const struct __ns1__GetMangeUnit_ *, const char*, const char*);

inline int soap_write___ns1__GetMangeUnit_(struct soap *soap, struct __ns1__GetMangeUnit_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMangeUnit_(soap, p), 0) || ::soap_put___ns1__GetMangeUnit_(soap, p, "-ns1:GetMangeUnit", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMangeUnit_(struct soap *soap, const char *URL, struct __ns1__GetMangeUnit_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeUnit_(soap, p), 0) || ::soap_put___ns1__GetMangeUnit_(soap, p, "-ns1:GetMangeUnit", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMangeUnit_(struct soap *soap, const char *URL, struct __ns1__GetMangeUnit_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeUnit_(soap, p), 0) || ::soap_put___ns1__GetMangeUnit_(soap, p, "-ns1:GetMangeUnit", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMangeUnit_ * SOAP_FMAC4 soap_get___ns1__GetMangeUnit_(struct soap*, struct __ns1__GetMangeUnit_ *, const char*, const char*);

inline int soap_read___ns1__GetMangeUnit_(struct soap *soap, struct __ns1__GetMangeUnit_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMangeUnit_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMangeUnit_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMangeUnit_(struct soap *soap, const char *URL, struct __ns1__GetMangeUnit_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMangeUnit_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMangeUnit_(struct soap *soap, struct __ns1__GetMangeUnit_ *p)
{
	if (::soap_read___ns1__GetMangeUnit_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMaList__DEFINED
#define SOAP_TYPE___ns1__GetMaList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMaList_(struct soap*, struct __ns1__GetMaList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMaList_(struct soap*, const struct __ns1__GetMaList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMaList_(struct soap*, const char*, int, const struct __ns1__GetMaList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMaList_ * SOAP_FMAC4 soap_in___ns1__GetMaList_(struct soap*, const char*, struct __ns1__GetMaList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMaList_ * SOAP_FMAC2 soap_instantiate___ns1__GetMaList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMaList_ * soap_new___ns1__GetMaList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMaList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMaList_ * soap_new_req___ns1__GetMaList_(
	struct soap *soap)
{
	struct __ns1__GetMaList_ *_p = ::soap_new___ns1__GetMaList_(soap);
	if (_p)
	{	::soap_default___ns1__GetMaList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMaList_ * soap_new_set___ns1__GetMaList_(
	struct soap *soap,
	_ns1__GetMaList *ns1__GetMaList)
{
	struct __ns1__GetMaList_ *_p = ::soap_new___ns1__GetMaList_(soap);
	if (_p)
	{	::soap_default___ns1__GetMaList_(soap, _p);
		_p->ns1__GetMaList = ns1__GetMaList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMaList_(struct soap*, const struct __ns1__GetMaList_ *, const char*, const char*);

inline int soap_write___ns1__GetMaList_(struct soap *soap, struct __ns1__GetMaList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMaList_(soap, p), 0) || ::soap_put___ns1__GetMaList_(soap, p, "-ns1:GetMaList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMaList_(struct soap *soap, const char *URL, struct __ns1__GetMaList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMaList_(soap, p), 0) || ::soap_put___ns1__GetMaList_(soap, p, "-ns1:GetMaList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMaList_(struct soap *soap, const char *URL, struct __ns1__GetMaList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMaList_(soap, p), 0) || ::soap_put___ns1__GetMaList_(soap, p, "-ns1:GetMaList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMaList_ * SOAP_FMAC4 soap_get___ns1__GetMaList_(struct soap*, struct __ns1__GetMaList_ *, const char*, const char*);

inline int soap_read___ns1__GetMaList_(struct soap *soap, struct __ns1__GetMaList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMaList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMaList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMaList_(struct soap *soap, const char *URL, struct __ns1__GetMaList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMaList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMaList_(struct soap *soap, struct __ns1__GetMaList_ *p)
{
	if (::soap_read___ns1__GetMaList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapDeviceData__DEFINED
#define SOAP_TYPE___ns1__GetMapDeviceData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapDeviceData_(struct soap*, struct __ns1__GetMapDeviceData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapDeviceData_(struct soap*, const struct __ns1__GetMapDeviceData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapDeviceData_(struct soap*, const char*, int, const struct __ns1__GetMapDeviceData_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMapDeviceData_ * SOAP_FMAC4 soap_in___ns1__GetMapDeviceData_(struct soap*, const char*, struct __ns1__GetMapDeviceData_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMapDeviceData_ * SOAP_FMAC2 soap_instantiate___ns1__GetMapDeviceData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapDeviceData_ * soap_new___ns1__GetMapDeviceData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapDeviceData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapDeviceData_ * soap_new_req___ns1__GetMapDeviceData_(
	struct soap *soap)
{
	struct __ns1__GetMapDeviceData_ *_p = ::soap_new___ns1__GetMapDeviceData_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapDeviceData_ * soap_new_set___ns1__GetMapDeviceData_(
	struct soap *soap,
	_ns1__GetMapDeviceData *ns1__GetMapDeviceData)
{
	struct __ns1__GetMapDeviceData_ *_p = ::soap_new___ns1__GetMapDeviceData_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceData_(soap, _p);
		_p->ns1__GetMapDeviceData = ns1__GetMapDeviceData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapDeviceData_(struct soap*, const struct __ns1__GetMapDeviceData_ *, const char*, const char*);

inline int soap_write___ns1__GetMapDeviceData_(struct soap *soap, struct __ns1__GetMapDeviceData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapDeviceData_(soap, p), 0) || ::soap_put___ns1__GetMapDeviceData_(soap, p, "-ns1:GetMapDeviceData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapDeviceData_(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceData_(soap, p), 0) || ::soap_put___ns1__GetMapDeviceData_(soap, p, "-ns1:GetMapDeviceData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapDeviceData_(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceData_(soap, p), 0) || ::soap_put___ns1__GetMapDeviceData_(soap, p, "-ns1:GetMapDeviceData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapDeviceData_ * SOAP_FMAC4 soap_get___ns1__GetMapDeviceData_(struct soap*, struct __ns1__GetMapDeviceData_ *, const char*, const char*);

inline int soap_read___ns1__GetMapDeviceData_(struct soap *soap, struct __ns1__GetMapDeviceData_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMapDeviceData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapDeviceData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapDeviceData_(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapDeviceData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapDeviceData_(struct soap *soap, struct __ns1__GetMapDeviceData_ *p)
{
	if (::soap_read___ns1__GetMapDeviceData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapTabName__DEFINED
#define SOAP_TYPE___ns1__GetMapTabName__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapTabName_(struct soap*, struct __ns1__GetMapTabName_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapTabName_(struct soap*, const struct __ns1__GetMapTabName_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapTabName_(struct soap*, const char*, int, const struct __ns1__GetMapTabName_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMapTabName_ * SOAP_FMAC4 soap_in___ns1__GetMapTabName_(struct soap*, const char*, struct __ns1__GetMapTabName_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMapTabName_ * SOAP_FMAC2 soap_instantiate___ns1__GetMapTabName_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapTabName_ * soap_new___ns1__GetMapTabName_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapTabName_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapTabName_ * soap_new_req___ns1__GetMapTabName_(
	struct soap *soap)
{
	struct __ns1__GetMapTabName_ *_p = ::soap_new___ns1__GetMapTabName_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapTabName_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapTabName_ * soap_new_set___ns1__GetMapTabName_(
	struct soap *soap,
	_ns1__GetMapTabName *ns1__GetMapTabName)
{
	struct __ns1__GetMapTabName_ *_p = ::soap_new___ns1__GetMapTabName_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapTabName_(soap, _p);
		_p->ns1__GetMapTabName = ns1__GetMapTabName;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapTabName_(struct soap*, const struct __ns1__GetMapTabName_ *, const char*, const char*);

inline int soap_write___ns1__GetMapTabName_(struct soap *soap, struct __ns1__GetMapTabName_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapTabName_(soap, p), 0) || ::soap_put___ns1__GetMapTabName_(soap, p, "-ns1:GetMapTabName", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapTabName_(struct soap *soap, const char *URL, struct __ns1__GetMapTabName_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapTabName_(soap, p), 0) || ::soap_put___ns1__GetMapTabName_(soap, p, "-ns1:GetMapTabName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapTabName_(struct soap *soap, const char *URL, struct __ns1__GetMapTabName_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapTabName_(soap, p), 0) || ::soap_put___ns1__GetMapTabName_(soap, p, "-ns1:GetMapTabName", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapTabName_ * SOAP_FMAC4 soap_get___ns1__GetMapTabName_(struct soap*, struct __ns1__GetMapTabName_ *, const char*, const char*);

inline int soap_read___ns1__GetMapTabName_(struct soap *soap, struct __ns1__GetMapTabName_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMapTabName_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapTabName_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapTabName_(struct soap *soap, const char *URL, struct __ns1__GetMapTabName_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapTabName_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapTabName_(struct soap *soap, struct __ns1__GetMapTabName_ *p)
{
	if (::soap_read___ns1__GetMapTabName_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapUpdateTime__DEFINED
#define SOAP_TYPE___ns1__GetMapUpdateTime__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapUpdateTime_(struct soap*, struct __ns1__GetMapUpdateTime_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapUpdateTime_(struct soap*, const struct __ns1__GetMapUpdateTime_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapUpdateTime_(struct soap*, const char*, int, const struct __ns1__GetMapUpdateTime_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMapUpdateTime_ * SOAP_FMAC4 soap_in___ns1__GetMapUpdateTime_(struct soap*, const char*, struct __ns1__GetMapUpdateTime_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMapUpdateTime_ * SOAP_FMAC2 soap_instantiate___ns1__GetMapUpdateTime_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapUpdateTime_ * soap_new___ns1__GetMapUpdateTime_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapUpdateTime_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapUpdateTime_ * soap_new_req___ns1__GetMapUpdateTime_(
	struct soap *soap)
{
	struct __ns1__GetMapUpdateTime_ *_p = ::soap_new___ns1__GetMapUpdateTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapUpdateTime_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapUpdateTime_ * soap_new_set___ns1__GetMapUpdateTime_(
	struct soap *soap,
	_ns1__GetMapUpdateTime *ns1__GetMapUpdateTime)
{
	struct __ns1__GetMapUpdateTime_ *_p = ::soap_new___ns1__GetMapUpdateTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapUpdateTime_(soap, _p);
		_p->ns1__GetMapUpdateTime = ns1__GetMapUpdateTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapUpdateTime_(struct soap*, const struct __ns1__GetMapUpdateTime_ *, const char*, const char*);

inline int soap_write___ns1__GetMapUpdateTime_(struct soap *soap, struct __ns1__GetMapUpdateTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapUpdateTime_(soap, p), 0) || ::soap_put___ns1__GetMapUpdateTime_(soap, p, "-ns1:GetMapUpdateTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapUpdateTime_(struct soap *soap, const char *URL, struct __ns1__GetMapUpdateTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapUpdateTime_(soap, p), 0) || ::soap_put___ns1__GetMapUpdateTime_(soap, p, "-ns1:GetMapUpdateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapUpdateTime_(struct soap *soap, const char *URL, struct __ns1__GetMapUpdateTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapUpdateTime_(soap, p), 0) || ::soap_put___ns1__GetMapUpdateTime_(soap, p, "-ns1:GetMapUpdateTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapUpdateTime_ * SOAP_FMAC4 soap_get___ns1__GetMapUpdateTime_(struct soap*, struct __ns1__GetMapUpdateTime_ *, const char*, const char*);

inline int soap_read___ns1__GetMapUpdateTime_(struct soap *soap, struct __ns1__GetMapUpdateTime_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMapUpdateTime_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapUpdateTime_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapUpdateTime_(struct soap *soap, const char *URL, struct __ns1__GetMapUpdateTime_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapUpdateTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapUpdateTime_(struct soap *soap, struct __ns1__GetMapUpdateTime_ *p)
{
	if (::soap_read___ns1__GetMapUpdateTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__WriteFile__DEFINED
#define SOAP_TYPE___ns1__WriteFile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WriteFile_(struct soap*, struct __ns1__WriteFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WriteFile_(struct soap*, const struct __ns1__WriteFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WriteFile_(struct soap*, const char*, int, const struct __ns1__WriteFile_ *, const char*);
SOAP_FMAC3 struct __ns1__WriteFile_ * SOAP_FMAC4 soap_in___ns1__WriteFile_(struct soap*, const char*, struct __ns1__WriteFile_ *, const char*);
SOAP_FMAC1 struct __ns1__WriteFile_ * SOAP_FMAC2 soap_instantiate___ns1__WriteFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WriteFile_ * soap_new___ns1__WriteFile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__WriteFile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__WriteFile_ * soap_new_req___ns1__WriteFile_(
	struct soap *soap)
{
	struct __ns1__WriteFile_ *_p = ::soap_new___ns1__WriteFile_(soap);
	if (_p)
	{	::soap_default___ns1__WriteFile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__WriteFile_ * soap_new_set___ns1__WriteFile_(
	struct soap *soap,
	_ns1__WriteFile *ns1__WriteFile)
{
	struct __ns1__WriteFile_ *_p = ::soap_new___ns1__WriteFile_(soap);
	if (_p)
	{	::soap_default___ns1__WriteFile_(soap, _p);
		_p->ns1__WriteFile = ns1__WriteFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WriteFile_(struct soap*, const struct __ns1__WriteFile_ *, const char*, const char*);

inline int soap_write___ns1__WriteFile_(struct soap *soap, struct __ns1__WriteFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__WriteFile_(soap, p), 0) || ::soap_put___ns1__WriteFile_(soap, p, "-ns1:WriteFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__WriteFile_(struct soap *soap, const char *URL, struct __ns1__WriteFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__WriteFile_(soap, p), 0) || ::soap_put___ns1__WriteFile_(soap, p, "-ns1:WriteFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__WriteFile_(struct soap *soap, const char *URL, struct __ns1__WriteFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__WriteFile_(soap, p), 0) || ::soap_put___ns1__WriteFile_(soap, p, "-ns1:WriteFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__WriteFile_ * SOAP_FMAC4 soap_get___ns1__WriteFile_(struct soap*, struct __ns1__WriteFile_ *, const char*, const char*);

inline int soap_read___ns1__WriteFile_(struct soap *soap, struct __ns1__WriteFile_ *p)
{
	if (p)
	{	::soap_default___ns1__WriteFile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__WriteFile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__WriteFile_(struct soap *soap, const char *URL, struct __ns1__WriteFile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__WriteFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__WriteFile_(struct soap *soap, struct __ns1__WriteFile_ *p)
{
	if (::soap_read___ns1__WriteFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownLoadFile__DEFINED
#define SOAP_TYPE___ns1__DownLoadFile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownLoadFile_(struct soap*, struct __ns1__DownLoadFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownLoadFile_(struct soap*, const struct __ns1__DownLoadFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownLoadFile_(struct soap*, const char*, int, const struct __ns1__DownLoadFile_ *, const char*);
SOAP_FMAC3 struct __ns1__DownLoadFile_ * SOAP_FMAC4 soap_in___ns1__DownLoadFile_(struct soap*, const char*, struct __ns1__DownLoadFile_ *, const char*);
SOAP_FMAC1 struct __ns1__DownLoadFile_ * SOAP_FMAC2 soap_instantiate___ns1__DownLoadFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownLoadFile_ * soap_new___ns1__DownLoadFile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownLoadFile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownLoadFile_ * soap_new_req___ns1__DownLoadFile_(
	struct soap *soap)
{
	struct __ns1__DownLoadFile_ *_p = ::soap_new___ns1__DownLoadFile_(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadFile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownLoadFile_ * soap_new_set___ns1__DownLoadFile_(
	struct soap *soap,
	_ns1__DownLoadFile *ns1__DownLoadFile)
{
	struct __ns1__DownLoadFile_ *_p = ::soap_new___ns1__DownLoadFile_(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadFile_(soap, _p);
		_p->ns1__DownLoadFile = ns1__DownLoadFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownLoadFile_(struct soap*, const struct __ns1__DownLoadFile_ *, const char*, const char*);

inline int soap_write___ns1__DownLoadFile_(struct soap *soap, struct __ns1__DownLoadFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownLoadFile_(soap, p), 0) || ::soap_put___ns1__DownLoadFile_(soap, p, "-ns1:DownLoadFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownLoadFile_(struct soap *soap, const char *URL, struct __ns1__DownLoadFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadFile_(soap, p), 0) || ::soap_put___ns1__DownLoadFile_(soap, p, "-ns1:DownLoadFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownLoadFile_(struct soap *soap, const char *URL, struct __ns1__DownLoadFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadFile_(soap, p), 0) || ::soap_put___ns1__DownLoadFile_(soap, p, "-ns1:DownLoadFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownLoadFile_ * SOAP_FMAC4 soap_get___ns1__DownLoadFile_(struct soap*, struct __ns1__DownLoadFile_ *, const char*, const char*);

inline int soap_read___ns1__DownLoadFile_(struct soap *soap, struct __ns1__DownLoadFile_ *p)
{
	if (p)
	{	::soap_default___ns1__DownLoadFile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownLoadFile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownLoadFile_(struct soap *soap, const char *URL, struct __ns1__DownLoadFile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownLoadFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownLoadFile_(struct soap *soap, struct __ns1__DownLoadFile_ *p)
{
	if (::soap_read___ns1__DownLoadFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ExecuteSqlForFile__DEFINED
#define SOAP_TYPE___ns1__ExecuteSqlForFile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteSqlForFile_(struct soap*, struct __ns1__ExecuteSqlForFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteSqlForFile_(struct soap*, const struct __ns1__ExecuteSqlForFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteSqlForFile_(struct soap*, const char*, int, const struct __ns1__ExecuteSqlForFile_ *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteSqlForFile_ * SOAP_FMAC4 soap_in___ns1__ExecuteSqlForFile_(struct soap*, const char*, struct __ns1__ExecuteSqlForFile_ *, const char*);
SOAP_FMAC1 struct __ns1__ExecuteSqlForFile_ * SOAP_FMAC2 soap_instantiate___ns1__ExecuteSqlForFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExecuteSqlForFile_ * soap_new___ns1__ExecuteSqlForFile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ExecuteSqlForFile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ExecuteSqlForFile_ * soap_new_req___ns1__ExecuteSqlForFile_(
	struct soap *soap)
{
	struct __ns1__ExecuteSqlForFile_ *_p = ::soap_new___ns1__ExecuteSqlForFile_(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForFile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ExecuteSqlForFile_ * soap_new_set___ns1__ExecuteSqlForFile_(
	struct soap *soap,
	_ns1__ExecuteSqlForFile *ns1__ExecuteSqlForFile)
{
	struct __ns1__ExecuteSqlForFile_ *_p = ::soap_new___ns1__ExecuteSqlForFile_(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForFile_(soap, _p);
		_p->ns1__ExecuteSqlForFile = ns1__ExecuteSqlForFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteSqlForFile_(struct soap*, const struct __ns1__ExecuteSqlForFile_ *, const char*, const char*);

inline int soap_write___ns1__ExecuteSqlForFile_(struct soap *soap, struct __ns1__ExecuteSqlForFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ExecuteSqlForFile_(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForFile_(soap, p, "-ns1:ExecuteSqlForFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ExecuteSqlForFile_(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForFile_(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForFile_(soap, p, "-ns1:ExecuteSqlForFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ExecuteSqlForFile_(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForFile_(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForFile_(soap, p, "-ns1:ExecuteSqlForFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ExecuteSqlForFile_ * SOAP_FMAC4 soap_get___ns1__ExecuteSqlForFile_(struct soap*, struct __ns1__ExecuteSqlForFile_ *, const char*, const char*);

inline int soap_read___ns1__ExecuteSqlForFile_(struct soap *soap, struct __ns1__ExecuteSqlForFile_ *p)
{
	if (p)
	{	::soap_default___ns1__ExecuteSqlForFile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ExecuteSqlForFile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ExecuteSqlForFile_(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForFile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ExecuteSqlForFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ExecuteSqlForFile_(struct soap *soap, struct __ns1__ExecuteSqlForFile_ *p)
{
	if (::soap_read___ns1__ExecuteSqlForFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetFieldInfo__DEFINED
#define SOAP_TYPE___ns1__GetFieldInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFieldInfo_(struct soap*, struct __ns1__GetFieldInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFieldInfo_(struct soap*, const struct __ns1__GetFieldInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFieldInfo_(struct soap*, const char*, int, const struct __ns1__GetFieldInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetFieldInfo_ * SOAP_FMAC4 soap_in___ns1__GetFieldInfo_(struct soap*, const char*, struct __ns1__GetFieldInfo_ *, const char*);
SOAP_FMAC1 struct __ns1__GetFieldInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetFieldInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFieldInfo_ * soap_new___ns1__GetFieldInfo_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetFieldInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetFieldInfo_ * soap_new_req___ns1__GetFieldInfo_(
	struct soap *soap)
{
	struct __ns1__GetFieldInfo_ *_p = ::soap_new___ns1__GetFieldInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetFieldInfo_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetFieldInfo_ * soap_new_set___ns1__GetFieldInfo_(
	struct soap *soap,
	_ns1__GetFieldInfo *ns1__GetFieldInfo)
{
	struct __ns1__GetFieldInfo_ *_p = ::soap_new___ns1__GetFieldInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetFieldInfo_(soap, _p);
		_p->ns1__GetFieldInfo = ns1__GetFieldInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFieldInfo_(struct soap*, const struct __ns1__GetFieldInfo_ *, const char*, const char*);

inline int soap_write___ns1__GetFieldInfo_(struct soap *soap, struct __ns1__GetFieldInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetFieldInfo_(soap, p), 0) || ::soap_put___ns1__GetFieldInfo_(soap, p, "-ns1:GetFieldInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetFieldInfo_(struct soap *soap, const char *URL, struct __ns1__GetFieldInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFieldInfo_(soap, p), 0) || ::soap_put___ns1__GetFieldInfo_(soap, p, "-ns1:GetFieldInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetFieldInfo_(struct soap *soap, const char *URL, struct __ns1__GetFieldInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFieldInfo_(soap, p), 0) || ::soap_put___ns1__GetFieldInfo_(soap, p, "-ns1:GetFieldInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetFieldInfo_ * SOAP_FMAC4 soap_get___ns1__GetFieldInfo_(struct soap*, struct __ns1__GetFieldInfo_ *, const char*, const char*);

inline int soap_read___ns1__GetFieldInfo_(struct soap *soap, struct __ns1__GetFieldInfo_ *p)
{
	if (p)
	{	::soap_default___ns1__GetFieldInfo_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetFieldInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetFieldInfo_(struct soap *soap, const char *URL, struct __ns1__GetFieldInfo_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetFieldInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetFieldInfo_(struct soap *soap, struct __ns1__GetFieldInfo_ *p)
{
	if (::soap_read___ns1__GetFieldInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__IsOracleTable__DEFINED
#define SOAP_TYPE___ns1__IsOracleTable__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__IsOracleTable_(struct soap*, struct __ns1__IsOracleTable_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__IsOracleTable_(struct soap*, const struct __ns1__IsOracleTable_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__IsOracleTable_(struct soap*, const char*, int, const struct __ns1__IsOracleTable_ *, const char*);
SOAP_FMAC3 struct __ns1__IsOracleTable_ * SOAP_FMAC4 soap_in___ns1__IsOracleTable_(struct soap*, const char*, struct __ns1__IsOracleTable_ *, const char*);
SOAP_FMAC1 struct __ns1__IsOracleTable_ * SOAP_FMAC2 soap_instantiate___ns1__IsOracleTable_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__IsOracleTable_ * soap_new___ns1__IsOracleTable_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__IsOracleTable_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__IsOracleTable_ * soap_new_req___ns1__IsOracleTable_(
	struct soap *soap)
{
	struct __ns1__IsOracleTable_ *_p = ::soap_new___ns1__IsOracleTable_(soap);
	if (_p)
	{	::soap_default___ns1__IsOracleTable_(soap, _p);
	}
	return _p;
}

inline struct __ns1__IsOracleTable_ * soap_new_set___ns1__IsOracleTable_(
	struct soap *soap,
	_ns1__IsOracleTable *ns1__IsOracleTable)
{
	struct __ns1__IsOracleTable_ *_p = ::soap_new___ns1__IsOracleTable_(soap);
	if (_p)
	{	::soap_default___ns1__IsOracleTable_(soap, _p);
		_p->ns1__IsOracleTable = ns1__IsOracleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__IsOracleTable_(struct soap*, const struct __ns1__IsOracleTable_ *, const char*, const char*);

inline int soap_write___ns1__IsOracleTable_(struct soap *soap, struct __ns1__IsOracleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__IsOracleTable_(soap, p), 0) || ::soap_put___ns1__IsOracleTable_(soap, p, "-ns1:IsOracleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__IsOracleTable_(struct soap *soap, const char *URL, struct __ns1__IsOracleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__IsOracleTable_(soap, p), 0) || ::soap_put___ns1__IsOracleTable_(soap, p, "-ns1:IsOracleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__IsOracleTable_(struct soap *soap, const char *URL, struct __ns1__IsOracleTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__IsOracleTable_(soap, p), 0) || ::soap_put___ns1__IsOracleTable_(soap, p, "-ns1:IsOracleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__IsOracleTable_ * SOAP_FMAC4 soap_get___ns1__IsOracleTable_(struct soap*, struct __ns1__IsOracleTable_ *, const char*, const char*);

inline int soap_read___ns1__IsOracleTable_(struct soap *soap, struct __ns1__IsOracleTable_ *p)
{
	if (p)
	{	::soap_default___ns1__IsOracleTable_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__IsOracleTable_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__IsOracleTable_(struct soap *soap, const char *URL, struct __ns1__IsOracleTable_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__IsOracleTable_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__IsOracleTable_(struct soap *soap, struct __ns1__IsOracleTable_ *p)
{
	if (::soap_read___ns1__IsOracleTable_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetTabList__DEFINED
#define SOAP_TYPE___ns1__GetTabList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetTabList_(struct soap*, struct __ns1__GetTabList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetTabList_(struct soap*, const struct __ns1__GetTabList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetTabList_(struct soap*, const char*, int, const struct __ns1__GetTabList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetTabList_ * SOAP_FMAC4 soap_in___ns1__GetTabList_(struct soap*, const char*, struct __ns1__GetTabList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetTabList_ * SOAP_FMAC2 soap_instantiate___ns1__GetTabList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetTabList_ * soap_new___ns1__GetTabList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetTabList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetTabList_ * soap_new_req___ns1__GetTabList_(
	struct soap *soap)
{
	struct __ns1__GetTabList_ *_p = ::soap_new___ns1__GetTabList_(soap);
	if (_p)
	{	::soap_default___ns1__GetTabList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetTabList_ * soap_new_set___ns1__GetTabList_(
	struct soap *soap,
	_ns1__GetTabList *ns1__GetTabList)
{
	struct __ns1__GetTabList_ *_p = ::soap_new___ns1__GetTabList_(soap);
	if (_p)
	{	::soap_default___ns1__GetTabList_(soap, _p);
		_p->ns1__GetTabList = ns1__GetTabList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetTabList_(struct soap*, const struct __ns1__GetTabList_ *, const char*, const char*);

inline int soap_write___ns1__GetTabList_(struct soap *soap, struct __ns1__GetTabList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetTabList_(soap, p), 0) || ::soap_put___ns1__GetTabList_(soap, p, "-ns1:GetTabList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetTabList_(struct soap *soap, const char *URL, struct __ns1__GetTabList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTabList_(soap, p), 0) || ::soap_put___ns1__GetTabList_(soap, p, "-ns1:GetTabList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetTabList_(struct soap *soap, const char *URL, struct __ns1__GetTabList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTabList_(soap, p), 0) || ::soap_put___ns1__GetTabList_(soap, p, "-ns1:GetTabList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetTabList_ * SOAP_FMAC4 soap_get___ns1__GetTabList_(struct soap*, struct __ns1__GetTabList_ *, const char*, const char*);

inline int soap_read___ns1__GetTabList_(struct soap *soap, struct __ns1__GetTabList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetTabList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetTabList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetTabList_(struct soap *soap, const char *URL, struct __ns1__GetTabList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetTabList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetTabList_(struct soap *soap, struct __ns1__GetTabList_ *p)
{
	if (::soap_read___ns1__GetTabList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownCQData__DEFINED
#define SOAP_TYPE___ns1__DownCQData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownCQData_(struct soap*, struct __ns1__DownCQData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownCQData_(struct soap*, const struct __ns1__DownCQData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownCQData_(struct soap*, const char*, int, const struct __ns1__DownCQData_ *, const char*);
SOAP_FMAC3 struct __ns1__DownCQData_ * SOAP_FMAC4 soap_in___ns1__DownCQData_(struct soap*, const char*, struct __ns1__DownCQData_ *, const char*);
SOAP_FMAC1 struct __ns1__DownCQData_ * SOAP_FMAC2 soap_instantiate___ns1__DownCQData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownCQData_ * soap_new___ns1__DownCQData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownCQData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownCQData_ * soap_new_req___ns1__DownCQData_(
	struct soap *soap)
{
	struct __ns1__DownCQData_ *_p = ::soap_new___ns1__DownCQData_(soap);
	if (_p)
	{	::soap_default___ns1__DownCQData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownCQData_ * soap_new_set___ns1__DownCQData_(
	struct soap *soap,
	_ns1__DownCQData *ns1__DownCQData)
{
	struct __ns1__DownCQData_ *_p = ::soap_new___ns1__DownCQData_(soap);
	if (_p)
	{	::soap_default___ns1__DownCQData_(soap, _p);
		_p->ns1__DownCQData = ns1__DownCQData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownCQData_(struct soap*, const struct __ns1__DownCQData_ *, const char*, const char*);

inline int soap_write___ns1__DownCQData_(struct soap *soap, struct __ns1__DownCQData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownCQData_(soap, p), 0) || ::soap_put___ns1__DownCQData_(soap, p, "-ns1:DownCQData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownCQData_(struct soap *soap, const char *URL, struct __ns1__DownCQData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownCQData_(soap, p), 0) || ::soap_put___ns1__DownCQData_(soap, p, "-ns1:DownCQData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownCQData_(struct soap *soap, const char *URL, struct __ns1__DownCQData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownCQData_(soap, p), 0) || ::soap_put___ns1__DownCQData_(soap, p, "-ns1:DownCQData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownCQData_ * SOAP_FMAC4 soap_get___ns1__DownCQData_(struct soap*, struct __ns1__DownCQData_ *, const char*, const char*);

inline int soap_read___ns1__DownCQData_(struct soap *soap, struct __ns1__DownCQData_ *p)
{
	if (p)
	{	::soap_default___ns1__DownCQData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownCQData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownCQData_(struct soap *soap, const char *URL, struct __ns1__DownCQData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownCQData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownCQData_(struct soap *soap, struct __ns1__DownCQData_ *p)
{
	if (::soap_read___ns1__DownCQData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__AlterTable__DEFINED
#define SOAP_TYPE___ns1__AlterTable__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AlterTable_(struct soap*, struct __ns1__AlterTable_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AlterTable_(struct soap*, const struct __ns1__AlterTable_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AlterTable_(struct soap*, const char*, int, const struct __ns1__AlterTable_ *, const char*);
SOAP_FMAC3 struct __ns1__AlterTable_ * SOAP_FMAC4 soap_in___ns1__AlterTable_(struct soap*, const char*, struct __ns1__AlterTable_ *, const char*);
SOAP_FMAC1 struct __ns1__AlterTable_ * SOAP_FMAC2 soap_instantiate___ns1__AlterTable_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AlterTable_ * soap_new___ns1__AlterTable_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__AlterTable_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__AlterTable_ * soap_new_req___ns1__AlterTable_(
	struct soap *soap)
{
	struct __ns1__AlterTable_ *_p = ::soap_new___ns1__AlterTable_(soap);
	if (_p)
	{	::soap_default___ns1__AlterTable_(soap, _p);
	}
	return _p;
}

inline struct __ns1__AlterTable_ * soap_new_set___ns1__AlterTable_(
	struct soap *soap,
	_ns1__AlterTable *ns1__AlterTable)
{
	struct __ns1__AlterTable_ *_p = ::soap_new___ns1__AlterTable_(soap);
	if (_p)
	{	::soap_default___ns1__AlterTable_(soap, _p);
		_p->ns1__AlterTable = ns1__AlterTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AlterTable_(struct soap*, const struct __ns1__AlterTable_ *, const char*, const char*);

inline int soap_write___ns1__AlterTable_(struct soap *soap, struct __ns1__AlterTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__AlterTable_(soap, p), 0) || ::soap_put___ns1__AlterTable_(soap, p, "-ns1:AlterTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__AlterTable_(struct soap *soap, const char *URL, struct __ns1__AlterTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AlterTable_(soap, p), 0) || ::soap_put___ns1__AlterTable_(soap, p, "-ns1:AlterTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__AlterTable_(struct soap *soap, const char *URL, struct __ns1__AlterTable_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AlterTable_(soap, p), 0) || ::soap_put___ns1__AlterTable_(soap, p, "-ns1:AlterTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__AlterTable_ * SOAP_FMAC4 soap_get___ns1__AlterTable_(struct soap*, struct __ns1__AlterTable_ *, const char*, const char*);

inline int soap_read___ns1__AlterTable_(struct soap *soap, struct __ns1__AlterTable_ *p)
{
	if (p)
	{	::soap_default___ns1__AlterTable_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__AlterTable_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__AlterTable_(struct soap *soap, const char *URL, struct __ns1__AlterTable_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__AlterTable_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__AlterTable_(struct soap *soap, struct __ns1__AlterTable_ *p)
{
	if (::soap_read___ns1__AlterTable_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetFileNew__DEFINED
#define SOAP_TYPE___ns1__GetFileNew__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFileNew_(struct soap*, struct __ns1__GetFileNew_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFileNew_(struct soap*, const struct __ns1__GetFileNew_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFileNew_(struct soap*, const char*, int, const struct __ns1__GetFileNew_ *, const char*);
SOAP_FMAC3 struct __ns1__GetFileNew_ * SOAP_FMAC4 soap_in___ns1__GetFileNew_(struct soap*, const char*, struct __ns1__GetFileNew_ *, const char*);
SOAP_FMAC1 struct __ns1__GetFileNew_ * SOAP_FMAC2 soap_instantiate___ns1__GetFileNew_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFileNew_ * soap_new___ns1__GetFileNew_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetFileNew_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetFileNew_ * soap_new_req___ns1__GetFileNew_(
	struct soap *soap)
{
	struct __ns1__GetFileNew_ *_p = ::soap_new___ns1__GetFileNew_(soap);
	if (_p)
	{	::soap_default___ns1__GetFileNew_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetFileNew_ * soap_new_set___ns1__GetFileNew_(
	struct soap *soap,
	_ns1__GetFileNew *ns1__GetFileNew)
{
	struct __ns1__GetFileNew_ *_p = ::soap_new___ns1__GetFileNew_(soap);
	if (_p)
	{	::soap_default___ns1__GetFileNew_(soap, _p);
		_p->ns1__GetFileNew = ns1__GetFileNew;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFileNew_(struct soap*, const struct __ns1__GetFileNew_ *, const char*, const char*);

inline int soap_write___ns1__GetFileNew_(struct soap *soap, struct __ns1__GetFileNew_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetFileNew_(soap, p), 0) || ::soap_put___ns1__GetFileNew_(soap, p, "-ns1:GetFileNew", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetFileNew_(struct soap *soap, const char *URL, struct __ns1__GetFileNew_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileNew_(soap, p), 0) || ::soap_put___ns1__GetFileNew_(soap, p, "-ns1:GetFileNew", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetFileNew_(struct soap *soap, const char *URL, struct __ns1__GetFileNew_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileNew_(soap, p), 0) || ::soap_put___ns1__GetFileNew_(soap, p, "-ns1:GetFileNew", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetFileNew_ * SOAP_FMAC4 soap_get___ns1__GetFileNew_(struct soap*, struct __ns1__GetFileNew_ *, const char*, const char*);

inline int soap_read___ns1__GetFileNew_(struct soap *soap, struct __ns1__GetFileNew_ *p)
{
	if (p)
	{	::soap_default___ns1__GetFileNew_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetFileNew_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetFileNew_(struct soap *soap, const char *URL, struct __ns1__GetFileNew_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetFileNew_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetFileNew_(struct soap *soap, struct __ns1__GetFileNew_ *p)
{
	if (::soap_read___ns1__GetFileNew_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownMapfile__DEFINED
#define SOAP_TYPE___ns1__DownMapfile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownMapfile_(struct soap*, struct __ns1__DownMapfile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownMapfile_(struct soap*, const struct __ns1__DownMapfile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownMapfile_(struct soap*, const char*, int, const struct __ns1__DownMapfile_ *, const char*);
SOAP_FMAC3 struct __ns1__DownMapfile_ * SOAP_FMAC4 soap_in___ns1__DownMapfile_(struct soap*, const char*, struct __ns1__DownMapfile_ *, const char*);
SOAP_FMAC1 struct __ns1__DownMapfile_ * SOAP_FMAC2 soap_instantiate___ns1__DownMapfile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownMapfile_ * soap_new___ns1__DownMapfile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownMapfile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownMapfile_ * soap_new_req___ns1__DownMapfile_(
	struct soap *soap)
{
	struct __ns1__DownMapfile_ *_p = ::soap_new___ns1__DownMapfile_(soap);
	if (_p)
	{	::soap_default___ns1__DownMapfile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownMapfile_ * soap_new_set___ns1__DownMapfile_(
	struct soap *soap,
	_ns1__DownMapfile *ns1__DownMapfile)
{
	struct __ns1__DownMapfile_ *_p = ::soap_new___ns1__DownMapfile_(soap);
	if (_p)
	{	::soap_default___ns1__DownMapfile_(soap, _p);
		_p->ns1__DownMapfile = ns1__DownMapfile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownMapfile_(struct soap*, const struct __ns1__DownMapfile_ *, const char*, const char*);

inline int soap_write___ns1__DownMapfile_(struct soap *soap, struct __ns1__DownMapfile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownMapfile_(soap, p), 0) || ::soap_put___ns1__DownMapfile_(soap, p, "-ns1:DownMapfile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownMapfile_(struct soap *soap, const char *URL, struct __ns1__DownMapfile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownMapfile_(soap, p), 0) || ::soap_put___ns1__DownMapfile_(soap, p, "-ns1:DownMapfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownMapfile_(struct soap *soap, const char *URL, struct __ns1__DownMapfile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownMapfile_(soap, p), 0) || ::soap_put___ns1__DownMapfile_(soap, p, "-ns1:DownMapfile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownMapfile_ * SOAP_FMAC4 soap_get___ns1__DownMapfile_(struct soap*, struct __ns1__DownMapfile_ *, const char*, const char*);

inline int soap_read___ns1__DownMapfile_(struct soap *soap, struct __ns1__DownMapfile_ *p)
{
	if (p)
	{	::soap_default___ns1__DownMapfile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownMapfile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownMapfile_(struct soap *soap, const char *URL, struct __ns1__DownMapfile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownMapfile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownMapfile_(struct soap *soap, struct __ns1__DownMapfile_ *p)
{
	if (::soap_read___ns1__DownMapfile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDownFileInfo__DEFINED
#define SOAP_TYPE___ns1__GetDownFileInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDownFileInfo_(struct soap*, struct __ns1__GetDownFileInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDownFileInfo_(struct soap*, const struct __ns1__GetDownFileInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDownFileInfo_(struct soap*, const char*, int, const struct __ns1__GetDownFileInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDownFileInfo_ * SOAP_FMAC4 soap_in___ns1__GetDownFileInfo_(struct soap*, const char*, struct __ns1__GetDownFileInfo_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDownFileInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetDownFileInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDownFileInfo_ * soap_new___ns1__GetDownFileInfo_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDownFileInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDownFileInfo_ * soap_new_req___ns1__GetDownFileInfo_(
	struct soap *soap)
{
	struct __ns1__GetDownFileInfo_ *_p = ::soap_new___ns1__GetDownFileInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetDownFileInfo_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDownFileInfo_ * soap_new_set___ns1__GetDownFileInfo_(
	struct soap *soap,
	_ns1__GetDownFileInfo *ns1__GetDownFileInfo)
{
	struct __ns1__GetDownFileInfo_ *_p = ::soap_new___ns1__GetDownFileInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetDownFileInfo_(soap, _p);
		_p->ns1__GetDownFileInfo = ns1__GetDownFileInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDownFileInfo_(struct soap*, const struct __ns1__GetDownFileInfo_ *, const char*, const char*);

inline int soap_write___ns1__GetDownFileInfo_(struct soap *soap, struct __ns1__GetDownFileInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDownFileInfo_(soap, p), 0) || ::soap_put___ns1__GetDownFileInfo_(soap, p, "-ns1:GetDownFileInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDownFileInfo_(struct soap *soap, const char *URL, struct __ns1__GetDownFileInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDownFileInfo_(soap, p), 0) || ::soap_put___ns1__GetDownFileInfo_(soap, p, "-ns1:GetDownFileInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDownFileInfo_(struct soap *soap, const char *URL, struct __ns1__GetDownFileInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDownFileInfo_(soap, p), 0) || ::soap_put___ns1__GetDownFileInfo_(soap, p, "-ns1:GetDownFileInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDownFileInfo_ * SOAP_FMAC4 soap_get___ns1__GetDownFileInfo_(struct soap*, struct __ns1__GetDownFileInfo_ *, const char*, const char*);

inline int soap_read___ns1__GetDownFileInfo_(struct soap *soap, struct __ns1__GetDownFileInfo_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDownFileInfo_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDownFileInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDownFileInfo_(struct soap *soap, const char *URL, struct __ns1__GetDownFileInfo_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDownFileInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDownFileInfo_(struct soap *soap, struct __ns1__GetDownFileInfo_ *p)
{
	if (::soap_read___ns1__GetDownFileInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetGxDeviceData__DEFINED
#define SOAP_TYPE___ns1__GetGxDeviceData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetGxDeviceData_(struct soap*, struct __ns1__GetGxDeviceData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetGxDeviceData_(struct soap*, const struct __ns1__GetGxDeviceData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetGxDeviceData_(struct soap*, const char*, int, const struct __ns1__GetGxDeviceData_ *, const char*);
SOAP_FMAC3 struct __ns1__GetGxDeviceData_ * SOAP_FMAC4 soap_in___ns1__GetGxDeviceData_(struct soap*, const char*, struct __ns1__GetGxDeviceData_ *, const char*);
SOAP_FMAC1 struct __ns1__GetGxDeviceData_ * SOAP_FMAC2 soap_instantiate___ns1__GetGxDeviceData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetGxDeviceData_ * soap_new___ns1__GetGxDeviceData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetGxDeviceData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetGxDeviceData_ * soap_new_req___ns1__GetGxDeviceData_(
	struct soap *soap)
{
	struct __ns1__GetGxDeviceData_ *_p = ::soap_new___ns1__GetGxDeviceData_(soap);
	if (_p)
	{	::soap_default___ns1__GetGxDeviceData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetGxDeviceData_ * soap_new_set___ns1__GetGxDeviceData_(
	struct soap *soap,
	_ns1__GetGxDeviceData *ns1__GetGxDeviceData)
{
	struct __ns1__GetGxDeviceData_ *_p = ::soap_new___ns1__GetGxDeviceData_(soap);
	if (_p)
	{	::soap_default___ns1__GetGxDeviceData_(soap, _p);
		_p->ns1__GetGxDeviceData = ns1__GetGxDeviceData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetGxDeviceData_(struct soap*, const struct __ns1__GetGxDeviceData_ *, const char*, const char*);

inline int soap_write___ns1__GetGxDeviceData_(struct soap *soap, struct __ns1__GetGxDeviceData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetGxDeviceData_(soap, p), 0) || ::soap_put___ns1__GetGxDeviceData_(soap, p, "-ns1:GetGxDeviceData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetGxDeviceData_(struct soap *soap, const char *URL, struct __ns1__GetGxDeviceData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxDeviceData_(soap, p), 0) || ::soap_put___ns1__GetGxDeviceData_(soap, p, "-ns1:GetGxDeviceData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetGxDeviceData_(struct soap *soap, const char *URL, struct __ns1__GetGxDeviceData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxDeviceData_(soap, p), 0) || ::soap_put___ns1__GetGxDeviceData_(soap, p, "-ns1:GetGxDeviceData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetGxDeviceData_ * SOAP_FMAC4 soap_get___ns1__GetGxDeviceData_(struct soap*, struct __ns1__GetGxDeviceData_ *, const char*, const char*);

inline int soap_read___ns1__GetGxDeviceData_(struct soap *soap, struct __ns1__GetGxDeviceData_ *p)
{
	if (p)
	{	::soap_default___ns1__GetGxDeviceData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetGxDeviceData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetGxDeviceData_(struct soap *soap, const char *URL, struct __ns1__GetGxDeviceData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetGxDeviceData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetGxDeviceData_(struct soap *soap, struct __ns1__GetGxDeviceData_ *p)
{
	if (::soap_read___ns1__GetGxDeviceData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapDeviceType__DEFINED
#define SOAP_TYPE___ns1__GetMapDeviceType__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapDeviceType_(struct soap*, struct __ns1__GetMapDeviceType_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapDeviceType_(struct soap*, const struct __ns1__GetMapDeviceType_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapDeviceType_(struct soap*, const char*, int, const struct __ns1__GetMapDeviceType_ *, const char*);
SOAP_FMAC3 struct __ns1__GetMapDeviceType_ * SOAP_FMAC4 soap_in___ns1__GetMapDeviceType_(struct soap*, const char*, struct __ns1__GetMapDeviceType_ *, const char*);
SOAP_FMAC1 struct __ns1__GetMapDeviceType_ * SOAP_FMAC2 soap_instantiate___ns1__GetMapDeviceType_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapDeviceType_ * soap_new___ns1__GetMapDeviceType_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapDeviceType_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapDeviceType_ * soap_new_req___ns1__GetMapDeviceType_(
	struct soap *soap)
{
	struct __ns1__GetMapDeviceType_ *_p = ::soap_new___ns1__GetMapDeviceType_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceType_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapDeviceType_ * soap_new_set___ns1__GetMapDeviceType_(
	struct soap *soap,
	_ns1__GetMapDeviceType *ns1__GetMapDeviceType)
{
	struct __ns1__GetMapDeviceType_ *_p = ::soap_new___ns1__GetMapDeviceType_(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceType_(soap, _p);
		_p->ns1__GetMapDeviceType = ns1__GetMapDeviceType;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapDeviceType_(struct soap*, const struct __ns1__GetMapDeviceType_ *, const char*, const char*);

inline int soap_write___ns1__GetMapDeviceType_(struct soap *soap, struct __ns1__GetMapDeviceType_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapDeviceType_(soap, p), 0) || ::soap_put___ns1__GetMapDeviceType_(soap, p, "-ns1:GetMapDeviceType", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapDeviceType_(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceType_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceType_(soap, p), 0) || ::soap_put___ns1__GetMapDeviceType_(soap, p, "-ns1:GetMapDeviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapDeviceType_(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceType_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceType_(soap, p), 0) || ::soap_put___ns1__GetMapDeviceType_(soap, p, "-ns1:GetMapDeviceType", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapDeviceType_ * SOAP_FMAC4 soap_get___ns1__GetMapDeviceType_(struct soap*, struct __ns1__GetMapDeviceType_ *, const char*, const char*);

inline int soap_read___ns1__GetMapDeviceType_(struct soap *soap, struct __ns1__GetMapDeviceType_ *p)
{
	if (p)
	{	::soap_default___ns1__GetMapDeviceType_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapDeviceType_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapDeviceType_(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceType_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapDeviceType_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapDeviceType_(struct soap *soap, struct __ns1__GetMapDeviceType_ *p)
{
	if (::soap_read___ns1__GetMapDeviceType_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetXbStationList__DEFINED
#define SOAP_TYPE___ns1__GetXbStationList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXbStationList_(struct soap*, struct __ns1__GetXbStationList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXbStationList_(struct soap*, const struct __ns1__GetXbStationList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXbStationList_(struct soap*, const char*, int, const struct __ns1__GetXbStationList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetXbStationList_ * SOAP_FMAC4 soap_in___ns1__GetXbStationList_(struct soap*, const char*, struct __ns1__GetXbStationList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetXbStationList_ * SOAP_FMAC2 soap_instantiate___ns1__GetXbStationList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXbStationList_ * soap_new___ns1__GetXbStationList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetXbStationList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetXbStationList_ * soap_new_req___ns1__GetXbStationList_(
	struct soap *soap)
{
	struct __ns1__GetXbStationList_ *_p = ::soap_new___ns1__GetXbStationList_(soap);
	if (_p)
	{	::soap_default___ns1__GetXbStationList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetXbStationList_ * soap_new_set___ns1__GetXbStationList_(
	struct soap *soap,
	_ns1__GetXbStationList *ns1__GetXbStationList)
{
	struct __ns1__GetXbStationList_ *_p = ::soap_new___ns1__GetXbStationList_(soap);
	if (_p)
	{	::soap_default___ns1__GetXbStationList_(soap, _p);
		_p->ns1__GetXbStationList = ns1__GetXbStationList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXbStationList_(struct soap*, const struct __ns1__GetXbStationList_ *, const char*, const char*);

inline int soap_write___ns1__GetXbStationList_(struct soap *soap, struct __ns1__GetXbStationList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetXbStationList_(soap, p), 0) || ::soap_put___ns1__GetXbStationList_(soap, p, "-ns1:GetXbStationList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetXbStationList_(struct soap *soap, const char *URL, struct __ns1__GetXbStationList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbStationList_(soap, p), 0) || ::soap_put___ns1__GetXbStationList_(soap, p, "-ns1:GetXbStationList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetXbStationList_(struct soap *soap, const char *URL, struct __ns1__GetXbStationList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbStationList_(soap, p), 0) || ::soap_put___ns1__GetXbStationList_(soap, p, "-ns1:GetXbStationList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetXbStationList_ * SOAP_FMAC4 soap_get___ns1__GetXbStationList_(struct soap*, struct __ns1__GetXbStationList_ *, const char*, const char*);

inline int soap_read___ns1__GetXbStationList_(struct soap *soap, struct __ns1__GetXbStationList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetXbStationList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetXbStationList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetXbStationList_(struct soap *soap, const char *URL, struct __ns1__GetXbStationList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetXbStationList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetXbStationList_(struct soap *soap, struct __ns1__GetXbStationList_ *p)
{
	if (::soap_read___ns1__GetXbStationList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetXbList__DEFINED
#define SOAP_TYPE___ns1__GetXbList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXbList_(struct soap*, struct __ns1__GetXbList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXbList_(struct soap*, const struct __ns1__GetXbList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXbList_(struct soap*, const char*, int, const struct __ns1__GetXbList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetXbList_ * SOAP_FMAC4 soap_in___ns1__GetXbList_(struct soap*, const char*, struct __ns1__GetXbList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetXbList_ * SOAP_FMAC2 soap_instantiate___ns1__GetXbList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXbList_ * soap_new___ns1__GetXbList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetXbList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetXbList_ * soap_new_req___ns1__GetXbList_(
	struct soap *soap)
{
	struct __ns1__GetXbList_ *_p = ::soap_new___ns1__GetXbList_(soap);
	if (_p)
	{	::soap_default___ns1__GetXbList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetXbList_ * soap_new_set___ns1__GetXbList_(
	struct soap *soap,
	_ns1__GetXbList *ns1__GetXbList)
{
	struct __ns1__GetXbList_ *_p = ::soap_new___ns1__GetXbList_(soap);
	if (_p)
	{	::soap_default___ns1__GetXbList_(soap, _p);
		_p->ns1__GetXbList = ns1__GetXbList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXbList_(struct soap*, const struct __ns1__GetXbList_ *, const char*, const char*);

inline int soap_write___ns1__GetXbList_(struct soap *soap, struct __ns1__GetXbList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetXbList_(soap, p), 0) || ::soap_put___ns1__GetXbList_(soap, p, "-ns1:GetXbList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetXbList_(struct soap *soap, const char *URL, struct __ns1__GetXbList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbList_(soap, p), 0) || ::soap_put___ns1__GetXbList_(soap, p, "-ns1:GetXbList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetXbList_(struct soap *soap, const char *URL, struct __ns1__GetXbList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbList_(soap, p), 0) || ::soap_put___ns1__GetXbList_(soap, p, "-ns1:GetXbList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetXbList_ * SOAP_FMAC4 soap_get___ns1__GetXbList_(struct soap*, struct __ns1__GetXbList_ *, const char*, const char*);

inline int soap_read___ns1__GetXbList_(struct soap *soap, struct __ns1__GetXbList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetXbList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetXbList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetXbList_(struct soap *soap, const char *URL, struct __ns1__GetXbList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetXbList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetXbList_(struct soap *soap, struct __ns1__GetXbList_ *p)
{
	if (::soap_read___ns1__GetXbList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetFileSize__DEFINED
#define SOAP_TYPE___ns1__GetFileSize__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFileSize_(struct soap*, struct __ns1__GetFileSize_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFileSize_(struct soap*, const struct __ns1__GetFileSize_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFileSize_(struct soap*, const char*, int, const struct __ns1__GetFileSize_ *, const char*);
SOAP_FMAC3 struct __ns1__GetFileSize_ * SOAP_FMAC4 soap_in___ns1__GetFileSize_(struct soap*, const char*, struct __ns1__GetFileSize_ *, const char*);
SOAP_FMAC1 struct __ns1__GetFileSize_ * SOAP_FMAC2 soap_instantiate___ns1__GetFileSize_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFileSize_ * soap_new___ns1__GetFileSize_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetFileSize_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetFileSize_ * soap_new_req___ns1__GetFileSize_(
	struct soap *soap)
{
	struct __ns1__GetFileSize_ *_p = ::soap_new___ns1__GetFileSize_(soap);
	if (_p)
	{	::soap_default___ns1__GetFileSize_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetFileSize_ * soap_new_set___ns1__GetFileSize_(
	struct soap *soap,
	_ns1__GetFileSize *ns1__GetFileSize)
{
	struct __ns1__GetFileSize_ *_p = ::soap_new___ns1__GetFileSize_(soap);
	if (_p)
	{	::soap_default___ns1__GetFileSize_(soap, _p);
		_p->ns1__GetFileSize = ns1__GetFileSize;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFileSize_(struct soap*, const struct __ns1__GetFileSize_ *, const char*, const char*);

inline int soap_write___ns1__GetFileSize_(struct soap *soap, struct __ns1__GetFileSize_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetFileSize_(soap, p), 0) || ::soap_put___ns1__GetFileSize_(soap, p, "-ns1:GetFileSize", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetFileSize_(struct soap *soap, const char *URL, struct __ns1__GetFileSize_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileSize_(soap, p), 0) || ::soap_put___ns1__GetFileSize_(soap, p, "-ns1:GetFileSize", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetFileSize_(struct soap *soap, const char *URL, struct __ns1__GetFileSize_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileSize_(soap, p), 0) || ::soap_put___ns1__GetFileSize_(soap, p, "-ns1:GetFileSize", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetFileSize_ * SOAP_FMAC4 soap_get___ns1__GetFileSize_(struct soap*, struct __ns1__GetFileSize_ *, const char*, const char*);

inline int soap_read___ns1__GetFileSize_(struct soap *soap, struct __ns1__GetFileSize_ *p)
{
	if (p)
	{	::soap_default___ns1__GetFileSize_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetFileSize_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetFileSize_(struct soap *soap, const char *URL, struct __ns1__GetFileSize_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetFileSize_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetFileSize_(struct soap *soap, struct __ns1__GetFileSize_ *p)
{
	if (::soap_read___ns1__GetFileSize_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitPersonInfo__DEFINED
#define SOAP_TYPE___ns1__GetUnitPersonInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitPersonInfo_(struct soap*, struct __ns1__GetUnitPersonInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitPersonInfo_(struct soap*, const struct __ns1__GetUnitPersonInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitPersonInfo_(struct soap*, const char*, int, const struct __ns1__GetUnitPersonInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitPersonInfo_ * SOAP_FMAC4 soap_in___ns1__GetUnitPersonInfo_(struct soap*, const char*, struct __ns1__GetUnitPersonInfo_ *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitPersonInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetUnitPersonInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitPersonInfo_ * soap_new___ns1__GetUnitPersonInfo_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitPersonInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitPersonInfo_ * soap_new_req___ns1__GetUnitPersonInfo_(
	struct soap *soap)
{
	struct __ns1__GetUnitPersonInfo_ *_p = ::soap_new___ns1__GetUnitPersonInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitPersonInfo_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitPersonInfo_ * soap_new_set___ns1__GetUnitPersonInfo_(
	struct soap *soap,
	_ns1__GetUnitPersonInfo *ns1__GetUnitPersonInfo)
{
	struct __ns1__GetUnitPersonInfo_ *_p = ::soap_new___ns1__GetUnitPersonInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitPersonInfo_(soap, _p);
		_p->ns1__GetUnitPersonInfo = ns1__GetUnitPersonInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitPersonInfo_(struct soap*, const struct __ns1__GetUnitPersonInfo_ *, const char*, const char*);

inline int soap_write___ns1__GetUnitPersonInfo_(struct soap *soap, struct __ns1__GetUnitPersonInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitPersonInfo_(soap, p), 0) || ::soap_put___ns1__GetUnitPersonInfo_(soap, p, "-ns1:GetUnitPersonInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitPersonInfo_(struct soap *soap, const char *URL, struct __ns1__GetUnitPersonInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitPersonInfo_(soap, p), 0) || ::soap_put___ns1__GetUnitPersonInfo_(soap, p, "-ns1:GetUnitPersonInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitPersonInfo_(struct soap *soap, const char *URL, struct __ns1__GetUnitPersonInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitPersonInfo_(soap, p), 0) || ::soap_put___ns1__GetUnitPersonInfo_(soap, p, "-ns1:GetUnitPersonInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitPersonInfo_ * SOAP_FMAC4 soap_get___ns1__GetUnitPersonInfo_(struct soap*, struct __ns1__GetUnitPersonInfo_ *, const char*, const char*);

inline int soap_read___ns1__GetUnitPersonInfo_(struct soap *soap, struct __ns1__GetUnitPersonInfo_ *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitPersonInfo_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitPersonInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitPersonInfo_(struct soap *soap, const char *URL, struct __ns1__GetUnitPersonInfo_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitPersonInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitPersonInfo_(struct soap *soap, struct __ns1__GetUnitPersonInfo_ *p)
{
	if (::soap_read___ns1__GetUnitPersonInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitStruct__DEFINED
#define SOAP_TYPE___ns1__GetUnitStruct__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitStruct_(struct soap*, struct __ns1__GetUnitStruct_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitStruct_(struct soap*, const struct __ns1__GetUnitStruct_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitStruct_(struct soap*, const char*, int, const struct __ns1__GetUnitStruct_ *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitStruct_ * SOAP_FMAC4 soap_in___ns1__GetUnitStruct_(struct soap*, const char*, struct __ns1__GetUnitStruct_ *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitStruct_ * SOAP_FMAC2 soap_instantiate___ns1__GetUnitStruct_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitStruct_ * soap_new___ns1__GetUnitStruct_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitStruct_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitStruct_ * soap_new_req___ns1__GetUnitStruct_(
	struct soap *soap)
{
	struct __ns1__GetUnitStruct_ *_p = ::soap_new___ns1__GetUnitStruct_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStruct_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitStruct_ * soap_new_set___ns1__GetUnitStruct_(
	struct soap *soap,
	_ns1__GetUnitStruct *ns1__GetUnitStruct)
{
	struct __ns1__GetUnitStruct_ *_p = ::soap_new___ns1__GetUnitStruct_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStruct_(soap, _p);
		_p->ns1__GetUnitStruct = ns1__GetUnitStruct;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitStruct_(struct soap*, const struct __ns1__GetUnitStruct_ *, const char*, const char*);

inline int soap_write___ns1__GetUnitStruct_(struct soap *soap, struct __ns1__GetUnitStruct_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitStruct_(soap, p), 0) || ::soap_put___ns1__GetUnitStruct_(soap, p, "-ns1:GetUnitStruct", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitStruct_(struct soap *soap, const char *URL, struct __ns1__GetUnitStruct_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStruct_(soap, p), 0) || ::soap_put___ns1__GetUnitStruct_(soap, p, "-ns1:GetUnitStruct", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitStruct_(struct soap *soap, const char *URL, struct __ns1__GetUnitStruct_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStruct_(soap, p), 0) || ::soap_put___ns1__GetUnitStruct_(soap, p, "-ns1:GetUnitStruct", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitStruct_ * SOAP_FMAC4 soap_get___ns1__GetUnitStruct_(struct soap*, struct __ns1__GetUnitStruct_ *, const char*, const char*);

inline int soap_read___ns1__GetUnitStruct_(struct soap *soap, struct __ns1__GetUnitStruct_ *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitStruct_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitStruct_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitStruct_(struct soap *soap, const char *URL, struct __ns1__GetUnitStruct_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitStruct_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitStruct_(struct soap *soap, struct __ns1__GetUnitStruct_ *p)
{
	if (::soap_read___ns1__GetUnitStruct_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitStation__DEFINED
#define SOAP_TYPE___ns1__GetUnitStation__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitStation_(struct soap*, struct __ns1__GetUnitStation_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitStation_(struct soap*, const struct __ns1__GetUnitStation_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitStation_(struct soap*, const char*, int, const struct __ns1__GetUnitStation_ *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitStation_ * SOAP_FMAC4 soap_in___ns1__GetUnitStation_(struct soap*, const char*, struct __ns1__GetUnitStation_ *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitStation_ * SOAP_FMAC2 soap_instantiate___ns1__GetUnitStation_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitStation_ * soap_new___ns1__GetUnitStation_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitStation_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitStation_ * soap_new_req___ns1__GetUnitStation_(
	struct soap *soap)
{
	struct __ns1__GetUnitStation_ *_p = ::soap_new___ns1__GetUnitStation_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStation_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitStation_ * soap_new_set___ns1__GetUnitStation_(
	struct soap *soap,
	_ns1__GetUnitStation *ns1__GetUnitStation)
{
	struct __ns1__GetUnitStation_ *_p = ::soap_new___ns1__GetUnitStation_(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStation_(soap, _p);
		_p->ns1__GetUnitStation = ns1__GetUnitStation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitStation_(struct soap*, const struct __ns1__GetUnitStation_ *, const char*, const char*);

inline int soap_write___ns1__GetUnitStation_(struct soap *soap, struct __ns1__GetUnitStation_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitStation_(soap, p), 0) || ::soap_put___ns1__GetUnitStation_(soap, p, "-ns1:GetUnitStation", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitStation_(struct soap *soap, const char *URL, struct __ns1__GetUnitStation_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStation_(soap, p), 0) || ::soap_put___ns1__GetUnitStation_(soap, p, "-ns1:GetUnitStation", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitStation_(struct soap *soap, const char *URL, struct __ns1__GetUnitStation_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStation_(soap, p), 0) || ::soap_put___ns1__GetUnitStation_(soap, p, "-ns1:GetUnitStation", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitStation_ * SOAP_FMAC4 soap_get___ns1__GetUnitStation_(struct soap*, struct __ns1__GetUnitStation_ *, const char*, const char*);

inline int soap_read___ns1__GetUnitStation_(struct soap *soap, struct __ns1__GetUnitStation_ *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitStation_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitStation_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitStation_(struct soap *soap, const char *URL, struct __ns1__GetUnitStation_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitStation_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitStation_(struct soap *soap, struct __ns1__GetUnitStation_ *p)
{
	if (::soap_read___ns1__GetUnitStation_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDwList__DEFINED
#define SOAP_TYPE___ns1__GetDwList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDwList_(struct soap*, struct __ns1__GetDwList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDwList_(struct soap*, const struct __ns1__GetDwList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDwList_(struct soap*, const char*, int, const struct __ns1__GetDwList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDwList_ * SOAP_FMAC4 soap_in___ns1__GetDwList_(struct soap*, const char*, struct __ns1__GetDwList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDwList_ * SOAP_FMAC2 soap_instantiate___ns1__GetDwList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDwList_ * soap_new___ns1__GetDwList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDwList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDwList_ * soap_new_req___ns1__GetDwList_(
	struct soap *soap)
{
	struct __ns1__GetDwList_ *_p = ::soap_new___ns1__GetDwList_(soap);
	if (_p)
	{	::soap_default___ns1__GetDwList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDwList_ * soap_new_set___ns1__GetDwList_(
	struct soap *soap,
	_ns1__GetDwList *ns1__GetDwList)
{
	struct __ns1__GetDwList_ *_p = ::soap_new___ns1__GetDwList_(soap);
	if (_p)
	{	::soap_default___ns1__GetDwList_(soap, _p);
		_p->ns1__GetDwList = ns1__GetDwList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDwList_(struct soap*, const struct __ns1__GetDwList_ *, const char*, const char*);

inline int soap_write___ns1__GetDwList_(struct soap *soap, struct __ns1__GetDwList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDwList_(soap, p), 0) || ::soap_put___ns1__GetDwList_(soap, p, "-ns1:GetDwList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDwList_(struct soap *soap, const char *URL, struct __ns1__GetDwList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwList_(soap, p), 0) || ::soap_put___ns1__GetDwList_(soap, p, "-ns1:GetDwList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDwList_(struct soap *soap, const char *URL, struct __ns1__GetDwList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwList_(soap, p), 0) || ::soap_put___ns1__GetDwList_(soap, p, "-ns1:GetDwList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDwList_ * SOAP_FMAC4 soap_get___ns1__GetDwList_(struct soap*, struct __ns1__GetDwList_ *, const char*, const char*);

inline int soap_read___ns1__GetDwList_(struct soap *soap, struct __ns1__GetDwList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDwList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDwList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDwList_(struct soap *soap, const char *URL, struct __ns1__GetDwList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDwList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDwList_(struct soap *soap, struct __ns1__GetDwList_ *p)
{
	if (::soap_read___ns1__GetDwList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetOpenFireInfo__DEFINED
#define SOAP_TYPE___ns1__GetOpenFireInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetOpenFireInfo_(struct soap*, struct __ns1__GetOpenFireInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetOpenFireInfo_(struct soap*, const struct __ns1__GetOpenFireInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetOpenFireInfo_(struct soap*, const char*, int, const struct __ns1__GetOpenFireInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetOpenFireInfo_ * SOAP_FMAC4 soap_in___ns1__GetOpenFireInfo_(struct soap*, const char*, struct __ns1__GetOpenFireInfo_ *, const char*);
SOAP_FMAC1 struct __ns1__GetOpenFireInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetOpenFireInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetOpenFireInfo_ * soap_new___ns1__GetOpenFireInfo_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetOpenFireInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetOpenFireInfo_ * soap_new_req___ns1__GetOpenFireInfo_(
	struct soap *soap)
{
	struct __ns1__GetOpenFireInfo_ *_p = ::soap_new___ns1__GetOpenFireInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetOpenFireInfo_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetOpenFireInfo_ * soap_new_set___ns1__GetOpenFireInfo_(
	struct soap *soap,
	_ns1__GetOpenFireInfo *ns1__GetOpenFireInfo)
{
	struct __ns1__GetOpenFireInfo_ *_p = ::soap_new___ns1__GetOpenFireInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetOpenFireInfo_(soap, _p);
		_p->ns1__GetOpenFireInfo = ns1__GetOpenFireInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetOpenFireInfo_(struct soap*, const struct __ns1__GetOpenFireInfo_ *, const char*, const char*);

inline int soap_write___ns1__GetOpenFireInfo_(struct soap *soap, struct __ns1__GetOpenFireInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetOpenFireInfo_(soap, p), 0) || ::soap_put___ns1__GetOpenFireInfo_(soap, p, "-ns1:GetOpenFireInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetOpenFireInfo_(struct soap *soap, const char *URL, struct __ns1__GetOpenFireInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOpenFireInfo_(soap, p), 0) || ::soap_put___ns1__GetOpenFireInfo_(soap, p, "-ns1:GetOpenFireInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetOpenFireInfo_(struct soap *soap, const char *URL, struct __ns1__GetOpenFireInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOpenFireInfo_(soap, p), 0) || ::soap_put___ns1__GetOpenFireInfo_(soap, p, "-ns1:GetOpenFireInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetOpenFireInfo_ * SOAP_FMAC4 soap_get___ns1__GetOpenFireInfo_(struct soap*, struct __ns1__GetOpenFireInfo_ *, const char*, const char*);

inline int soap_read___ns1__GetOpenFireInfo_(struct soap *soap, struct __ns1__GetOpenFireInfo_ *p)
{
	if (p)
	{	::soap_default___ns1__GetOpenFireInfo_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetOpenFireInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetOpenFireInfo_(struct soap *soap, const char *URL, struct __ns1__GetOpenFireInfo_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetOpenFireInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetOpenFireInfo_(struct soap *soap, struct __ns1__GetOpenFireInfo_ *p)
{
	if (::soap_read___ns1__GetOpenFireInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__MobDownLoadData__DEFINED
#define SOAP_TYPE___ns1__MobDownLoadData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__MobDownLoadData_(struct soap*, struct __ns1__MobDownLoadData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__MobDownLoadData_(struct soap*, const struct __ns1__MobDownLoadData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__MobDownLoadData_(struct soap*, const char*, int, const struct __ns1__MobDownLoadData_ *, const char*);
SOAP_FMAC3 struct __ns1__MobDownLoadData_ * SOAP_FMAC4 soap_in___ns1__MobDownLoadData_(struct soap*, const char*, struct __ns1__MobDownLoadData_ *, const char*);
SOAP_FMAC1 struct __ns1__MobDownLoadData_ * SOAP_FMAC2 soap_instantiate___ns1__MobDownLoadData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__MobDownLoadData_ * soap_new___ns1__MobDownLoadData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__MobDownLoadData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__MobDownLoadData_ * soap_new_req___ns1__MobDownLoadData_(
	struct soap *soap)
{
	struct __ns1__MobDownLoadData_ *_p = ::soap_new___ns1__MobDownLoadData_(soap);
	if (_p)
	{	::soap_default___ns1__MobDownLoadData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__MobDownLoadData_ * soap_new_set___ns1__MobDownLoadData_(
	struct soap *soap,
	_ns1__MobDownLoadData *ns1__MobDownLoadData)
{
	struct __ns1__MobDownLoadData_ *_p = ::soap_new___ns1__MobDownLoadData_(soap);
	if (_p)
	{	::soap_default___ns1__MobDownLoadData_(soap, _p);
		_p->ns1__MobDownLoadData = ns1__MobDownLoadData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__MobDownLoadData_(struct soap*, const struct __ns1__MobDownLoadData_ *, const char*, const char*);

inline int soap_write___ns1__MobDownLoadData_(struct soap *soap, struct __ns1__MobDownLoadData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__MobDownLoadData_(soap, p), 0) || ::soap_put___ns1__MobDownLoadData_(soap, p, "-ns1:MobDownLoadData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__MobDownLoadData_(struct soap *soap, const char *URL, struct __ns1__MobDownLoadData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MobDownLoadData_(soap, p), 0) || ::soap_put___ns1__MobDownLoadData_(soap, p, "-ns1:MobDownLoadData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__MobDownLoadData_(struct soap *soap, const char *URL, struct __ns1__MobDownLoadData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MobDownLoadData_(soap, p), 0) || ::soap_put___ns1__MobDownLoadData_(soap, p, "-ns1:MobDownLoadData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__MobDownLoadData_ * SOAP_FMAC4 soap_get___ns1__MobDownLoadData_(struct soap*, struct __ns1__MobDownLoadData_ *, const char*, const char*);

inline int soap_read___ns1__MobDownLoadData_(struct soap *soap, struct __ns1__MobDownLoadData_ *p)
{
	if (p)
	{	::soap_default___ns1__MobDownLoadData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__MobDownLoadData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__MobDownLoadData_(struct soap *soap, const char *URL, struct __ns1__MobDownLoadData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__MobDownLoadData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__MobDownLoadData_(struct soap *soap, struct __ns1__MobDownLoadData_ *p)
{
	if (::soap_read___ns1__MobDownLoadData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownLoadMobGPSData__DEFINED
#define SOAP_TYPE___ns1__DownLoadMobGPSData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownLoadMobGPSData_(struct soap*, struct __ns1__DownLoadMobGPSData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownLoadMobGPSData_(struct soap*, const struct __ns1__DownLoadMobGPSData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownLoadMobGPSData_(struct soap*, const char*, int, const struct __ns1__DownLoadMobGPSData_ *, const char*);
SOAP_FMAC3 struct __ns1__DownLoadMobGPSData_ * SOAP_FMAC4 soap_in___ns1__DownLoadMobGPSData_(struct soap*, const char*, struct __ns1__DownLoadMobGPSData_ *, const char*);
SOAP_FMAC1 struct __ns1__DownLoadMobGPSData_ * SOAP_FMAC2 soap_instantiate___ns1__DownLoadMobGPSData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownLoadMobGPSData_ * soap_new___ns1__DownLoadMobGPSData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownLoadMobGPSData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownLoadMobGPSData_ * soap_new_req___ns1__DownLoadMobGPSData_(
	struct soap *soap)
{
	struct __ns1__DownLoadMobGPSData_ *_p = ::soap_new___ns1__DownLoadMobGPSData_(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadMobGPSData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownLoadMobGPSData_ * soap_new_set___ns1__DownLoadMobGPSData_(
	struct soap *soap,
	_ns1__DownLoadMobGPSData *ns1__DownLoadMobGPSData)
{
	struct __ns1__DownLoadMobGPSData_ *_p = ::soap_new___ns1__DownLoadMobGPSData_(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadMobGPSData_(soap, _p);
		_p->ns1__DownLoadMobGPSData = ns1__DownLoadMobGPSData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownLoadMobGPSData_(struct soap*, const struct __ns1__DownLoadMobGPSData_ *, const char*, const char*);

inline int soap_write___ns1__DownLoadMobGPSData_(struct soap *soap, struct __ns1__DownLoadMobGPSData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownLoadMobGPSData_(soap, p), 0) || ::soap_put___ns1__DownLoadMobGPSData_(soap, p, "-ns1:DownLoadMobGPSData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownLoadMobGPSData_(struct soap *soap, const char *URL, struct __ns1__DownLoadMobGPSData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadMobGPSData_(soap, p), 0) || ::soap_put___ns1__DownLoadMobGPSData_(soap, p, "-ns1:DownLoadMobGPSData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownLoadMobGPSData_(struct soap *soap, const char *URL, struct __ns1__DownLoadMobGPSData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadMobGPSData_(soap, p), 0) || ::soap_put___ns1__DownLoadMobGPSData_(soap, p, "-ns1:DownLoadMobGPSData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownLoadMobGPSData_ * SOAP_FMAC4 soap_get___ns1__DownLoadMobGPSData_(struct soap*, struct __ns1__DownLoadMobGPSData_ *, const char*, const char*);

inline int soap_read___ns1__DownLoadMobGPSData_(struct soap *soap, struct __ns1__DownLoadMobGPSData_ *p)
{
	if (p)
	{	::soap_default___ns1__DownLoadMobGPSData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownLoadMobGPSData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownLoadMobGPSData_(struct soap *soap, const char *URL, struct __ns1__DownLoadMobGPSData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownLoadMobGPSData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownLoadMobGPSData_(struct soap *soap, struct __ns1__DownLoadMobGPSData_ *p)
{
	if (::soap_read___ns1__DownLoadMobGPSData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDcsData__DEFINED
#define SOAP_TYPE___ns1__GetDcsData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDcsData_(struct soap*, struct __ns1__GetDcsData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDcsData_(struct soap*, const struct __ns1__GetDcsData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDcsData_(struct soap*, const char*, int, const struct __ns1__GetDcsData_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDcsData_ * SOAP_FMAC4 soap_in___ns1__GetDcsData_(struct soap*, const char*, struct __ns1__GetDcsData_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDcsData_ * SOAP_FMAC2 soap_instantiate___ns1__GetDcsData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDcsData_ * soap_new___ns1__GetDcsData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDcsData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDcsData_ * soap_new_req___ns1__GetDcsData_(
	struct soap *soap)
{
	struct __ns1__GetDcsData_ *_p = ::soap_new___ns1__GetDcsData_(soap);
	if (_p)
	{	::soap_default___ns1__GetDcsData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDcsData_ * soap_new_set___ns1__GetDcsData_(
	struct soap *soap,
	_ns1__GetDcsData *ns1__GetDcsData)
{
	struct __ns1__GetDcsData_ *_p = ::soap_new___ns1__GetDcsData_(soap);
	if (_p)
	{	::soap_default___ns1__GetDcsData_(soap, _p);
		_p->ns1__GetDcsData = ns1__GetDcsData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDcsData_(struct soap*, const struct __ns1__GetDcsData_ *, const char*, const char*);

inline int soap_write___ns1__GetDcsData_(struct soap *soap, struct __ns1__GetDcsData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDcsData_(soap, p), 0) || ::soap_put___ns1__GetDcsData_(soap, p, "-ns1:GetDcsData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDcsData_(struct soap *soap, const char *URL, struct __ns1__GetDcsData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDcsData_(soap, p), 0) || ::soap_put___ns1__GetDcsData_(soap, p, "-ns1:GetDcsData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDcsData_(struct soap *soap, const char *URL, struct __ns1__GetDcsData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDcsData_(soap, p), 0) || ::soap_put___ns1__GetDcsData_(soap, p, "-ns1:GetDcsData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDcsData_ * SOAP_FMAC4 soap_get___ns1__GetDcsData_(struct soap*, struct __ns1__GetDcsData_ *, const char*, const char*);

inline int soap_read___ns1__GetDcsData_(struct soap *soap, struct __ns1__GetDcsData_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDcsData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDcsData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDcsData_(struct soap *soap, const char *URL, struct __ns1__GetDcsData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDcsData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDcsData_(struct soap *soap, struct __ns1__GetDcsData_ *p)
{
	if (::soap_read___ns1__GetDcsData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetBgImg__DEFINED
#define SOAP_TYPE___ns1__GetBgImg__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetBgImg_(struct soap*, struct __ns1__GetBgImg_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetBgImg_(struct soap*, const struct __ns1__GetBgImg_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetBgImg_(struct soap*, const char*, int, const struct __ns1__GetBgImg_ *, const char*);
SOAP_FMAC3 struct __ns1__GetBgImg_ * SOAP_FMAC4 soap_in___ns1__GetBgImg_(struct soap*, const char*, struct __ns1__GetBgImg_ *, const char*);
SOAP_FMAC1 struct __ns1__GetBgImg_ * SOAP_FMAC2 soap_instantiate___ns1__GetBgImg_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetBgImg_ * soap_new___ns1__GetBgImg_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetBgImg_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetBgImg_ * soap_new_req___ns1__GetBgImg_(
	struct soap *soap)
{
	struct __ns1__GetBgImg_ *_p = ::soap_new___ns1__GetBgImg_(soap);
	if (_p)
	{	::soap_default___ns1__GetBgImg_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetBgImg_ * soap_new_set___ns1__GetBgImg_(
	struct soap *soap,
	_ns1__GetBgImg *ns1__GetBgImg)
{
	struct __ns1__GetBgImg_ *_p = ::soap_new___ns1__GetBgImg_(soap);
	if (_p)
	{	::soap_default___ns1__GetBgImg_(soap, _p);
		_p->ns1__GetBgImg = ns1__GetBgImg;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetBgImg_(struct soap*, const struct __ns1__GetBgImg_ *, const char*, const char*);

inline int soap_write___ns1__GetBgImg_(struct soap *soap, struct __ns1__GetBgImg_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetBgImg_(soap, p), 0) || ::soap_put___ns1__GetBgImg_(soap, p, "-ns1:GetBgImg", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetBgImg_(struct soap *soap, const char *URL, struct __ns1__GetBgImg_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetBgImg_(soap, p), 0) || ::soap_put___ns1__GetBgImg_(soap, p, "-ns1:GetBgImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetBgImg_(struct soap *soap, const char *URL, struct __ns1__GetBgImg_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetBgImg_(soap, p), 0) || ::soap_put___ns1__GetBgImg_(soap, p, "-ns1:GetBgImg", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetBgImg_ * SOAP_FMAC4 soap_get___ns1__GetBgImg_(struct soap*, struct __ns1__GetBgImg_ *, const char*, const char*);

inline int soap_read___ns1__GetBgImg_(struct soap *soap, struct __ns1__GetBgImg_ *p)
{
	if (p)
	{	::soap_default___ns1__GetBgImg_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetBgImg_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetBgImg_(struct soap *soap, const char *URL, struct __ns1__GetBgImg_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetBgImg_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetBgImg_(struct soap *soap, struct __ns1__GetBgImg_ *p)
{
	if (::soap_read___ns1__GetBgImg_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDevPic__DEFINED
#define SOAP_TYPE___ns1__GetDevPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDevPic_(struct soap*, struct __ns1__GetDevPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDevPic_(struct soap*, const struct __ns1__GetDevPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDevPic_(struct soap*, const char*, int, const struct __ns1__GetDevPic_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDevPic_ * SOAP_FMAC4 soap_in___ns1__GetDevPic_(struct soap*, const char*, struct __ns1__GetDevPic_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDevPic_ * SOAP_FMAC2 soap_instantiate___ns1__GetDevPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDevPic_ * soap_new___ns1__GetDevPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDevPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDevPic_ * soap_new_req___ns1__GetDevPic_(
	struct soap *soap)
{
	struct __ns1__GetDevPic_ *_p = ::soap_new___ns1__GetDevPic_(soap);
	if (_p)
	{	::soap_default___ns1__GetDevPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDevPic_ * soap_new_set___ns1__GetDevPic_(
	struct soap *soap,
	_ns1__GetDevPic *ns1__GetDevPic)
{
	struct __ns1__GetDevPic_ *_p = ::soap_new___ns1__GetDevPic_(soap);
	if (_p)
	{	::soap_default___ns1__GetDevPic_(soap, _p);
		_p->ns1__GetDevPic = ns1__GetDevPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDevPic_(struct soap*, const struct __ns1__GetDevPic_ *, const char*, const char*);

inline int soap_write___ns1__GetDevPic_(struct soap *soap, struct __ns1__GetDevPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDevPic_(soap, p), 0) || ::soap_put___ns1__GetDevPic_(soap, p, "-ns1:GetDevPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDevPic_(struct soap *soap, const char *URL, struct __ns1__GetDevPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevPic_(soap, p), 0) || ::soap_put___ns1__GetDevPic_(soap, p, "-ns1:GetDevPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDevPic_(struct soap *soap, const char *URL, struct __ns1__GetDevPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevPic_(soap, p), 0) || ::soap_put___ns1__GetDevPic_(soap, p, "-ns1:GetDevPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDevPic_ * SOAP_FMAC4 soap_get___ns1__GetDevPic_(struct soap*, struct __ns1__GetDevPic_ *, const char*, const char*);

inline int soap_read___ns1__GetDevPic_(struct soap *soap, struct __ns1__GetDevPic_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDevPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDevPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDevPic_(struct soap *soap, const char *URL, struct __ns1__GetDevPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDevPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDevPic_(struct soap *soap, struct __ns1__GetDevPic_ *p)
{
	if (::soap_read___ns1__GetDevPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetJxPic__DEFINED
#define SOAP_TYPE___ns1__GetJxPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJxPic_(struct soap*, struct __ns1__GetJxPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJxPic_(struct soap*, const struct __ns1__GetJxPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJxPic_(struct soap*, const char*, int, const struct __ns1__GetJxPic_ *, const char*);
SOAP_FMAC3 struct __ns1__GetJxPic_ * SOAP_FMAC4 soap_in___ns1__GetJxPic_(struct soap*, const char*, struct __ns1__GetJxPic_ *, const char*);
SOAP_FMAC1 struct __ns1__GetJxPic_ * SOAP_FMAC2 soap_instantiate___ns1__GetJxPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJxPic_ * soap_new___ns1__GetJxPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetJxPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetJxPic_ * soap_new_req___ns1__GetJxPic_(
	struct soap *soap)
{
	struct __ns1__GetJxPic_ *_p = ::soap_new___ns1__GetJxPic_(soap);
	if (_p)
	{	::soap_default___ns1__GetJxPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetJxPic_ * soap_new_set___ns1__GetJxPic_(
	struct soap *soap,
	_ns1__GetJxPic *ns1__GetJxPic)
{
	struct __ns1__GetJxPic_ *_p = ::soap_new___ns1__GetJxPic_(soap);
	if (_p)
	{	::soap_default___ns1__GetJxPic_(soap, _p);
		_p->ns1__GetJxPic = ns1__GetJxPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJxPic_(struct soap*, const struct __ns1__GetJxPic_ *, const char*, const char*);

inline int soap_write___ns1__GetJxPic_(struct soap *soap, struct __ns1__GetJxPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetJxPic_(soap, p), 0) || ::soap_put___ns1__GetJxPic_(soap, p, "-ns1:GetJxPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetJxPic_(struct soap *soap, const char *URL, struct __ns1__GetJxPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxPic_(soap, p), 0) || ::soap_put___ns1__GetJxPic_(soap, p, "-ns1:GetJxPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetJxPic_(struct soap *soap, const char *URL, struct __ns1__GetJxPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxPic_(soap, p), 0) || ::soap_put___ns1__GetJxPic_(soap, p, "-ns1:GetJxPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetJxPic_ * SOAP_FMAC4 soap_get___ns1__GetJxPic_(struct soap*, struct __ns1__GetJxPic_ *, const char*, const char*);

inline int soap_read___ns1__GetJxPic_(struct soap *soap, struct __ns1__GetJxPic_ *p)
{
	if (p)
	{	::soap_default___ns1__GetJxPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetJxPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetJxPic_(struct soap *soap, const char *URL, struct __ns1__GetJxPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetJxPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetJxPic_(struct soap *soap, struct __ns1__GetJxPic_ *p)
{
	if (::soap_read___ns1__GetJxPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetStationJxData__DEFINED
#define SOAP_TYPE___ns1__GetStationJxData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetStationJxData_(struct soap*, struct __ns1__GetStationJxData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetStationJxData_(struct soap*, const struct __ns1__GetStationJxData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetStationJxData_(struct soap*, const char*, int, const struct __ns1__GetStationJxData_ *, const char*);
SOAP_FMAC3 struct __ns1__GetStationJxData_ * SOAP_FMAC4 soap_in___ns1__GetStationJxData_(struct soap*, const char*, struct __ns1__GetStationJxData_ *, const char*);
SOAP_FMAC1 struct __ns1__GetStationJxData_ * SOAP_FMAC2 soap_instantiate___ns1__GetStationJxData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetStationJxData_ * soap_new___ns1__GetStationJxData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetStationJxData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetStationJxData_ * soap_new_req___ns1__GetStationJxData_(
	struct soap *soap)
{
	struct __ns1__GetStationJxData_ *_p = ::soap_new___ns1__GetStationJxData_(soap);
	if (_p)
	{	::soap_default___ns1__GetStationJxData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetStationJxData_ * soap_new_set___ns1__GetStationJxData_(
	struct soap *soap,
	_ns1__GetStationJxData *ns1__GetStationJxData)
{
	struct __ns1__GetStationJxData_ *_p = ::soap_new___ns1__GetStationJxData_(soap);
	if (_p)
	{	::soap_default___ns1__GetStationJxData_(soap, _p);
		_p->ns1__GetStationJxData = ns1__GetStationJxData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetStationJxData_(struct soap*, const struct __ns1__GetStationJxData_ *, const char*, const char*);

inline int soap_write___ns1__GetStationJxData_(struct soap *soap, struct __ns1__GetStationJxData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetStationJxData_(soap, p), 0) || ::soap_put___ns1__GetStationJxData_(soap, p, "-ns1:GetStationJxData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetStationJxData_(struct soap *soap, const char *URL, struct __ns1__GetStationJxData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetStationJxData_(soap, p), 0) || ::soap_put___ns1__GetStationJxData_(soap, p, "-ns1:GetStationJxData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetStationJxData_(struct soap *soap, const char *URL, struct __ns1__GetStationJxData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetStationJxData_(soap, p), 0) || ::soap_put___ns1__GetStationJxData_(soap, p, "-ns1:GetStationJxData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetStationJxData_ * SOAP_FMAC4 soap_get___ns1__GetStationJxData_(struct soap*, struct __ns1__GetStationJxData_ *, const char*, const char*);

inline int soap_read___ns1__GetStationJxData_(struct soap *soap, struct __ns1__GetStationJxData_ *p)
{
	if (p)
	{	::soap_default___ns1__GetStationJxData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetStationJxData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetStationJxData_(struct soap *soap, const char *URL, struct __ns1__GetStationJxData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetStationJxData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetStationJxData_(struct soap *soap, struct __ns1__GetStationJxData_ *p)
{
	if (::soap_read___ns1__GetStationJxData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetJxData__DEFINED
#define SOAP_TYPE___ns1__GetJxData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJxData_(struct soap*, struct __ns1__GetJxData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJxData_(struct soap*, const struct __ns1__GetJxData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJxData_(struct soap*, const char*, int, const struct __ns1__GetJxData_ *, const char*);
SOAP_FMAC3 struct __ns1__GetJxData_ * SOAP_FMAC4 soap_in___ns1__GetJxData_(struct soap*, const char*, struct __ns1__GetJxData_ *, const char*);
SOAP_FMAC1 struct __ns1__GetJxData_ * SOAP_FMAC2 soap_instantiate___ns1__GetJxData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJxData_ * soap_new___ns1__GetJxData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetJxData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetJxData_ * soap_new_req___ns1__GetJxData_(
	struct soap *soap)
{
	struct __ns1__GetJxData_ *_p = ::soap_new___ns1__GetJxData_(soap);
	if (_p)
	{	::soap_default___ns1__GetJxData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetJxData_ * soap_new_set___ns1__GetJxData_(
	struct soap *soap,
	_ns1__GetJxData *ns1__GetJxData)
{
	struct __ns1__GetJxData_ *_p = ::soap_new___ns1__GetJxData_(soap);
	if (_p)
	{	::soap_default___ns1__GetJxData_(soap, _p);
		_p->ns1__GetJxData = ns1__GetJxData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJxData_(struct soap*, const struct __ns1__GetJxData_ *, const char*, const char*);

inline int soap_write___ns1__GetJxData_(struct soap *soap, struct __ns1__GetJxData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetJxData_(soap, p), 0) || ::soap_put___ns1__GetJxData_(soap, p, "-ns1:GetJxData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetJxData_(struct soap *soap, const char *URL, struct __ns1__GetJxData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxData_(soap, p), 0) || ::soap_put___ns1__GetJxData_(soap, p, "-ns1:GetJxData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetJxData_(struct soap *soap, const char *URL, struct __ns1__GetJxData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxData_(soap, p), 0) || ::soap_put___ns1__GetJxData_(soap, p, "-ns1:GetJxData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetJxData_ * SOAP_FMAC4 soap_get___ns1__GetJxData_(struct soap*, struct __ns1__GetJxData_ *, const char*, const char*);

inline int soap_read___ns1__GetJxData_(struct soap *soap, struct __ns1__GetJxData_ *p)
{
	if (p)
	{	::soap_default___ns1__GetJxData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetJxData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetJxData_(struct soap *soap, const char *URL, struct __ns1__GetJxData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetJxData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetJxData_(struct soap *soap, struct __ns1__GetJxData_ *p)
{
	if (::soap_read___ns1__GetJxData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDeviceXj__DEFINED
#define SOAP_TYPE___ns1__GetDeviceXj__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDeviceXj_(struct soap*, struct __ns1__GetDeviceXj_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDeviceXj_(struct soap*, const struct __ns1__GetDeviceXj_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDeviceXj_(struct soap*, const char*, int, const struct __ns1__GetDeviceXj_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDeviceXj_ * SOAP_FMAC4 soap_in___ns1__GetDeviceXj_(struct soap*, const char*, struct __ns1__GetDeviceXj_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDeviceXj_ * SOAP_FMAC2 soap_instantiate___ns1__GetDeviceXj_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDeviceXj_ * soap_new___ns1__GetDeviceXj_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDeviceXj_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDeviceXj_ * soap_new_req___ns1__GetDeviceXj_(
	struct soap *soap)
{
	struct __ns1__GetDeviceXj_ *_p = ::soap_new___ns1__GetDeviceXj_(soap);
	if (_p)
	{	::soap_default___ns1__GetDeviceXj_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDeviceXj_ * soap_new_set___ns1__GetDeviceXj_(
	struct soap *soap,
	_ns1__GetDeviceXj *ns1__GetDeviceXj)
{
	struct __ns1__GetDeviceXj_ *_p = ::soap_new___ns1__GetDeviceXj_(soap);
	if (_p)
	{	::soap_default___ns1__GetDeviceXj_(soap, _p);
		_p->ns1__GetDeviceXj = ns1__GetDeviceXj;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDeviceXj_(struct soap*, const struct __ns1__GetDeviceXj_ *, const char*, const char*);

inline int soap_write___ns1__GetDeviceXj_(struct soap *soap, struct __ns1__GetDeviceXj_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDeviceXj_(soap, p), 0) || ::soap_put___ns1__GetDeviceXj_(soap, p, "-ns1:GetDeviceXj", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDeviceXj_(struct soap *soap, const char *URL, struct __ns1__GetDeviceXj_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDeviceXj_(soap, p), 0) || ::soap_put___ns1__GetDeviceXj_(soap, p, "-ns1:GetDeviceXj", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDeviceXj_(struct soap *soap, const char *URL, struct __ns1__GetDeviceXj_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDeviceXj_(soap, p), 0) || ::soap_put___ns1__GetDeviceXj_(soap, p, "-ns1:GetDeviceXj", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDeviceXj_ * SOAP_FMAC4 soap_get___ns1__GetDeviceXj_(struct soap*, struct __ns1__GetDeviceXj_ *, const char*, const char*);

inline int soap_read___ns1__GetDeviceXj_(struct soap *soap, struct __ns1__GetDeviceXj_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDeviceXj_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDeviceXj_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDeviceXj_(struct soap *soap, const char *URL, struct __ns1__GetDeviceXj_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDeviceXj_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDeviceXj_(struct soap *soap, struct __ns1__GetDeviceXj_ *p)
{
	if (::soap_read___ns1__GetDeviceXj_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDwPic__DEFINED
#define SOAP_TYPE___ns1__GetDwPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDwPic_(struct soap*, struct __ns1__GetDwPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDwPic_(struct soap*, const struct __ns1__GetDwPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDwPic_(struct soap*, const char*, int, const struct __ns1__GetDwPic_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDwPic_ * SOAP_FMAC4 soap_in___ns1__GetDwPic_(struct soap*, const char*, struct __ns1__GetDwPic_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDwPic_ * SOAP_FMAC2 soap_instantiate___ns1__GetDwPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDwPic_ * soap_new___ns1__GetDwPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDwPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDwPic_ * soap_new_req___ns1__GetDwPic_(
	struct soap *soap)
{
	struct __ns1__GetDwPic_ *_p = ::soap_new___ns1__GetDwPic_(soap);
	if (_p)
	{	::soap_default___ns1__GetDwPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDwPic_ * soap_new_set___ns1__GetDwPic_(
	struct soap *soap,
	_ns1__GetDwPic *ns1__GetDwPic)
{
	struct __ns1__GetDwPic_ *_p = ::soap_new___ns1__GetDwPic_(soap);
	if (_p)
	{	::soap_default___ns1__GetDwPic_(soap, _p);
		_p->ns1__GetDwPic = ns1__GetDwPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDwPic_(struct soap*, const struct __ns1__GetDwPic_ *, const char*, const char*);

inline int soap_write___ns1__GetDwPic_(struct soap *soap, struct __ns1__GetDwPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDwPic_(soap, p), 0) || ::soap_put___ns1__GetDwPic_(soap, p, "-ns1:GetDwPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDwPic_(struct soap *soap, const char *URL, struct __ns1__GetDwPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwPic_(soap, p), 0) || ::soap_put___ns1__GetDwPic_(soap, p, "-ns1:GetDwPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDwPic_(struct soap *soap, const char *URL, struct __ns1__GetDwPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwPic_(soap, p), 0) || ::soap_put___ns1__GetDwPic_(soap, p, "-ns1:GetDwPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDwPic_ * SOAP_FMAC4 soap_get___ns1__GetDwPic_(struct soap*, struct __ns1__GetDwPic_ *, const char*, const char*);

inline int soap_read___ns1__GetDwPic_(struct soap *soap, struct __ns1__GetDwPic_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDwPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDwPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDwPic_(struct soap *soap, const char *URL, struct __ns1__GetDwPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDwPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDwPic_(struct soap *soap, struct __ns1__GetDwPic_ *p)
{
	if (::soap_read___ns1__GetDwPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDwInfo__DEFINED
#define SOAP_TYPE___ns1__GetDwInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDwInfo_(struct soap*, struct __ns1__GetDwInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDwInfo_(struct soap*, const struct __ns1__GetDwInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDwInfo_(struct soap*, const char*, int, const struct __ns1__GetDwInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDwInfo_ * SOAP_FMAC4 soap_in___ns1__GetDwInfo_(struct soap*, const char*, struct __ns1__GetDwInfo_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDwInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetDwInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDwInfo_ * soap_new___ns1__GetDwInfo_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDwInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDwInfo_ * soap_new_req___ns1__GetDwInfo_(
	struct soap *soap)
{
	struct __ns1__GetDwInfo_ *_p = ::soap_new___ns1__GetDwInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetDwInfo_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDwInfo_ * soap_new_set___ns1__GetDwInfo_(
	struct soap *soap,
	_ns1__GetDwInfo *ns1__GetDwInfo)
{
	struct __ns1__GetDwInfo_ *_p = ::soap_new___ns1__GetDwInfo_(soap);
	if (_p)
	{	::soap_default___ns1__GetDwInfo_(soap, _p);
		_p->ns1__GetDwInfo = ns1__GetDwInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDwInfo_(struct soap*, const struct __ns1__GetDwInfo_ *, const char*, const char*);

inline int soap_write___ns1__GetDwInfo_(struct soap *soap, struct __ns1__GetDwInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDwInfo_(soap, p), 0) || ::soap_put___ns1__GetDwInfo_(soap, p, "-ns1:GetDwInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDwInfo_(struct soap *soap, const char *URL, struct __ns1__GetDwInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwInfo_(soap, p), 0) || ::soap_put___ns1__GetDwInfo_(soap, p, "-ns1:GetDwInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDwInfo_(struct soap *soap, const char *URL, struct __ns1__GetDwInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwInfo_(soap, p), 0) || ::soap_put___ns1__GetDwInfo_(soap, p, "-ns1:GetDwInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDwInfo_ * SOAP_FMAC4 soap_get___ns1__GetDwInfo_(struct soap*, struct __ns1__GetDwInfo_ *, const char*, const char*);

inline int soap_read___ns1__GetDwInfo_(struct soap *soap, struct __ns1__GetDwInfo_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDwInfo_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDwInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDwInfo_(struct soap *soap, const char *URL, struct __ns1__GetDwInfo_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDwInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDwInfo_(struct soap *soap, struct __ns1__GetDwInfo_ *p)
{
	if (::soap_read___ns1__GetDwInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetPicNames__DEFINED
#define SOAP_TYPE___ns1__GetPicNames__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPicNames_(struct soap*, struct __ns1__GetPicNames_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPicNames_(struct soap*, const struct __ns1__GetPicNames_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPicNames_(struct soap*, const char*, int, const struct __ns1__GetPicNames_ *, const char*);
SOAP_FMAC3 struct __ns1__GetPicNames_ * SOAP_FMAC4 soap_in___ns1__GetPicNames_(struct soap*, const char*, struct __ns1__GetPicNames_ *, const char*);
SOAP_FMAC1 struct __ns1__GetPicNames_ * SOAP_FMAC2 soap_instantiate___ns1__GetPicNames_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPicNames_ * soap_new___ns1__GetPicNames_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetPicNames_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetPicNames_ * soap_new_req___ns1__GetPicNames_(
	struct soap *soap)
{
	struct __ns1__GetPicNames_ *_p = ::soap_new___ns1__GetPicNames_(soap);
	if (_p)
	{	::soap_default___ns1__GetPicNames_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetPicNames_ * soap_new_set___ns1__GetPicNames_(
	struct soap *soap,
	_ns1__GetPicNames *ns1__GetPicNames)
{
	struct __ns1__GetPicNames_ *_p = ::soap_new___ns1__GetPicNames_(soap);
	if (_p)
	{	::soap_default___ns1__GetPicNames_(soap, _p);
		_p->ns1__GetPicNames = ns1__GetPicNames;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPicNames_(struct soap*, const struct __ns1__GetPicNames_ *, const char*, const char*);

inline int soap_write___ns1__GetPicNames_(struct soap *soap, struct __ns1__GetPicNames_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetPicNames_(soap, p), 0) || ::soap_put___ns1__GetPicNames_(soap, p, "-ns1:GetPicNames", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetPicNames_(struct soap *soap, const char *URL, struct __ns1__GetPicNames_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPicNames_(soap, p), 0) || ::soap_put___ns1__GetPicNames_(soap, p, "-ns1:GetPicNames", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetPicNames_(struct soap *soap, const char *URL, struct __ns1__GetPicNames_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPicNames_(soap, p), 0) || ::soap_put___ns1__GetPicNames_(soap, p, "-ns1:GetPicNames", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetPicNames_ * SOAP_FMAC4 soap_get___ns1__GetPicNames_(struct soap*, struct __ns1__GetPicNames_ *, const char*, const char*);

inline int soap_read___ns1__GetPicNames_(struct soap *soap, struct __ns1__GetPicNames_ *p)
{
	if (p)
	{	::soap_default___ns1__GetPicNames_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetPicNames_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetPicNames_(struct soap *soap, const char *URL, struct __ns1__GetPicNames_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetPicNames_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetPicNames_(struct soap *soap, struct __ns1__GetPicNames_ *p)
{
	if (::soap_read___ns1__GetPicNames_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownloadPic__DEFINED
#define SOAP_TYPE___ns1__DownloadPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownloadPic_(struct soap*, struct __ns1__DownloadPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownloadPic_(struct soap*, const struct __ns1__DownloadPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownloadPic_(struct soap*, const char*, int, const struct __ns1__DownloadPic_ *, const char*);
SOAP_FMAC3 struct __ns1__DownloadPic_ * SOAP_FMAC4 soap_in___ns1__DownloadPic_(struct soap*, const char*, struct __ns1__DownloadPic_ *, const char*);
SOAP_FMAC1 struct __ns1__DownloadPic_ * SOAP_FMAC2 soap_instantiate___ns1__DownloadPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownloadPic_ * soap_new___ns1__DownloadPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownloadPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownloadPic_ * soap_new_req___ns1__DownloadPic_(
	struct soap *soap)
{
	struct __ns1__DownloadPic_ *_p = ::soap_new___ns1__DownloadPic_(soap);
	if (_p)
	{	::soap_default___ns1__DownloadPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownloadPic_ * soap_new_set___ns1__DownloadPic_(
	struct soap *soap,
	_ns1__DownloadPic *ns1__DownloadPic)
{
	struct __ns1__DownloadPic_ *_p = ::soap_new___ns1__DownloadPic_(soap);
	if (_p)
	{	::soap_default___ns1__DownloadPic_(soap, _p);
		_p->ns1__DownloadPic = ns1__DownloadPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownloadPic_(struct soap*, const struct __ns1__DownloadPic_ *, const char*, const char*);

inline int soap_write___ns1__DownloadPic_(struct soap *soap, struct __ns1__DownloadPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownloadPic_(soap, p), 0) || ::soap_put___ns1__DownloadPic_(soap, p, "-ns1:DownloadPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownloadPic_(struct soap *soap, const char *URL, struct __ns1__DownloadPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownloadPic_(soap, p), 0) || ::soap_put___ns1__DownloadPic_(soap, p, "-ns1:DownloadPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownloadPic_(struct soap *soap, const char *URL, struct __ns1__DownloadPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownloadPic_(soap, p), 0) || ::soap_put___ns1__DownloadPic_(soap, p, "-ns1:DownloadPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownloadPic_ * SOAP_FMAC4 soap_get___ns1__DownloadPic_(struct soap*, struct __ns1__DownloadPic_ *, const char*, const char*);

inline int soap_read___ns1__DownloadPic_(struct soap *soap, struct __ns1__DownloadPic_ *p)
{
	if (p)
	{	::soap_default___ns1__DownloadPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownloadPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownloadPic_(struct soap *soap, const char *URL, struct __ns1__DownloadPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownloadPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownloadPic_(struct soap *soap, struct __ns1__DownloadPic_ *p)
{
	if (::soap_read___ns1__DownloadPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__upPic__DEFINED
#define SOAP_TYPE___ns1__upPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__upPic_(struct soap*, struct __ns1__upPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__upPic_(struct soap*, const struct __ns1__upPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__upPic_(struct soap*, const char*, int, const struct __ns1__upPic_ *, const char*);
SOAP_FMAC3 struct __ns1__upPic_ * SOAP_FMAC4 soap_in___ns1__upPic_(struct soap*, const char*, struct __ns1__upPic_ *, const char*);
SOAP_FMAC1 struct __ns1__upPic_ * SOAP_FMAC2 soap_instantiate___ns1__upPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__upPic_ * soap_new___ns1__upPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__upPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__upPic_ * soap_new_req___ns1__upPic_(
	struct soap *soap)
{
	struct __ns1__upPic_ *_p = ::soap_new___ns1__upPic_(soap);
	if (_p)
	{	::soap_default___ns1__upPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__upPic_ * soap_new_set___ns1__upPic_(
	struct soap *soap,
	_ns1__upPic *ns1__upPic)
{
	struct __ns1__upPic_ *_p = ::soap_new___ns1__upPic_(soap);
	if (_p)
	{	::soap_default___ns1__upPic_(soap, _p);
		_p->ns1__upPic = ns1__upPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__upPic_(struct soap*, const struct __ns1__upPic_ *, const char*, const char*);

inline int soap_write___ns1__upPic_(struct soap *soap, struct __ns1__upPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__upPic_(soap, p), 0) || ::soap_put___ns1__upPic_(soap, p, "-ns1:upPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__upPic_(struct soap *soap, const char *URL, struct __ns1__upPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__upPic_(soap, p), 0) || ::soap_put___ns1__upPic_(soap, p, "-ns1:upPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__upPic_(struct soap *soap, const char *URL, struct __ns1__upPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__upPic_(soap, p), 0) || ::soap_put___ns1__upPic_(soap, p, "-ns1:upPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__upPic_ * SOAP_FMAC4 soap_get___ns1__upPic_(struct soap*, struct __ns1__upPic_ *, const char*, const char*);

inline int soap_read___ns1__upPic_(struct soap *soap, struct __ns1__upPic_ *p)
{
	if (p)
	{	::soap_default___ns1__upPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__upPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__upPic_(struct soap *soap, const char *URL, struct __ns1__upPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__upPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__upPic_(struct soap *soap, struct __ns1__upPic_ *p)
{
	if (::soap_read___ns1__upPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__UpLoadFile__DEFINED
#define SOAP_TYPE___ns1__UpLoadFile__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpLoadFile_(struct soap*, struct __ns1__UpLoadFile_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpLoadFile_(struct soap*, const struct __ns1__UpLoadFile_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpLoadFile_(struct soap*, const char*, int, const struct __ns1__UpLoadFile_ *, const char*);
SOAP_FMAC3 struct __ns1__UpLoadFile_ * SOAP_FMAC4 soap_in___ns1__UpLoadFile_(struct soap*, const char*, struct __ns1__UpLoadFile_ *, const char*);
SOAP_FMAC1 struct __ns1__UpLoadFile_ * SOAP_FMAC2 soap_instantiate___ns1__UpLoadFile_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpLoadFile_ * soap_new___ns1__UpLoadFile_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__UpLoadFile_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__UpLoadFile_ * soap_new_req___ns1__UpLoadFile_(
	struct soap *soap)
{
	struct __ns1__UpLoadFile_ *_p = ::soap_new___ns1__UpLoadFile_(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadFile_(soap, _p);
	}
	return _p;
}

inline struct __ns1__UpLoadFile_ * soap_new_set___ns1__UpLoadFile_(
	struct soap *soap,
	_ns1__UpLoadFile *ns1__UpLoadFile)
{
	struct __ns1__UpLoadFile_ *_p = ::soap_new___ns1__UpLoadFile_(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadFile_(soap, _p);
		_p->ns1__UpLoadFile = ns1__UpLoadFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpLoadFile_(struct soap*, const struct __ns1__UpLoadFile_ *, const char*, const char*);

inline int soap_write___ns1__UpLoadFile_(struct soap *soap, struct __ns1__UpLoadFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__UpLoadFile_(soap, p), 0) || ::soap_put___ns1__UpLoadFile_(soap, p, "-ns1:UpLoadFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__UpLoadFile_(struct soap *soap, const char *URL, struct __ns1__UpLoadFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadFile_(soap, p), 0) || ::soap_put___ns1__UpLoadFile_(soap, p, "-ns1:UpLoadFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__UpLoadFile_(struct soap *soap, const char *URL, struct __ns1__UpLoadFile_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadFile_(soap, p), 0) || ::soap_put___ns1__UpLoadFile_(soap, p, "-ns1:UpLoadFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__UpLoadFile_ * SOAP_FMAC4 soap_get___ns1__UpLoadFile_(struct soap*, struct __ns1__UpLoadFile_ *, const char*, const char*);

inline int soap_read___ns1__UpLoadFile_(struct soap *soap, struct __ns1__UpLoadFile_ *p)
{
	if (p)
	{	::soap_default___ns1__UpLoadFile_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__UpLoadFile_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__UpLoadFile_(struct soap *soap, const char *URL, struct __ns1__UpLoadFile_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__UpLoadFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__UpLoadFile_(struct soap *soap, struct __ns1__UpLoadFile_ *p)
{
	if (::soap_read___ns1__UpLoadFile_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetAPVupdater__DEFINED
#define SOAP_TYPE___ns1__GetAPVupdater__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAPVupdater_(struct soap*, struct __ns1__GetAPVupdater_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAPVupdater_(struct soap*, const struct __ns1__GetAPVupdater_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAPVupdater_(struct soap*, const char*, int, const struct __ns1__GetAPVupdater_ *, const char*);
SOAP_FMAC3 struct __ns1__GetAPVupdater_ * SOAP_FMAC4 soap_in___ns1__GetAPVupdater_(struct soap*, const char*, struct __ns1__GetAPVupdater_ *, const char*);
SOAP_FMAC1 struct __ns1__GetAPVupdater_ * SOAP_FMAC2 soap_instantiate___ns1__GetAPVupdater_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAPVupdater_ * soap_new___ns1__GetAPVupdater_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetAPVupdater_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetAPVupdater_ * soap_new_req___ns1__GetAPVupdater_(
	struct soap *soap)
{
	struct __ns1__GetAPVupdater_ *_p = ::soap_new___ns1__GetAPVupdater_(soap);
	if (_p)
	{	::soap_default___ns1__GetAPVupdater_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetAPVupdater_ * soap_new_set___ns1__GetAPVupdater_(
	struct soap *soap,
	_ns1__GetAPVupdater *ns1__GetAPVupdater)
{
	struct __ns1__GetAPVupdater_ *_p = ::soap_new___ns1__GetAPVupdater_(soap);
	if (_p)
	{	::soap_default___ns1__GetAPVupdater_(soap, _p);
		_p->ns1__GetAPVupdater = ns1__GetAPVupdater;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAPVupdater_(struct soap*, const struct __ns1__GetAPVupdater_ *, const char*, const char*);

inline int soap_write___ns1__GetAPVupdater_(struct soap *soap, struct __ns1__GetAPVupdater_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetAPVupdater_(soap, p), 0) || ::soap_put___ns1__GetAPVupdater_(soap, p, "-ns1:GetAPVupdater", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetAPVupdater_(struct soap *soap, const char *URL, struct __ns1__GetAPVupdater_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAPVupdater_(soap, p), 0) || ::soap_put___ns1__GetAPVupdater_(soap, p, "-ns1:GetAPVupdater", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetAPVupdater_(struct soap *soap, const char *URL, struct __ns1__GetAPVupdater_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAPVupdater_(soap, p), 0) || ::soap_put___ns1__GetAPVupdater_(soap, p, "-ns1:GetAPVupdater", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetAPVupdater_ * SOAP_FMAC4 soap_get___ns1__GetAPVupdater_(struct soap*, struct __ns1__GetAPVupdater_ *, const char*, const char*);

inline int soap_read___ns1__GetAPVupdater_(struct soap *soap, struct __ns1__GetAPVupdater_ *p)
{
	if (p)
	{	::soap_default___ns1__GetAPVupdater_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetAPVupdater_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetAPVupdater_(struct soap *soap, const char *URL, struct __ns1__GetAPVupdater_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetAPVupdater_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetAPVupdater_(struct soap *soap, struct __ns1__GetAPVupdater_ *p)
{
	if (::soap_read___ns1__GetAPVupdater_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetXHYDGLXTupdater__DEFINED
#define SOAP_TYPE___ns1__GetXHYDGLXTupdater__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXHYDGLXTupdater_(struct soap*, struct __ns1__GetXHYDGLXTupdater_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXHYDGLXTupdater_(struct soap*, const struct __ns1__GetXHYDGLXTupdater_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXHYDGLXTupdater_(struct soap*, const char*, int, const struct __ns1__GetXHYDGLXTupdater_ *, const char*);
SOAP_FMAC3 struct __ns1__GetXHYDGLXTupdater_ * SOAP_FMAC4 soap_in___ns1__GetXHYDGLXTupdater_(struct soap*, const char*, struct __ns1__GetXHYDGLXTupdater_ *, const char*);
SOAP_FMAC1 struct __ns1__GetXHYDGLXTupdater_ * SOAP_FMAC2 soap_instantiate___ns1__GetXHYDGLXTupdater_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXHYDGLXTupdater_ * soap_new___ns1__GetXHYDGLXTupdater_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetXHYDGLXTupdater_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetXHYDGLXTupdater_ * soap_new_req___ns1__GetXHYDGLXTupdater_(
	struct soap *soap)
{
	struct __ns1__GetXHYDGLXTupdater_ *_p = ::soap_new___ns1__GetXHYDGLXTupdater_(soap);
	if (_p)
	{	::soap_default___ns1__GetXHYDGLXTupdater_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetXHYDGLXTupdater_ * soap_new_set___ns1__GetXHYDGLXTupdater_(
	struct soap *soap,
	_ns1__GetXHYDGLXTupdater *ns1__GetXHYDGLXTupdater)
{
	struct __ns1__GetXHYDGLXTupdater_ *_p = ::soap_new___ns1__GetXHYDGLXTupdater_(soap);
	if (_p)
	{	::soap_default___ns1__GetXHYDGLXTupdater_(soap, _p);
		_p->ns1__GetXHYDGLXTupdater = ns1__GetXHYDGLXTupdater;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXHYDGLXTupdater_(struct soap*, const struct __ns1__GetXHYDGLXTupdater_ *, const char*, const char*);

inline int soap_write___ns1__GetXHYDGLXTupdater_(struct soap *soap, struct __ns1__GetXHYDGLXTupdater_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetXHYDGLXTupdater_(soap, p), 0) || ::soap_put___ns1__GetXHYDGLXTupdater_(soap, p, "-ns1:GetXHYDGLXTupdater", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetXHYDGLXTupdater_(struct soap *soap, const char *URL, struct __ns1__GetXHYDGLXTupdater_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXHYDGLXTupdater_(soap, p), 0) || ::soap_put___ns1__GetXHYDGLXTupdater_(soap, p, "-ns1:GetXHYDGLXTupdater", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetXHYDGLXTupdater_(struct soap *soap, const char *URL, struct __ns1__GetXHYDGLXTupdater_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXHYDGLXTupdater_(soap, p), 0) || ::soap_put___ns1__GetXHYDGLXTupdater_(soap, p, "-ns1:GetXHYDGLXTupdater", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetXHYDGLXTupdater_ * SOAP_FMAC4 soap_get___ns1__GetXHYDGLXTupdater_(struct soap*, struct __ns1__GetXHYDGLXTupdater_ *, const char*, const char*);

inline int soap_read___ns1__GetXHYDGLXTupdater_(struct soap *soap, struct __ns1__GetXHYDGLXTupdater_ *p)
{
	if (p)
	{	::soap_default___ns1__GetXHYDGLXTupdater_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetXHYDGLXTupdater_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetXHYDGLXTupdater_(struct soap *soap, const char *URL, struct __ns1__GetXHYDGLXTupdater_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetXHYDGLXTupdater_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetXHYDGLXTupdater_(struct soap *soap, struct __ns1__GetXHYDGLXTupdater_ *p)
{
	if (::soap_read___ns1__GetXHYDGLXTupdater_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ExecuteSqlForColb__DEFINED
#define SOAP_TYPE___ns1__ExecuteSqlForColb__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteSqlForColb_(struct soap*, struct __ns1__ExecuteSqlForColb_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteSqlForColb_(struct soap*, const struct __ns1__ExecuteSqlForColb_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteSqlForColb_(struct soap*, const char*, int, const struct __ns1__ExecuteSqlForColb_ *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteSqlForColb_ * SOAP_FMAC4 soap_in___ns1__ExecuteSqlForColb_(struct soap*, const char*, struct __ns1__ExecuteSqlForColb_ *, const char*);
SOAP_FMAC1 struct __ns1__ExecuteSqlForColb_ * SOAP_FMAC2 soap_instantiate___ns1__ExecuteSqlForColb_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExecuteSqlForColb_ * soap_new___ns1__ExecuteSqlForColb_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ExecuteSqlForColb_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ExecuteSqlForColb_ * soap_new_req___ns1__ExecuteSqlForColb_(
	struct soap *soap)
{
	struct __ns1__ExecuteSqlForColb_ *_p = ::soap_new___ns1__ExecuteSqlForColb_(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForColb_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ExecuteSqlForColb_ * soap_new_set___ns1__ExecuteSqlForColb_(
	struct soap *soap,
	_ns1__ExecuteSqlForColb *ns1__ExecuteSqlForColb)
{
	struct __ns1__ExecuteSqlForColb_ *_p = ::soap_new___ns1__ExecuteSqlForColb_(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForColb_(soap, _p);
		_p->ns1__ExecuteSqlForColb = ns1__ExecuteSqlForColb;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteSqlForColb_(struct soap*, const struct __ns1__ExecuteSqlForColb_ *, const char*, const char*);

inline int soap_write___ns1__ExecuteSqlForColb_(struct soap *soap, struct __ns1__ExecuteSqlForColb_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ExecuteSqlForColb_(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForColb_(soap, p, "-ns1:ExecuteSqlForColb", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ExecuteSqlForColb_(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForColb_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForColb_(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForColb_(soap, p, "-ns1:ExecuteSqlForColb", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ExecuteSqlForColb_(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForColb_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForColb_(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForColb_(soap, p, "-ns1:ExecuteSqlForColb", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ExecuteSqlForColb_ * SOAP_FMAC4 soap_get___ns1__ExecuteSqlForColb_(struct soap*, struct __ns1__ExecuteSqlForColb_ *, const char*, const char*);

inline int soap_read___ns1__ExecuteSqlForColb_(struct soap *soap, struct __ns1__ExecuteSqlForColb_ *p)
{
	if (p)
	{	::soap_default___ns1__ExecuteSqlForColb_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ExecuteSqlForColb_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ExecuteSqlForColb_(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForColb_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ExecuteSqlForColb_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ExecuteSqlForColb_(struct soap *soap, struct __ns1__ExecuteSqlForColb_ *p)
{
	if (::soap_read___ns1__ExecuteSqlForColb_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__UpLoadData__DEFINED
#define SOAP_TYPE___ns1__UpLoadData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpLoadData_(struct soap*, struct __ns1__UpLoadData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpLoadData_(struct soap*, const struct __ns1__UpLoadData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpLoadData_(struct soap*, const char*, int, const struct __ns1__UpLoadData_ *, const char*);
SOAP_FMAC3 struct __ns1__UpLoadData_ * SOAP_FMAC4 soap_in___ns1__UpLoadData_(struct soap*, const char*, struct __ns1__UpLoadData_ *, const char*);
SOAP_FMAC1 struct __ns1__UpLoadData_ * SOAP_FMAC2 soap_instantiate___ns1__UpLoadData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpLoadData_ * soap_new___ns1__UpLoadData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__UpLoadData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__UpLoadData_ * soap_new_req___ns1__UpLoadData_(
	struct soap *soap)
{
	struct __ns1__UpLoadData_ *_p = ::soap_new___ns1__UpLoadData_(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__UpLoadData_ * soap_new_set___ns1__UpLoadData_(
	struct soap *soap,
	_ns1__UpLoadData *ns1__UpLoadData)
{
	struct __ns1__UpLoadData_ *_p = ::soap_new___ns1__UpLoadData_(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadData_(soap, _p);
		_p->ns1__UpLoadData = ns1__UpLoadData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpLoadData_(struct soap*, const struct __ns1__UpLoadData_ *, const char*, const char*);

inline int soap_write___ns1__UpLoadData_(struct soap *soap, struct __ns1__UpLoadData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__UpLoadData_(soap, p), 0) || ::soap_put___ns1__UpLoadData_(soap, p, "-ns1:UpLoadData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__UpLoadData_(struct soap *soap, const char *URL, struct __ns1__UpLoadData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadData_(soap, p), 0) || ::soap_put___ns1__UpLoadData_(soap, p, "-ns1:UpLoadData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__UpLoadData_(struct soap *soap, const char *URL, struct __ns1__UpLoadData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadData_(soap, p), 0) || ::soap_put___ns1__UpLoadData_(soap, p, "-ns1:UpLoadData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__UpLoadData_ * SOAP_FMAC4 soap_get___ns1__UpLoadData_(struct soap*, struct __ns1__UpLoadData_ *, const char*, const char*);

inline int soap_read___ns1__UpLoadData_(struct soap *soap, struct __ns1__UpLoadData_ *p)
{
	if (p)
	{	::soap_default___ns1__UpLoadData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__UpLoadData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__UpLoadData_(struct soap *soap, const char *URL, struct __ns1__UpLoadData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__UpLoadData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__UpLoadData_(struct soap *soap, struct __ns1__UpLoadData_ *p)
{
	if (::soap_read___ns1__UpLoadData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__TcdSendup__DEFINED
#define SOAP_TYPE___ns1__TcdSendup__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__TcdSendup_(struct soap*, struct __ns1__TcdSendup_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__TcdSendup_(struct soap*, const struct __ns1__TcdSendup_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__TcdSendup_(struct soap*, const char*, int, const struct __ns1__TcdSendup_ *, const char*);
SOAP_FMAC3 struct __ns1__TcdSendup_ * SOAP_FMAC4 soap_in___ns1__TcdSendup_(struct soap*, const char*, struct __ns1__TcdSendup_ *, const char*);
SOAP_FMAC1 struct __ns1__TcdSendup_ * SOAP_FMAC2 soap_instantiate___ns1__TcdSendup_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__TcdSendup_ * soap_new___ns1__TcdSendup_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__TcdSendup_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__TcdSendup_ * soap_new_req___ns1__TcdSendup_(
	struct soap *soap)
{
	struct __ns1__TcdSendup_ *_p = ::soap_new___ns1__TcdSendup_(soap);
	if (_p)
	{	::soap_default___ns1__TcdSendup_(soap, _p);
	}
	return _p;
}

inline struct __ns1__TcdSendup_ * soap_new_set___ns1__TcdSendup_(
	struct soap *soap,
	_ns1__TcdSendup *ns1__TcdSendup)
{
	struct __ns1__TcdSendup_ *_p = ::soap_new___ns1__TcdSendup_(soap);
	if (_p)
	{	::soap_default___ns1__TcdSendup_(soap, _p);
		_p->ns1__TcdSendup = ns1__TcdSendup;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__TcdSendup_(struct soap*, const struct __ns1__TcdSendup_ *, const char*, const char*);

inline int soap_write___ns1__TcdSendup_(struct soap *soap, struct __ns1__TcdSendup_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__TcdSendup_(soap, p), 0) || ::soap_put___ns1__TcdSendup_(soap, p, "-ns1:TcdSendup", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__TcdSendup_(struct soap *soap, const char *URL, struct __ns1__TcdSendup_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdSendup_(soap, p), 0) || ::soap_put___ns1__TcdSendup_(soap, p, "-ns1:TcdSendup", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__TcdSendup_(struct soap *soap, const char *URL, struct __ns1__TcdSendup_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdSendup_(soap, p), 0) || ::soap_put___ns1__TcdSendup_(soap, p, "-ns1:TcdSendup", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__TcdSendup_ * SOAP_FMAC4 soap_get___ns1__TcdSendup_(struct soap*, struct __ns1__TcdSendup_ *, const char*, const char*);

inline int soap_read___ns1__TcdSendup_(struct soap *soap, struct __ns1__TcdSendup_ *p)
{
	if (p)
	{	::soap_default___ns1__TcdSendup_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__TcdSendup_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__TcdSendup_(struct soap *soap, const char *URL, struct __ns1__TcdSendup_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__TcdSendup_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__TcdSendup_(struct soap *soap, struct __ns1__TcdSendup_ *p)
{
	if (::soap_read___ns1__TcdSendup_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__TcdQuery__DEFINED
#define SOAP_TYPE___ns1__TcdQuery__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__TcdQuery_(struct soap*, struct __ns1__TcdQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__TcdQuery_(struct soap*, const struct __ns1__TcdQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__TcdQuery_(struct soap*, const char*, int, const struct __ns1__TcdQuery_ *, const char*);
SOAP_FMAC3 struct __ns1__TcdQuery_ * SOAP_FMAC4 soap_in___ns1__TcdQuery_(struct soap*, const char*, struct __ns1__TcdQuery_ *, const char*);
SOAP_FMAC1 struct __ns1__TcdQuery_ * SOAP_FMAC2 soap_instantiate___ns1__TcdQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__TcdQuery_ * soap_new___ns1__TcdQuery_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__TcdQuery_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__TcdQuery_ * soap_new_req___ns1__TcdQuery_(
	struct soap *soap)
{
	struct __ns1__TcdQuery_ *_p = ::soap_new___ns1__TcdQuery_(soap);
	if (_p)
	{	::soap_default___ns1__TcdQuery_(soap, _p);
	}
	return _p;
}

inline struct __ns1__TcdQuery_ * soap_new_set___ns1__TcdQuery_(
	struct soap *soap,
	_ns1__TcdQuery *ns1__TcdQuery)
{
	struct __ns1__TcdQuery_ *_p = ::soap_new___ns1__TcdQuery_(soap);
	if (_p)
	{	::soap_default___ns1__TcdQuery_(soap, _p);
		_p->ns1__TcdQuery = ns1__TcdQuery;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__TcdQuery_(struct soap*, const struct __ns1__TcdQuery_ *, const char*, const char*);

inline int soap_write___ns1__TcdQuery_(struct soap *soap, struct __ns1__TcdQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__TcdQuery_(soap, p), 0) || ::soap_put___ns1__TcdQuery_(soap, p, "-ns1:TcdQuery", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__TcdQuery_(struct soap *soap, const char *URL, struct __ns1__TcdQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdQuery_(soap, p), 0) || ::soap_put___ns1__TcdQuery_(soap, p, "-ns1:TcdQuery", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__TcdQuery_(struct soap *soap, const char *URL, struct __ns1__TcdQuery_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdQuery_(soap, p), 0) || ::soap_put___ns1__TcdQuery_(soap, p, "-ns1:TcdQuery", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__TcdQuery_ * SOAP_FMAC4 soap_get___ns1__TcdQuery_(struct soap*, struct __ns1__TcdQuery_ *, const char*, const char*);

inline int soap_read___ns1__TcdQuery_(struct soap *soap, struct __ns1__TcdQuery_ *p)
{
	if (p)
	{	::soap_default___ns1__TcdQuery_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__TcdQuery_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__TcdQuery_(struct soap *soap, const char *URL, struct __ns1__TcdQuery_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__TcdQuery_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__TcdQuery_(struct soap *soap, struct __ns1__TcdQuery_ *p)
{
	if (::soap_read___ns1__TcdQuery_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__QueryPhotobw__DEFINED
#define SOAP_TYPE___ns1__QueryPhotobw__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryPhotobw_(struct soap*, struct __ns1__QueryPhotobw_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryPhotobw_(struct soap*, const struct __ns1__QueryPhotobw_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryPhotobw_(struct soap*, const char*, int, const struct __ns1__QueryPhotobw_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryPhotobw_ * SOAP_FMAC4 soap_in___ns1__QueryPhotobw_(struct soap*, const char*, struct __ns1__QueryPhotobw_ *, const char*);
SOAP_FMAC1 struct __ns1__QueryPhotobw_ * SOAP_FMAC2 soap_instantiate___ns1__QueryPhotobw_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryPhotobw_ * soap_new___ns1__QueryPhotobw_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__QueryPhotobw_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__QueryPhotobw_ * soap_new_req___ns1__QueryPhotobw_(
	struct soap *soap)
{
	struct __ns1__QueryPhotobw_ *_p = ::soap_new___ns1__QueryPhotobw_(soap);
	if (_p)
	{	::soap_default___ns1__QueryPhotobw_(soap, _p);
	}
	return _p;
}

inline struct __ns1__QueryPhotobw_ * soap_new_set___ns1__QueryPhotobw_(
	struct soap *soap,
	_ns1__QueryPhotobw *ns1__QueryPhotobw)
{
	struct __ns1__QueryPhotobw_ *_p = ::soap_new___ns1__QueryPhotobw_(soap);
	if (_p)
	{	::soap_default___ns1__QueryPhotobw_(soap, _p);
		_p->ns1__QueryPhotobw = ns1__QueryPhotobw;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryPhotobw_(struct soap*, const struct __ns1__QueryPhotobw_ *, const char*, const char*);

inline int soap_write___ns1__QueryPhotobw_(struct soap *soap, struct __ns1__QueryPhotobw_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__QueryPhotobw_(soap, p), 0) || ::soap_put___ns1__QueryPhotobw_(soap, p, "-ns1:QueryPhotobw", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__QueryPhotobw_(struct soap *soap, const char *URL, struct __ns1__QueryPhotobw_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryPhotobw_(soap, p), 0) || ::soap_put___ns1__QueryPhotobw_(soap, p, "-ns1:QueryPhotobw", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__QueryPhotobw_(struct soap *soap, const char *URL, struct __ns1__QueryPhotobw_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryPhotobw_(soap, p), 0) || ::soap_put___ns1__QueryPhotobw_(soap, p, "-ns1:QueryPhotobw", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__QueryPhotobw_ * SOAP_FMAC4 soap_get___ns1__QueryPhotobw_(struct soap*, struct __ns1__QueryPhotobw_ *, const char*, const char*);

inline int soap_read___ns1__QueryPhotobw_(struct soap *soap, struct __ns1__QueryPhotobw_ *p)
{
	if (p)
	{	::soap_default___ns1__QueryPhotobw_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__QueryPhotobw_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__QueryPhotobw_(struct soap *soap, const char *URL, struct __ns1__QueryPhotobw_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__QueryPhotobw_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__QueryPhotobw_(struct soap *soap, struct __ns1__QueryPhotobw_ *p)
{
	if (::soap_read___ns1__QueryPhotobw_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetOsDateTime__DEFINED
#define SOAP_TYPE___ns1__GetOsDateTime__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetOsDateTime_(struct soap*, struct __ns1__GetOsDateTime_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetOsDateTime_(struct soap*, const struct __ns1__GetOsDateTime_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetOsDateTime_(struct soap*, const char*, int, const struct __ns1__GetOsDateTime_ *, const char*);
SOAP_FMAC3 struct __ns1__GetOsDateTime_ * SOAP_FMAC4 soap_in___ns1__GetOsDateTime_(struct soap*, const char*, struct __ns1__GetOsDateTime_ *, const char*);
SOAP_FMAC1 struct __ns1__GetOsDateTime_ * SOAP_FMAC2 soap_instantiate___ns1__GetOsDateTime_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetOsDateTime_ * soap_new___ns1__GetOsDateTime_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetOsDateTime_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetOsDateTime_ * soap_new_req___ns1__GetOsDateTime_(
	struct soap *soap)
{
	struct __ns1__GetOsDateTime_ *_p = ::soap_new___ns1__GetOsDateTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetOsDateTime_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetOsDateTime_ * soap_new_set___ns1__GetOsDateTime_(
	struct soap *soap,
	_ns1__GetOsDateTime *ns1__GetOsDateTime)
{
	struct __ns1__GetOsDateTime_ *_p = ::soap_new___ns1__GetOsDateTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetOsDateTime_(soap, _p);
		_p->ns1__GetOsDateTime = ns1__GetOsDateTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetOsDateTime_(struct soap*, const struct __ns1__GetOsDateTime_ *, const char*, const char*);

inline int soap_write___ns1__GetOsDateTime_(struct soap *soap, struct __ns1__GetOsDateTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetOsDateTime_(soap, p), 0) || ::soap_put___ns1__GetOsDateTime_(soap, p, "-ns1:GetOsDateTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetOsDateTime_(struct soap *soap, const char *URL, struct __ns1__GetOsDateTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOsDateTime_(soap, p), 0) || ::soap_put___ns1__GetOsDateTime_(soap, p, "-ns1:GetOsDateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetOsDateTime_(struct soap *soap, const char *URL, struct __ns1__GetOsDateTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOsDateTime_(soap, p), 0) || ::soap_put___ns1__GetOsDateTime_(soap, p, "-ns1:GetOsDateTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetOsDateTime_ * SOAP_FMAC4 soap_get___ns1__GetOsDateTime_(struct soap*, struct __ns1__GetOsDateTime_ *, const char*, const char*);

inline int soap_read___ns1__GetOsDateTime_(struct soap *soap, struct __ns1__GetOsDateTime_ *p)
{
	if (p)
	{	::soap_default___ns1__GetOsDateTime_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetOsDateTime_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetOsDateTime_(struct soap *soap, const char *URL, struct __ns1__GetOsDateTime_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetOsDateTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetOsDateTime_(struct soap *soap, struct __ns1__GetOsDateTime_ *p)
{
	if (::soap_read___ns1__GetOsDateTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__signedUserInfo__DEFINED
#define SOAP_TYPE___ns1__signedUserInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__signedUserInfo_(struct soap*, struct __ns1__signedUserInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__signedUserInfo_(struct soap*, const struct __ns1__signedUserInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__signedUserInfo_(struct soap*, const char*, int, const struct __ns1__signedUserInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__signedUserInfo_ * SOAP_FMAC4 soap_in___ns1__signedUserInfo_(struct soap*, const char*, struct __ns1__signedUserInfo_ *, const char*);
SOAP_FMAC1 struct __ns1__signedUserInfo_ * SOAP_FMAC2 soap_instantiate___ns1__signedUserInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__signedUserInfo_ * soap_new___ns1__signedUserInfo_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__signedUserInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__signedUserInfo_ * soap_new_req___ns1__signedUserInfo_(
	struct soap *soap)
{
	struct __ns1__signedUserInfo_ *_p = ::soap_new___ns1__signedUserInfo_(soap);
	if (_p)
	{	::soap_default___ns1__signedUserInfo_(soap, _p);
	}
	return _p;
}

inline struct __ns1__signedUserInfo_ * soap_new_set___ns1__signedUserInfo_(
	struct soap *soap,
	_ns1__signedUserInfo *ns1__signedUserInfo)
{
	struct __ns1__signedUserInfo_ *_p = ::soap_new___ns1__signedUserInfo_(soap);
	if (_p)
	{	::soap_default___ns1__signedUserInfo_(soap, _p);
		_p->ns1__signedUserInfo = ns1__signedUserInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__signedUserInfo_(struct soap*, const struct __ns1__signedUserInfo_ *, const char*, const char*);

inline int soap_write___ns1__signedUserInfo_(struct soap *soap, struct __ns1__signedUserInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__signedUserInfo_(soap, p), 0) || ::soap_put___ns1__signedUserInfo_(soap, p, "-ns1:signedUserInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__signedUserInfo_(struct soap *soap, const char *URL, struct __ns1__signedUserInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__signedUserInfo_(soap, p), 0) || ::soap_put___ns1__signedUserInfo_(soap, p, "-ns1:signedUserInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__signedUserInfo_(struct soap *soap, const char *URL, struct __ns1__signedUserInfo_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__signedUserInfo_(soap, p), 0) || ::soap_put___ns1__signedUserInfo_(soap, p, "-ns1:signedUserInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__signedUserInfo_ * SOAP_FMAC4 soap_get___ns1__signedUserInfo_(struct soap*, struct __ns1__signedUserInfo_ *, const char*, const char*);

inline int soap_read___ns1__signedUserInfo_(struct soap *soap, struct __ns1__signedUserInfo_ *p)
{
	if (p)
	{	::soap_default___ns1__signedUserInfo_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__signedUserInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__signedUserInfo_(struct soap *soap, const char *URL, struct __ns1__signedUserInfo_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__signedUserInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__signedUserInfo_(struct soap *soap, struct __ns1__signedUserInfo_ *p)
{
	if (::soap_read___ns1__signedUserInfo_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetGxdataUpTime__DEFINED
#define SOAP_TYPE___ns1__GetGxdataUpTime__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetGxdataUpTime_(struct soap*, struct __ns1__GetGxdataUpTime_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetGxdataUpTime_(struct soap*, const struct __ns1__GetGxdataUpTime_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetGxdataUpTime_(struct soap*, const char*, int, const struct __ns1__GetGxdataUpTime_ *, const char*);
SOAP_FMAC3 struct __ns1__GetGxdataUpTime_ * SOAP_FMAC4 soap_in___ns1__GetGxdataUpTime_(struct soap*, const char*, struct __ns1__GetGxdataUpTime_ *, const char*);
SOAP_FMAC1 struct __ns1__GetGxdataUpTime_ * SOAP_FMAC2 soap_instantiate___ns1__GetGxdataUpTime_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetGxdataUpTime_ * soap_new___ns1__GetGxdataUpTime_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetGxdataUpTime_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetGxdataUpTime_ * soap_new_req___ns1__GetGxdataUpTime_(
	struct soap *soap)
{
	struct __ns1__GetGxdataUpTime_ *_p = ::soap_new___ns1__GetGxdataUpTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetGxdataUpTime_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetGxdataUpTime_ * soap_new_set___ns1__GetGxdataUpTime_(
	struct soap *soap,
	_ns1__GetGxdataUpTime *ns1__GetGxdataUpTime)
{
	struct __ns1__GetGxdataUpTime_ *_p = ::soap_new___ns1__GetGxdataUpTime_(soap);
	if (_p)
	{	::soap_default___ns1__GetGxdataUpTime_(soap, _p);
		_p->ns1__GetGxdataUpTime = ns1__GetGxdataUpTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetGxdataUpTime_(struct soap*, const struct __ns1__GetGxdataUpTime_ *, const char*, const char*);

inline int soap_write___ns1__GetGxdataUpTime_(struct soap *soap, struct __ns1__GetGxdataUpTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetGxdataUpTime_(soap, p), 0) || ::soap_put___ns1__GetGxdataUpTime_(soap, p, "-ns1:GetGxdataUpTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetGxdataUpTime_(struct soap *soap, const char *URL, struct __ns1__GetGxdataUpTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxdataUpTime_(soap, p), 0) || ::soap_put___ns1__GetGxdataUpTime_(soap, p, "-ns1:GetGxdataUpTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetGxdataUpTime_(struct soap *soap, const char *URL, struct __ns1__GetGxdataUpTime_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxdataUpTime_(soap, p), 0) || ::soap_put___ns1__GetGxdataUpTime_(soap, p, "-ns1:GetGxdataUpTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetGxdataUpTime_ * SOAP_FMAC4 soap_get___ns1__GetGxdataUpTime_(struct soap*, struct __ns1__GetGxdataUpTime_ *, const char*, const char*);

inline int soap_read___ns1__GetGxdataUpTime_(struct soap *soap, struct __ns1__GetGxdataUpTime_ *p)
{
	if (p)
	{	::soap_default___ns1__GetGxdataUpTime_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetGxdataUpTime_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetGxdataUpTime_(struct soap *soap, const char *URL, struct __ns1__GetGxdataUpTime_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetGxdataUpTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetGxdataUpTime_(struct soap *soap, struct __ns1__GetGxdataUpTime_ *p)
{
	if (::soap_read___ns1__GetGxdataUpTime_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownAllPic__DEFINED
#define SOAP_TYPE___ns1__DownAllPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownAllPic_(struct soap*, struct __ns1__DownAllPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownAllPic_(struct soap*, const struct __ns1__DownAllPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownAllPic_(struct soap*, const char*, int, const struct __ns1__DownAllPic_ *, const char*);
SOAP_FMAC3 struct __ns1__DownAllPic_ * SOAP_FMAC4 soap_in___ns1__DownAllPic_(struct soap*, const char*, struct __ns1__DownAllPic_ *, const char*);
SOAP_FMAC1 struct __ns1__DownAllPic_ * SOAP_FMAC2 soap_instantiate___ns1__DownAllPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownAllPic_ * soap_new___ns1__DownAllPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownAllPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownAllPic_ * soap_new_req___ns1__DownAllPic_(
	struct soap *soap)
{
	struct __ns1__DownAllPic_ *_p = ::soap_new___ns1__DownAllPic_(soap);
	if (_p)
	{	::soap_default___ns1__DownAllPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownAllPic_ * soap_new_set___ns1__DownAllPic_(
	struct soap *soap,
	_ns1__DownAllPic *ns1__DownAllPic)
{
	struct __ns1__DownAllPic_ *_p = ::soap_new___ns1__DownAllPic_(soap);
	if (_p)
	{	::soap_default___ns1__DownAllPic_(soap, _p);
		_p->ns1__DownAllPic = ns1__DownAllPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownAllPic_(struct soap*, const struct __ns1__DownAllPic_ *, const char*, const char*);

inline int soap_write___ns1__DownAllPic_(struct soap *soap, struct __ns1__DownAllPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownAllPic_(soap, p), 0) || ::soap_put___ns1__DownAllPic_(soap, p, "-ns1:DownAllPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownAllPic_(struct soap *soap, const char *URL, struct __ns1__DownAllPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownAllPic_(soap, p), 0) || ::soap_put___ns1__DownAllPic_(soap, p, "-ns1:DownAllPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownAllPic_(struct soap *soap, const char *URL, struct __ns1__DownAllPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownAllPic_(soap, p), 0) || ::soap_put___ns1__DownAllPic_(soap, p, "-ns1:DownAllPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownAllPic_ * SOAP_FMAC4 soap_get___ns1__DownAllPic_(struct soap*, struct __ns1__DownAllPic_ *, const char*, const char*);

inline int soap_read___ns1__DownAllPic_(struct soap *soap, struct __ns1__DownAllPic_ *p)
{
	if (p)
	{	::soap_default___ns1__DownAllPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownAllPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownAllPic_(struct soap *soap, const char *URL, struct __ns1__DownAllPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownAllPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownAllPic_(struct soap *soap, struct __ns1__DownAllPic_ *p)
{
	if (::soap_read___ns1__DownAllPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownPic__DEFINED
#define SOAP_TYPE___ns1__DownPic__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownPic_(struct soap*, struct __ns1__DownPic_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownPic_(struct soap*, const struct __ns1__DownPic_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownPic_(struct soap*, const char*, int, const struct __ns1__DownPic_ *, const char*);
SOAP_FMAC3 struct __ns1__DownPic_ * SOAP_FMAC4 soap_in___ns1__DownPic_(struct soap*, const char*, struct __ns1__DownPic_ *, const char*);
SOAP_FMAC1 struct __ns1__DownPic_ * SOAP_FMAC2 soap_instantiate___ns1__DownPic_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownPic_ * soap_new___ns1__DownPic_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownPic_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownPic_ * soap_new_req___ns1__DownPic_(
	struct soap *soap)
{
	struct __ns1__DownPic_ *_p = ::soap_new___ns1__DownPic_(soap);
	if (_p)
	{	::soap_default___ns1__DownPic_(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownPic_ * soap_new_set___ns1__DownPic_(
	struct soap *soap,
	_ns1__DownPic *ns1__DownPic)
{
	struct __ns1__DownPic_ *_p = ::soap_new___ns1__DownPic_(soap);
	if (_p)
	{	::soap_default___ns1__DownPic_(soap, _p);
		_p->ns1__DownPic = ns1__DownPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownPic_(struct soap*, const struct __ns1__DownPic_ *, const char*, const char*);

inline int soap_write___ns1__DownPic_(struct soap *soap, struct __ns1__DownPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownPic_(soap, p), 0) || ::soap_put___ns1__DownPic_(soap, p, "-ns1:DownPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownPic_(struct soap *soap, const char *URL, struct __ns1__DownPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownPic_(soap, p), 0) || ::soap_put___ns1__DownPic_(soap, p, "-ns1:DownPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownPic_(struct soap *soap, const char *URL, struct __ns1__DownPic_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownPic_(soap, p), 0) || ::soap_put___ns1__DownPic_(soap, p, "-ns1:DownPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownPic_ * SOAP_FMAC4 soap_get___ns1__DownPic_(struct soap*, struct __ns1__DownPic_ *, const char*, const char*);

inline int soap_read___ns1__DownPic_(struct soap *soap, struct __ns1__DownPic_ *p)
{
	if (p)
	{	::soap_default___ns1__DownPic_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownPic_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownPic_(struct soap *soap, const char *URL, struct __ns1__DownPic_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownPic_(struct soap *soap, struct __ns1__DownPic_ *p)
{
	if (::soap_read___ns1__DownPic_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SaveFileData__DEFINED
#define SOAP_TYPE___ns1__SaveFileData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveFileData_(struct soap*, struct __ns1__SaveFileData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveFileData_(struct soap*, const struct __ns1__SaveFileData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveFileData_(struct soap*, const char*, int, const struct __ns1__SaveFileData_ *, const char*);
SOAP_FMAC3 struct __ns1__SaveFileData_ * SOAP_FMAC4 soap_in___ns1__SaveFileData_(struct soap*, const char*, struct __ns1__SaveFileData_ *, const char*);
SOAP_FMAC1 struct __ns1__SaveFileData_ * SOAP_FMAC2 soap_instantiate___ns1__SaveFileData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveFileData_ * soap_new___ns1__SaveFileData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SaveFileData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SaveFileData_ * soap_new_req___ns1__SaveFileData_(
	struct soap *soap)
{
	struct __ns1__SaveFileData_ *_p = ::soap_new___ns1__SaveFileData_(soap);
	if (_p)
	{	::soap_default___ns1__SaveFileData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__SaveFileData_ * soap_new_set___ns1__SaveFileData_(
	struct soap *soap,
	_ns1__SaveFileData *ns1__SaveFileData)
{
	struct __ns1__SaveFileData_ *_p = ::soap_new___ns1__SaveFileData_(soap);
	if (_p)
	{	::soap_default___ns1__SaveFileData_(soap, _p);
		_p->ns1__SaveFileData = ns1__SaveFileData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveFileData_(struct soap*, const struct __ns1__SaveFileData_ *, const char*, const char*);

inline int soap_write___ns1__SaveFileData_(struct soap *soap, struct __ns1__SaveFileData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SaveFileData_(soap, p), 0) || ::soap_put___ns1__SaveFileData_(soap, p, "-ns1:SaveFileData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SaveFileData_(struct soap *soap, const char *URL, struct __ns1__SaveFileData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveFileData_(soap, p), 0) || ::soap_put___ns1__SaveFileData_(soap, p, "-ns1:SaveFileData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SaveFileData_(struct soap *soap, const char *URL, struct __ns1__SaveFileData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveFileData_(soap, p), 0) || ::soap_put___ns1__SaveFileData_(soap, p, "-ns1:SaveFileData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SaveFileData_ * SOAP_FMAC4 soap_get___ns1__SaveFileData_(struct soap*, struct __ns1__SaveFileData_ *, const char*, const char*);

inline int soap_read___ns1__SaveFileData_(struct soap *soap, struct __ns1__SaveFileData_ *p)
{
	if (p)
	{	::soap_default___ns1__SaveFileData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SaveFileData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SaveFileData_(struct soap *soap, const char *URL, struct __ns1__SaveFileData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SaveFileData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SaveFileData_(struct soap *soap, struct __ns1__SaveFileData_ *p)
{
	if (::soap_read___ns1__SaveFileData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SaveData__DEFINED
#define SOAP_TYPE___ns1__SaveData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveData_(struct soap*, struct __ns1__SaveData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveData_(struct soap*, const struct __ns1__SaveData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveData_(struct soap*, const char*, int, const struct __ns1__SaveData_ *, const char*);
SOAP_FMAC3 struct __ns1__SaveData_ * SOAP_FMAC4 soap_in___ns1__SaveData_(struct soap*, const char*, struct __ns1__SaveData_ *, const char*);
SOAP_FMAC1 struct __ns1__SaveData_ * SOAP_FMAC2 soap_instantiate___ns1__SaveData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveData_ * soap_new___ns1__SaveData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SaveData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SaveData_ * soap_new_req___ns1__SaveData_(
	struct soap *soap)
{
	struct __ns1__SaveData_ *_p = ::soap_new___ns1__SaveData_(soap);
	if (_p)
	{	::soap_default___ns1__SaveData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__SaveData_ * soap_new_set___ns1__SaveData_(
	struct soap *soap,
	_ns1__SaveData *ns1__SaveData)
{
	struct __ns1__SaveData_ *_p = ::soap_new___ns1__SaveData_(soap);
	if (_p)
	{	::soap_default___ns1__SaveData_(soap, _p);
		_p->ns1__SaveData = ns1__SaveData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveData_(struct soap*, const struct __ns1__SaveData_ *, const char*, const char*);

inline int soap_write___ns1__SaveData_(struct soap *soap, struct __ns1__SaveData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SaveData_(soap, p), 0) || ::soap_put___ns1__SaveData_(soap, p, "-ns1:SaveData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SaveData_(struct soap *soap, const char *URL, struct __ns1__SaveData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveData_(soap, p), 0) || ::soap_put___ns1__SaveData_(soap, p, "-ns1:SaveData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SaveData_(struct soap *soap, const char *URL, struct __ns1__SaveData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveData_(soap, p), 0) || ::soap_put___ns1__SaveData_(soap, p, "-ns1:SaveData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SaveData_ * SOAP_FMAC4 soap_get___ns1__SaveData_(struct soap*, struct __ns1__SaveData_ *, const char*, const char*);

inline int soap_read___ns1__SaveData_(struct soap *soap, struct __ns1__SaveData_ *p)
{
	if (p)
	{	::soap_default___ns1__SaveData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SaveData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SaveData_(struct soap *soap, const char *URL, struct __ns1__SaveData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SaveData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SaveData_(struct soap *soap, struct __ns1__SaveData_ *p)
{
	if (::soap_read___ns1__SaveData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ExecuteSql__DEFINED
#define SOAP_TYPE___ns1__ExecuteSql__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteSql_(struct soap*, struct __ns1__ExecuteSql_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteSql_(struct soap*, const struct __ns1__ExecuteSql_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteSql_(struct soap*, const char*, int, const struct __ns1__ExecuteSql_ *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteSql_ * SOAP_FMAC4 soap_in___ns1__ExecuteSql_(struct soap*, const char*, struct __ns1__ExecuteSql_ *, const char*);
SOAP_FMAC1 struct __ns1__ExecuteSql_ * SOAP_FMAC2 soap_instantiate___ns1__ExecuteSql_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExecuteSql_ * soap_new___ns1__ExecuteSql_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ExecuteSql_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ExecuteSql_ * soap_new_req___ns1__ExecuteSql_(
	struct soap *soap)
{
	struct __ns1__ExecuteSql_ *_p = ::soap_new___ns1__ExecuteSql_(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSql_(soap, _p);
	}
	return _p;
}

inline struct __ns1__ExecuteSql_ * soap_new_set___ns1__ExecuteSql_(
	struct soap *soap,
	_ns1__ExecuteSql *ns1__ExecuteSql)
{
	struct __ns1__ExecuteSql_ *_p = ::soap_new___ns1__ExecuteSql_(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSql_(soap, _p);
		_p->ns1__ExecuteSql = ns1__ExecuteSql;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteSql_(struct soap*, const struct __ns1__ExecuteSql_ *, const char*, const char*);

inline int soap_write___ns1__ExecuteSql_(struct soap *soap, struct __ns1__ExecuteSql_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ExecuteSql_(soap, p), 0) || ::soap_put___ns1__ExecuteSql_(soap, p, "-ns1:ExecuteSql", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ExecuteSql_(struct soap *soap, const char *URL, struct __ns1__ExecuteSql_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSql_(soap, p), 0) || ::soap_put___ns1__ExecuteSql_(soap, p, "-ns1:ExecuteSql", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ExecuteSql_(struct soap *soap, const char *URL, struct __ns1__ExecuteSql_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSql_(soap, p), 0) || ::soap_put___ns1__ExecuteSql_(soap, p, "-ns1:ExecuteSql", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ExecuteSql_ * SOAP_FMAC4 soap_get___ns1__ExecuteSql_(struct soap*, struct __ns1__ExecuteSql_ *, const char*, const char*);

inline int soap_read___ns1__ExecuteSql_(struct soap *soap, struct __ns1__ExecuteSql_ *p)
{
	if (p)
	{	::soap_default___ns1__ExecuteSql_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ExecuteSql_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ExecuteSql_(struct soap *soap, const char *URL, struct __ns1__ExecuteSql_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ExecuteSql_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ExecuteSql_(struct soap *soap, struct __ns1__ExecuteSql_ *p)
{
	if (::soap_read___ns1__ExecuteSql_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__QueryDataCount__DEFINED
#define SOAP_TYPE___ns1__QueryDataCount__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryDataCount_(struct soap*, struct __ns1__QueryDataCount_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryDataCount_(struct soap*, const struct __ns1__QueryDataCount_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryDataCount_(struct soap*, const char*, int, const struct __ns1__QueryDataCount_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryDataCount_ * SOAP_FMAC4 soap_in___ns1__QueryDataCount_(struct soap*, const char*, struct __ns1__QueryDataCount_ *, const char*);
SOAP_FMAC1 struct __ns1__QueryDataCount_ * SOAP_FMAC2 soap_instantiate___ns1__QueryDataCount_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryDataCount_ * soap_new___ns1__QueryDataCount_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__QueryDataCount_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__QueryDataCount_ * soap_new_req___ns1__QueryDataCount_(
	struct soap *soap)
{
	struct __ns1__QueryDataCount_ *_p = ::soap_new___ns1__QueryDataCount_(soap);
	if (_p)
	{	::soap_default___ns1__QueryDataCount_(soap, _p);
	}
	return _p;
}

inline struct __ns1__QueryDataCount_ * soap_new_set___ns1__QueryDataCount_(
	struct soap *soap,
	_ns1__QueryDataCount *ns1__QueryDataCount)
{
	struct __ns1__QueryDataCount_ *_p = ::soap_new___ns1__QueryDataCount_(soap);
	if (_p)
	{	::soap_default___ns1__QueryDataCount_(soap, _p);
		_p->ns1__QueryDataCount = ns1__QueryDataCount;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryDataCount_(struct soap*, const struct __ns1__QueryDataCount_ *, const char*, const char*);

inline int soap_write___ns1__QueryDataCount_(struct soap *soap, struct __ns1__QueryDataCount_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__QueryDataCount_(soap, p), 0) || ::soap_put___ns1__QueryDataCount_(soap, p, "-ns1:QueryDataCount", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__QueryDataCount_(struct soap *soap, const char *URL, struct __ns1__QueryDataCount_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryDataCount_(soap, p), 0) || ::soap_put___ns1__QueryDataCount_(soap, p, "-ns1:QueryDataCount", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__QueryDataCount_(struct soap *soap, const char *URL, struct __ns1__QueryDataCount_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryDataCount_(soap, p), 0) || ::soap_put___ns1__QueryDataCount_(soap, p, "-ns1:QueryDataCount", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__QueryDataCount_ * SOAP_FMAC4 soap_get___ns1__QueryDataCount_(struct soap*, struct __ns1__QueryDataCount_ *, const char*, const char*);

inline int soap_read___ns1__QueryDataCount_(struct soap *soap, struct __ns1__QueryDataCount_ *p)
{
	if (p)
	{	::soap_default___ns1__QueryDataCount_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__QueryDataCount_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__QueryDataCount_(struct soap *soap, const char *URL, struct __ns1__QueryDataCount_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__QueryDataCount_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__QueryDataCount_(struct soap *soap, struct __ns1__QueryDataCount_ *p)
{
	if (::soap_read___ns1__QueryDataCount_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__QueryData__DEFINED
#define SOAP_TYPE___ns1__QueryData__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryData_(struct soap*, struct __ns1__QueryData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryData_(struct soap*, const struct __ns1__QueryData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryData_(struct soap*, const char*, int, const struct __ns1__QueryData_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryData_ * SOAP_FMAC4 soap_in___ns1__QueryData_(struct soap*, const char*, struct __ns1__QueryData_ *, const char*);
SOAP_FMAC1 struct __ns1__QueryData_ * SOAP_FMAC2 soap_instantiate___ns1__QueryData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryData_ * soap_new___ns1__QueryData_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__QueryData_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__QueryData_ * soap_new_req___ns1__QueryData_(
	struct soap *soap)
{
	struct __ns1__QueryData_ *_p = ::soap_new___ns1__QueryData_(soap);
	if (_p)
	{	::soap_default___ns1__QueryData_(soap, _p);
	}
	return _p;
}

inline struct __ns1__QueryData_ * soap_new_set___ns1__QueryData_(
	struct soap *soap,
	_ns1__QueryData *ns1__QueryData)
{
	struct __ns1__QueryData_ *_p = ::soap_new___ns1__QueryData_(soap);
	if (_p)
	{	::soap_default___ns1__QueryData_(soap, _p);
		_p->ns1__QueryData = ns1__QueryData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryData_(struct soap*, const struct __ns1__QueryData_ *, const char*, const char*);

inline int soap_write___ns1__QueryData_(struct soap *soap, struct __ns1__QueryData_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__QueryData_(soap, p), 0) || ::soap_put___ns1__QueryData_(soap, p, "-ns1:QueryData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__QueryData_(struct soap *soap, const char *URL, struct __ns1__QueryData_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryData_(soap, p), 0) || ::soap_put___ns1__QueryData_(soap, p, "-ns1:QueryData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__QueryData_(struct soap *soap, const char *URL, struct __ns1__QueryData_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryData_(soap, p), 0) || ::soap_put___ns1__QueryData_(soap, p, "-ns1:QueryData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__QueryData_ * SOAP_FMAC4 soap_get___ns1__QueryData_(struct soap*, struct __ns1__QueryData_ *, const char*, const char*);

inline int soap_read___ns1__QueryData_(struct soap *soap, struct __ns1__QueryData_ *p)
{
	if (p)
	{	::soap_default___ns1__QueryData_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__QueryData_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__QueryData_(struct soap *soap, const char *URL, struct __ns1__QueryData_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__QueryData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__QueryData_(struct soap *soap, struct __ns1__QueryData_ *p)
{
	if (::soap_read___ns1__QueryData_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDBString__DEFINED
#define SOAP_TYPE___ns1__GetDBString__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDBString_(struct soap*, struct __ns1__GetDBString_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDBString_(struct soap*, const struct __ns1__GetDBString_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDBString_(struct soap*, const char*, int, const struct __ns1__GetDBString_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDBString_ * SOAP_FMAC4 soap_in___ns1__GetDBString_(struct soap*, const char*, struct __ns1__GetDBString_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDBString_ * SOAP_FMAC2 soap_instantiate___ns1__GetDBString_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDBString_ * soap_new___ns1__GetDBString_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDBString_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDBString_ * soap_new_req___ns1__GetDBString_(
	struct soap *soap)
{
	struct __ns1__GetDBString_ *_p = ::soap_new___ns1__GetDBString_(soap);
	if (_p)
	{	::soap_default___ns1__GetDBString_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDBString_ * soap_new_set___ns1__GetDBString_(
	struct soap *soap,
	_ns1__GetDBString *ns1__GetDBString)
{
	struct __ns1__GetDBString_ *_p = ::soap_new___ns1__GetDBString_(soap);
	if (_p)
	{	::soap_default___ns1__GetDBString_(soap, _p);
		_p->ns1__GetDBString = ns1__GetDBString;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDBString_(struct soap*, const struct __ns1__GetDBString_ *, const char*, const char*);

inline int soap_write___ns1__GetDBString_(struct soap *soap, struct __ns1__GetDBString_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDBString_(soap, p), 0) || ::soap_put___ns1__GetDBString_(soap, p, "-ns1:GetDBString", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDBString_(struct soap *soap, const char *URL, struct __ns1__GetDBString_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDBString_(soap, p), 0) || ::soap_put___ns1__GetDBString_(soap, p, "-ns1:GetDBString", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDBString_(struct soap *soap, const char *URL, struct __ns1__GetDBString_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDBString_(soap, p), 0) || ::soap_put___ns1__GetDBString_(soap, p, "-ns1:GetDBString", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDBString_ * SOAP_FMAC4 soap_get___ns1__GetDBString_(struct soap*, struct __ns1__GetDBString_ *, const char*, const char*);

inline int soap_read___ns1__GetDBString_(struct soap *soap, struct __ns1__GetDBString_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDBString_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDBString_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDBString_(struct soap *soap, const char *URL, struct __ns1__GetDBString_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDBString_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDBString_(struct soap *soap, struct __ns1__GetDBString_ *p)
{
	if (::soap_read___ns1__GetDBString_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__HelloWorld__DEFINED
#define SOAP_TYPE___ns1__HelloWorld__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorld_(struct soap*, struct __ns1__HelloWorld_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorld_(struct soap*, const struct __ns1__HelloWorld_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorld_(struct soap*, const char*, int, const struct __ns1__HelloWorld_ *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorld_ * SOAP_FMAC4 soap_in___ns1__HelloWorld_(struct soap*, const char*, struct __ns1__HelloWorld_ *, const char*);
SOAP_FMAC1 struct __ns1__HelloWorld_ * SOAP_FMAC2 soap_instantiate___ns1__HelloWorld_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__HelloWorld_ * soap_new___ns1__HelloWorld_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__HelloWorld_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__HelloWorld_ * soap_new_req___ns1__HelloWorld_(
	struct soap *soap)
{
	struct __ns1__HelloWorld_ *_p = ::soap_new___ns1__HelloWorld_(soap);
	if (_p)
	{	::soap_default___ns1__HelloWorld_(soap, _p);
	}
	return _p;
}

inline struct __ns1__HelloWorld_ * soap_new_set___ns1__HelloWorld_(
	struct soap *soap,
	_ns1__HelloWorld *ns1__HelloWorld)
{
	struct __ns1__HelloWorld_ *_p = ::soap_new___ns1__HelloWorld_(soap);
	if (_p)
	{	::soap_default___ns1__HelloWorld_(soap, _p);
		_p->ns1__HelloWorld = ns1__HelloWorld;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorld_(struct soap*, const struct __ns1__HelloWorld_ *, const char*, const char*);

inline int soap_write___ns1__HelloWorld_(struct soap *soap, struct __ns1__HelloWorld_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__HelloWorld_(soap, p), 0) || ::soap_put___ns1__HelloWorld_(soap, p, "-ns1:HelloWorld", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__HelloWorld_(struct soap *soap, const char *URL, struct __ns1__HelloWorld_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__HelloWorld_(soap, p), 0) || ::soap_put___ns1__HelloWorld_(soap, p, "-ns1:HelloWorld", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__HelloWorld_(struct soap *soap, const char *URL, struct __ns1__HelloWorld_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__HelloWorld_(soap, p), 0) || ::soap_put___ns1__HelloWorld_(soap, p, "-ns1:HelloWorld", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__HelloWorld_ * SOAP_FMAC4 soap_get___ns1__HelloWorld_(struct soap*, struct __ns1__HelloWorld_ *, const char*, const char*);

inline int soap_read___ns1__HelloWorld_(struct soap *soap, struct __ns1__HelloWorld_ *p)
{
	if (p)
	{	::soap_default___ns1__HelloWorld_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__HelloWorld_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__HelloWorld_(struct soap *soap, const char *URL, struct __ns1__HelloWorld_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__HelloWorld_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__HelloWorld_(struct soap *soap, struct __ns1__HelloWorld_ *p)
{
	if (::soap_read___ns1__HelloWorld_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__CheckDevCode__DEFINED
#define SOAP_TYPE___ns1__CheckDevCode__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckDevCode_(struct soap*, struct __ns1__CheckDevCode_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckDevCode_(struct soap*, const struct __ns1__CheckDevCode_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckDevCode_(struct soap*, const char*, int, const struct __ns1__CheckDevCode_ *, const char*);
SOAP_FMAC3 struct __ns1__CheckDevCode_ * SOAP_FMAC4 soap_in___ns1__CheckDevCode_(struct soap*, const char*, struct __ns1__CheckDevCode_ *, const char*);
SOAP_FMAC1 struct __ns1__CheckDevCode_ * SOAP_FMAC2 soap_instantiate___ns1__CheckDevCode_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckDevCode_ * soap_new___ns1__CheckDevCode_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CheckDevCode_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CheckDevCode_ * soap_new_req___ns1__CheckDevCode_(
	struct soap *soap)
{
	struct __ns1__CheckDevCode_ *_p = ::soap_new___ns1__CheckDevCode_(soap);
	if (_p)
	{	::soap_default___ns1__CheckDevCode_(soap, _p);
	}
	return _p;
}

inline struct __ns1__CheckDevCode_ * soap_new_set___ns1__CheckDevCode_(
	struct soap *soap,
	_ns1__CheckDevCode *ns1__CheckDevCode)
{
	struct __ns1__CheckDevCode_ *_p = ::soap_new___ns1__CheckDevCode_(soap);
	if (_p)
	{	::soap_default___ns1__CheckDevCode_(soap, _p);
		_p->ns1__CheckDevCode = ns1__CheckDevCode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckDevCode_(struct soap*, const struct __ns1__CheckDevCode_ *, const char*, const char*);

inline int soap_write___ns1__CheckDevCode_(struct soap *soap, struct __ns1__CheckDevCode_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CheckDevCode_(soap, p), 0) || ::soap_put___ns1__CheckDevCode_(soap, p, "-ns1:CheckDevCode", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CheckDevCode_(struct soap *soap, const char *URL, struct __ns1__CheckDevCode_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckDevCode_(soap, p), 0) || ::soap_put___ns1__CheckDevCode_(soap, p, "-ns1:CheckDevCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CheckDevCode_(struct soap *soap, const char *URL, struct __ns1__CheckDevCode_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckDevCode_(soap, p), 0) || ::soap_put___ns1__CheckDevCode_(soap, p, "-ns1:CheckDevCode", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CheckDevCode_ * SOAP_FMAC4 soap_get___ns1__CheckDevCode_(struct soap*, struct __ns1__CheckDevCode_ *, const char*, const char*);

inline int soap_read___ns1__CheckDevCode_(struct soap *soap, struct __ns1__CheckDevCode_ *p)
{
	if (p)
	{	::soap_default___ns1__CheckDevCode_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CheckDevCode_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CheckDevCode_(struct soap *soap, const char *URL, struct __ns1__CheckDevCode_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CheckDevCode_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__CheckDevCode_(struct soap *soap, struct __ns1__CheckDevCode_ *p)
{
	if (::soap_read___ns1__CheckDevCode_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDevCode__DEFINED
#define SOAP_TYPE___ns1__GetDevCode__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDevCode_(struct soap*, struct __ns1__GetDevCode_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDevCode_(struct soap*, const struct __ns1__GetDevCode_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDevCode_(struct soap*, const char*, int, const struct __ns1__GetDevCode_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDevCode_ * SOAP_FMAC4 soap_in___ns1__GetDevCode_(struct soap*, const char*, struct __ns1__GetDevCode_ *, const char*);
SOAP_FMAC1 struct __ns1__GetDevCode_ * SOAP_FMAC2 soap_instantiate___ns1__GetDevCode_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDevCode_ * soap_new___ns1__GetDevCode_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDevCode_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDevCode_ * soap_new_req___ns1__GetDevCode_(
	struct soap *soap)
{
	struct __ns1__GetDevCode_ *_p = ::soap_new___ns1__GetDevCode_(soap);
	if (_p)
	{	::soap_default___ns1__GetDevCode_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDevCode_ * soap_new_set___ns1__GetDevCode_(
	struct soap *soap,
	_ns1__GetDevCode *ns1__GetDevCode)
{
	struct __ns1__GetDevCode_ *_p = ::soap_new___ns1__GetDevCode_(soap);
	if (_p)
	{	::soap_default___ns1__GetDevCode_(soap, _p);
		_p->ns1__GetDevCode = ns1__GetDevCode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDevCode_(struct soap*, const struct __ns1__GetDevCode_ *, const char*, const char*);

inline int soap_write___ns1__GetDevCode_(struct soap *soap, struct __ns1__GetDevCode_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDevCode_(soap, p), 0) || ::soap_put___ns1__GetDevCode_(soap, p, "-ns1:GetDevCode", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDevCode_(struct soap *soap, const char *URL, struct __ns1__GetDevCode_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevCode_(soap, p), 0) || ::soap_put___ns1__GetDevCode_(soap, p, "-ns1:GetDevCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDevCode_(struct soap *soap, const char *URL, struct __ns1__GetDevCode_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevCode_(soap, p), 0) || ::soap_put___ns1__GetDevCode_(soap, p, "-ns1:GetDevCode", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDevCode_ * SOAP_FMAC4 soap_get___ns1__GetDevCode_(struct soap*, struct __ns1__GetDevCode_ *, const char*, const char*);

inline int soap_read___ns1__GetDevCode_(struct soap *soap, struct __ns1__GetDevCode_ *p)
{
	if (p)
	{	::soap_default___ns1__GetDevCode_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDevCode_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDevCode_(struct soap *soap, const char *URL, struct __ns1__GetDevCode_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDevCode_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDevCode_(struct soap *soap, struct __ns1__GetDevCode_ *p)
{
	if (::soap_read___ns1__GetDevCode_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetRyUnit__DEFINED
#define SOAP_TYPE___ns1__GetRyUnit__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetRyUnit_(struct soap*, struct __ns1__GetRyUnit_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetRyUnit_(struct soap*, const struct __ns1__GetRyUnit_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetRyUnit_(struct soap*, const char*, int, const struct __ns1__GetRyUnit_ *, const char*);
SOAP_FMAC3 struct __ns1__GetRyUnit_ * SOAP_FMAC4 soap_in___ns1__GetRyUnit_(struct soap*, const char*, struct __ns1__GetRyUnit_ *, const char*);
SOAP_FMAC1 struct __ns1__GetRyUnit_ * SOAP_FMAC2 soap_instantiate___ns1__GetRyUnit_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetRyUnit_ * soap_new___ns1__GetRyUnit_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetRyUnit_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetRyUnit_ * soap_new_req___ns1__GetRyUnit_(
	struct soap *soap)
{
	struct __ns1__GetRyUnit_ *_p = ::soap_new___ns1__GetRyUnit_(soap);
	if (_p)
	{	::soap_default___ns1__GetRyUnit_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetRyUnit_ * soap_new_set___ns1__GetRyUnit_(
	struct soap *soap,
	_ns1__GetRyUnit *ns1__GetRyUnit)
{
	struct __ns1__GetRyUnit_ *_p = ::soap_new___ns1__GetRyUnit_(soap);
	if (_p)
	{	::soap_default___ns1__GetRyUnit_(soap, _p);
		_p->ns1__GetRyUnit = ns1__GetRyUnit;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetRyUnit_(struct soap*, const struct __ns1__GetRyUnit_ *, const char*, const char*);

inline int soap_write___ns1__GetRyUnit_(struct soap *soap, struct __ns1__GetRyUnit_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetRyUnit_(soap, p), 0) || ::soap_put___ns1__GetRyUnit_(soap, p, "-ns1:GetRyUnit", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetRyUnit_(struct soap *soap, const char *URL, struct __ns1__GetRyUnit_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetRyUnit_(soap, p), 0) || ::soap_put___ns1__GetRyUnit_(soap, p, "-ns1:GetRyUnit", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetRyUnit_(struct soap *soap, const char *URL, struct __ns1__GetRyUnit_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetRyUnit_(soap, p), 0) || ::soap_put___ns1__GetRyUnit_(soap, p, "-ns1:GetRyUnit", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetRyUnit_ * SOAP_FMAC4 soap_get___ns1__GetRyUnit_(struct soap*, struct __ns1__GetRyUnit_ *, const char*, const char*);

inline int soap_read___ns1__GetRyUnit_(struct soap *soap, struct __ns1__GetRyUnit_ *p)
{
	if (p)
	{	::soap_default___ns1__GetRyUnit_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetRyUnit_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetRyUnit_(struct soap *soap, const char *URL, struct __ns1__GetRyUnit_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetRyUnit_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetRyUnit_(struct soap *soap, struct __ns1__GetRyUnit_ *p)
{
	if (::soap_read___ns1__GetRyUnit_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__CheckLoginUser__DEFINED
#define SOAP_TYPE___ns1__CheckLoginUser__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckLoginUser_(struct soap*, struct __ns1__CheckLoginUser_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckLoginUser_(struct soap*, const struct __ns1__CheckLoginUser_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckLoginUser_(struct soap*, const char*, int, const struct __ns1__CheckLoginUser_ *, const char*);
SOAP_FMAC3 struct __ns1__CheckLoginUser_ * SOAP_FMAC4 soap_in___ns1__CheckLoginUser_(struct soap*, const char*, struct __ns1__CheckLoginUser_ *, const char*);
SOAP_FMAC1 struct __ns1__CheckLoginUser_ * SOAP_FMAC2 soap_instantiate___ns1__CheckLoginUser_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckLoginUser_ * soap_new___ns1__CheckLoginUser_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CheckLoginUser_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CheckLoginUser_ * soap_new_req___ns1__CheckLoginUser_(
	struct soap *soap)
{
	struct __ns1__CheckLoginUser_ *_p = ::soap_new___ns1__CheckLoginUser_(soap);
	if (_p)
	{	::soap_default___ns1__CheckLoginUser_(soap, _p);
	}
	return _p;
}

inline struct __ns1__CheckLoginUser_ * soap_new_set___ns1__CheckLoginUser_(
	struct soap *soap,
	_ns1__CheckLoginUser *ns1__CheckLoginUser)
{
	struct __ns1__CheckLoginUser_ *_p = ::soap_new___ns1__CheckLoginUser_(soap);
	if (_p)
	{	::soap_default___ns1__CheckLoginUser_(soap, _p);
		_p->ns1__CheckLoginUser = ns1__CheckLoginUser;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckLoginUser_(struct soap*, const struct __ns1__CheckLoginUser_ *, const char*, const char*);

inline int soap_write___ns1__CheckLoginUser_(struct soap *soap, struct __ns1__CheckLoginUser_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CheckLoginUser_(soap, p), 0) || ::soap_put___ns1__CheckLoginUser_(soap, p, "-ns1:CheckLoginUser", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CheckLoginUser_(struct soap *soap, const char *URL, struct __ns1__CheckLoginUser_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckLoginUser_(soap, p), 0) || ::soap_put___ns1__CheckLoginUser_(soap, p, "-ns1:CheckLoginUser", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CheckLoginUser_(struct soap *soap, const char *URL, struct __ns1__CheckLoginUser_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckLoginUser_(soap, p), 0) || ::soap_put___ns1__CheckLoginUser_(soap, p, "-ns1:CheckLoginUser", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CheckLoginUser_ * SOAP_FMAC4 soap_get___ns1__CheckLoginUser_(struct soap*, struct __ns1__CheckLoginUser_ *, const char*, const char*);

inline int soap_read___ns1__CheckLoginUser_(struct soap *soap, struct __ns1__CheckLoginUser_ *p)
{
	if (p)
	{	::soap_default___ns1__CheckLoginUser_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CheckLoginUser_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CheckLoginUser_(struct soap *soap, const char *URL, struct __ns1__CheckLoginUser_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CheckLoginUser_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__CheckLoginUser_(struct soap *soap, struct __ns1__CheckLoginUser_ *p)
{
	if (::soap_read___ns1__CheckLoginUser_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetPropName__DEFINED
#define SOAP_TYPE___ns1__GetPropName__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPropName_(struct soap*, struct __ns1__GetPropName_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPropName_(struct soap*, const struct __ns1__GetPropName_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPropName_(struct soap*, const char*, int, const struct __ns1__GetPropName_ *, const char*);
SOAP_FMAC3 struct __ns1__GetPropName_ * SOAP_FMAC4 soap_in___ns1__GetPropName_(struct soap*, const char*, struct __ns1__GetPropName_ *, const char*);
SOAP_FMAC1 struct __ns1__GetPropName_ * SOAP_FMAC2 soap_instantiate___ns1__GetPropName_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPropName_ * soap_new___ns1__GetPropName_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetPropName_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetPropName_ * soap_new_req___ns1__GetPropName_(
	struct soap *soap)
{
	struct __ns1__GetPropName_ *_p = ::soap_new___ns1__GetPropName_(soap);
	if (_p)
	{	::soap_default___ns1__GetPropName_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetPropName_ * soap_new_set___ns1__GetPropName_(
	struct soap *soap,
	_ns1__GetPropName *ns1__GetPropName)
{
	struct __ns1__GetPropName_ *_p = ::soap_new___ns1__GetPropName_(soap);
	if (_p)
	{	::soap_default___ns1__GetPropName_(soap, _p);
		_p->ns1__GetPropName = ns1__GetPropName;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPropName_(struct soap*, const struct __ns1__GetPropName_ *, const char*, const char*);

inline int soap_write___ns1__GetPropName_(struct soap *soap, struct __ns1__GetPropName_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetPropName_(soap, p), 0) || ::soap_put___ns1__GetPropName_(soap, p, "-ns1:GetPropName", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetPropName_(struct soap *soap, const char *URL, struct __ns1__GetPropName_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropName_(soap, p), 0) || ::soap_put___ns1__GetPropName_(soap, p, "-ns1:GetPropName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetPropName_(struct soap *soap, const char *URL, struct __ns1__GetPropName_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropName_(soap, p), 0) || ::soap_put___ns1__GetPropName_(soap, p, "-ns1:GetPropName", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetPropName_ * SOAP_FMAC4 soap_get___ns1__GetPropName_(struct soap*, struct __ns1__GetPropName_ *, const char*, const char*);

inline int soap_read___ns1__GetPropName_(struct soap *soap, struct __ns1__GetPropName_ *p)
{
	if (p)
	{	::soap_default___ns1__GetPropName_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetPropName_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetPropName_(struct soap *soap, const char *URL, struct __ns1__GetPropName_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetPropName_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetPropName_(struct soap *soap, struct __ns1__GetPropName_ *p)
{
	if (::soap_read___ns1__GetPropName_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetPropList__DEFINED
#define SOAP_TYPE___ns1__GetPropList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPropList_(struct soap*, struct __ns1__GetPropList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPropList_(struct soap*, const struct __ns1__GetPropList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPropList_(struct soap*, const char*, int, const struct __ns1__GetPropList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetPropList_ * SOAP_FMAC4 soap_in___ns1__GetPropList_(struct soap*, const char*, struct __ns1__GetPropList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetPropList_ * SOAP_FMAC2 soap_instantiate___ns1__GetPropList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPropList_ * soap_new___ns1__GetPropList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetPropList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetPropList_ * soap_new_req___ns1__GetPropList_(
	struct soap *soap)
{
	struct __ns1__GetPropList_ *_p = ::soap_new___ns1__GetPropList_(soap);
	if (_p)
	{	::soap_default___ns1__GetPropList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetPropList_ * soap_new_set___ns1__GetPropList_(
	struct soap *soap,
	_ns1__GetPropList *ns1__GetPropList)
{
	struct __ns1__GetPropList_ *_p = ::soap_new___ns1__GetPropList_(soap);
	if (_p)
	{	::soap_default___ns1__GetPropList_(soap, _p);
		_p->ns1__GetPropList = ns1__GetPropList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPropList_(struct soap*, const struct __ns1__GetPropList_ *, const char*, const char*);

inline int soap_write___ns1__GetPropList_(struct soap *soap, struct __ns1__GetPropList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetPropList_(soap, p), 0) || ::soap_put___ns1__GetPropList_(soap, p, "-ns1:GetPropList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetPropList_(struct soap *soap, const char *URL, struct __ns1__GetPropList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropList_(soap, p), 0) || ::soap_put___ns1__GetPropList_(soap, p, "-ns1:GetPropList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetPropList_(struct soap *soap, const char *URL, struct __ns1__GetPropList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropList_(soap, p), 0) || ::soap_put___ns1__GetPropList_(soap, p, "-ns1:GetPropList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetPropList_ * SOAP_FMAC4 soap_get___ns1__GetPropList_(struct soap*, struct __ns1__GetPropList_ *, const char*, const char*);

inline int soap_read___ns1__GetPropList_(struct soap *soap, struct __ns1__GetPropList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetPropList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetPropList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetPropList_(struct soap *soap, const char *URL, struct __ns1__GetPropList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetPropList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetPropList_(struct soap *soap, struct __ns1__GetPropList_ *p)
{
	if (::soap_read___ns1__GetPropList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskDevFlowChartList__DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskDevFlowChartList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskDevFlowChartList_(struct soap*, struct __ns1__GetYjzhZskDevFlowChartList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskDevFlowChartList_(struct soap*, const struct __ns1__GetYjzhZskDevFlowChartList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskDevFlowChartList_(struct soap*, const char*, int, const struct __ns1__GetYjzhZskDevFlowChartList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskDevFlowChartList_ * SOAP_FMAC4 soap_in___ns1__GetYjzhZskDevFlowChartList_(struct soap*, const char*, struct __ns1__GetYjzhZskDevFlowChartList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskDevFlowChartList_ * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskDevFlowChartList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskDevFlowChartList_ * soap_new___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskDevFlowChartList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskDevFlowChartList_ * soap_new_req___ns1__GetYjzhZskDevFlowChartList_(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskDevFlowChartList_ *_p = ::soap_new___ns1__GetYjzhZskDevFlowChartList_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskDevFlowChartList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskDevFlowChartList_ * soap_new_set___ns1__GetYjzhZskDevFlowChartList_(
	struct soap *soap,
	_ns1__GetYjzhZskDevFlowChartList *ns1__GetYjzhZskDevFlowChartList)
{
	struct __ns1__GetYjzhZskDevFlowChartList_ *_p = ::soap_new___ns1__GetYjzhZskDevFlowChartList_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskDevFlowChartList_(soap, _p);
		_p->ns1__GetYjzhZskDevFlowChartList = ns1__GetYjzhZskDevFlowChartList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskDevFlowChartList_(struct soap*, const struct __ns1__GetYjzhZskDevFlowChartList_ *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, struct __ns1__GetYjzhZskDevFlowChartList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskDevFlowChartList_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskDevFlowChartList_(soap, p, "-ns1:GetYjzhZskDevFlowChartList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskDevFlowChartList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskDevFlowChartList_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskDevFlowChartList_(soap, p, "-ns1:GetYjzhZskDevFlowChartList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskDevFlowChartList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskDevFlowChartList_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskDevFlowChartList_(soap, p, "-ns1:GetYjzhZskDevFlowChartList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskDevFlowChartList_ * SOAP_FMAC4 soap_get___ns1__GetYjzhZskDevFlowChartList_(struct soap*, struct __ns1__GetYjzhZskDevFlowChartList_ *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, struct __ns1__GetYjzhZskDevFlowChartList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskDevFlowChartList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskDevFlowChartList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskDevFlowChartList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskDevFlowChartList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, struct __ns1__GetYjzhZskDevFlowChartList_ *p)
{
	if (::soap_read___ns1__GetYjzhZskDevFlowChartList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskOtherFlowChartList__DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskOtherFlowChartList__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, struct __ns1__GetYjzhZskOtherFlowChartList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, const struct __ns1__GetYjzhZskOtherFlowChartList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, const char*, int, const struct __ns1__GetYjzhZskOtherFlowChartList_ *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskOtherFlowChartList_ * SOAP_FMAC4 soap_in___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, const char*, struct __ns1__GetYjzhZskOtherFlowChartList_ *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskOtherFlowChartList_ * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskOtherFlowChartList_ * soap_new___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskOtherFlowChartList_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskOtherFlowChartList_ * soap_new_req___ns1__GetYjzhZskOtherFlowChartList_(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskOtherFlowChartList_ *_p = ::soap_new___ns1__GetYjzhZskOtherFlowChartList_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskOtherFlowChartList_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskOtherFlowChartList_ * soap_new_set___ns1__GetYjzhZskOtherFlowChartList_(
	struct soap *soap,
	_ns1__GetYjzhZskOtherFlowChartList *ns1__GetYjzhZskOtherFlowChartList)
{
	struct __ns1__GetYjzhZskOtherFlowChartList_ *_p = ::soap_new___ns1__GetYjzhZskOtherFlowChartList_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskOtherFlowChartList_(soap, _p);
		_p->ns1__GetYjzhZskOtherFlowChartList = ns1__GetYjzhZskOtherFlowChartList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, const struct __ns1__GetYjzhZskOtherFlowChartList_ *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, struct __ns1__GetYjzhZskOtherFlowChartList_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskOtherFlowChartList_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskOtherFlowChartList_(soap, p, "-ns1:GetYjzhZskOtherFlowChartList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskOtherFlowChartList_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskOtherFlowChartList_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskOtherFlowChartList_(soap, p, "-ns1:GetYjzhZskOtherFlowChartList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskOtherFlowChartList_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskOtherFlowChartList_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskOtherFlowChartList_(soap, p, "-ns1:GetYjzhZskOtherFlowChartList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskOtherFlowChartList_ * SOAP_FMAC4 soap_get___ns1__GetYjzhZskOtherFlowChartList_(struct soap*, struct __ns1__GetYjzhZskOtherFlowChartList_ *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, struct __ns1__GetYjzhZskOtherFlowChartList_ *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskOtherFlowChartList_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskOtherFlowChartList_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskOtherFlowChartList_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskOtherFlowChartList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, struct __ns1__GetYjzhZskOtherFlowChartList_ *p)
{
	if (::soap_read___ns1__GetYjzhZskOtherFlowChartList_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskGzFlow__DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskGzFlow__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskGzFlow_(struct soap*, struct __ns1__GetYjzhZskGzFlow_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskGzFlow_(struct soap*, const struct __ns1__GetYjzhZskGzFlow_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskGzFlow_(struct soap*, const char*, int, const struct __ns1__GetYjzhZskGzFlow_ *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskGzFlow_ * SOAP_FMAC4 soap_in___ns1__GetYjzhZskGzFlow_(struct soap*, const char*, struct __ns1__GetYjzhZskGzFlow_ *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskGzFlow_ * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskGzFlow_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskGzFlow_ * soap_new___ns1__GetYjzhZskGzFlow_(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskGzFlow_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskGzFlow_ * soap_new_req___ns1__GetYjzhZskGzFlow_(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskGzFlow_ *_p = ::soap_new___ns1__GetYjzhZskGzFlow_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskGzFlow_(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskGzFlow_ * soap_new_set___ns1__GetYjzhZskGzFlow_(
	struct soap *soap,
	_ns1__GetYjzhZskGzFlow *ns1__GetYjzhZskGzFlow)
{
	struct __ns1__GetYjzhZskGzFlow_ *_p = ::soap_new___ns1__GetYjzhZskGzFlow_(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskGzFlow_(soap, _p);
		_p->ns1__GetYjzhZskGzFlow = ns1__GetYjzhZskGzFlow;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskGzFlow_(struct soap*, const struct __ns1__GetYjzhZskGzFlow_ *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskGzFlow_(struct soap *soap, struct __ns1__GetYjzhZskGzFlow_ const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskGzFlow_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskGzFlow_(soap, p, "-ns1:GetYjzhZskGzFlow", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskGzFlow_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskGzFlow_ const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskGzFlow_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskGzFlow_(soap, p, "-ns1:GetYjzhZskGzFlow", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskGzFlow_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskGzFlow_ const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskGzFlow_(soap, p), 0) || ::soap_put___ns1__GetYjzhZskGzFlow_(soap, p, "-ns1:GetYjzhZskGzFlow", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskGzFlow_ * SOAP_FMAC4 soap_get___ns1__GetYjzhZskGzFlow_(struct soap*, struct __ns1__GetYjzhZskGzFlow_ *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskGzFlow_(struct soap *soap, struct __ns1__GetYjzhZskGzFlow_ *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskGzFlow_(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskGzFlow_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskGzFlow_(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskGzFlow_ *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskGzFlow_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskGzFlow_(struct soap *soap, struct __ns1__GetYjzhZskGzFlow_ *p)
{
	if (::soap_read___ns1__GetYjzhZskGzFlow_(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskAlarmTypes_DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskAlarmTypes_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskAlarmTypes(struct soap*, struct __ns1__GetYjzhZskAlarmTypes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskAlarmTypes(struct soap*, const struct __ns1__GetYjzhZskAlarmTypes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskAlarmTypes(struct soap*, const char*, int, const struct __ns1__GetYjzhZskAlarmTypes *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskAlarmTypes * SOAP_FMAC4 soap_in___ns1__GetYjzhZskAlarmTypes(struct soap*, const char*, struct __ns1__GetYjzhZskAlarmTypes *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskAlarmTypes * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskAlarmTypes(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskAlarmTypes * soap_new___ns1__GetYjzhZskAlarmTypes(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskAlarmTypes(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskAlarmTypes * soap_new_req___ns1__GetYjzhZskAlarmTypes(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskAlarmTypes *_p = ::soap_new___ns1__GetYjzhZskAlarmTypes(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskAlarmTypes(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskAlarmTypes * soap_new_set___ns1__GetYjzhZskAlarmTypes(
	struct soap *soap,
	_ns1__GetYjzhZskAlarmTypes *ns1__GetYjzhZskAlarmTypes)
{
	struct __ns1__GetYjzhZskAlarmTypes *_p = ::soap_new___ns1__GetYjzhZskAlarmTypes(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskAlarmTypes(soap, _p);
		_p->ns1__GetYjzhZskAlarmTypes = ns1__GetYjzhZskAlarmTypes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskAlarmTypes(struct soap*, const struct __ns1__GetYjzhZskAlarmTypes *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskAlarmTypes(struct soap *soap, struct __ns1__GetYjzhZskAlarmTypes const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskAlarmTypes(soap, p), 0) || ::soap_put___ns1__GetYjzhZskAlarmTypes(soap, p, "-ns1:GetYjzhZskAlarmTypes", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskAlarmTypes const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskAlarmTypes(soap, p), 0) || ::soap_put___ns1__GetYjzhZskAlarmTypes(soap, p, "-ns1:GetYjzhZskAlarmTypes", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskAlarmTypes const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskAlarmTypes(soap, p), 0) || ::soap_put___ns1__GetYjzhZskAlarmTypes(soap, p, "-ns1:GetYjzhZskAlarmTypes", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskAlarmTypes * SOAP_FMAC4 soap_get___ns1__GetYjzhZskAlarmTypes(struct soap*, struct __ns1__GetYjzhZskAlarmTypes *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskAlarmTypes(struct soap *soap, struct __ns1__GetYjzhZskAlarmTypes *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskAlarmTypes(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskAlarmTypes(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskAlarmTypes *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskAlarmTypes(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskAlarmTypes(struct soap *soap, struct __ns1__GetYjzhZskAlarmTypes *p)
{
	if (::soap_read___ns1__GetYjzhZskAlarmTypes(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SelectYjzhDevice_DEFINED
#define SOAP_TYPE___ns1__SelectYjzhDevice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectYjzhDevice(struct soap*, struct __ns1__SelectYjzhDevice *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectYjzhDevice(struct soap*, const struct __ns1__SelectYjzhDevice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectYjzhDevice(struct soap*, const char*, int, const struct __ns1__SelectYjzhDevice *, const char*);
SOAP_FMAC3 struct __ns1__SelectYjzhDevice * SOAP_FMAC4 soap_in___ns1__SelectYjzhDevice(struct soap*, const char*, struct __ns1__SelectYjzhDevice *, const char*);
SOAP_FMAC1 struct __ns1__SelectYjzhDevice * SOAP_FMAC2 soap_instantiate___ns1__SelectYjzhDevice(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SelectYjzhDevice * soap_new___ns1__SelectYjzhDevice(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SelectYjzhDevice(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SelectYjzhDevice * soap_new_req___ns1__SelectYjzhDevice(
	struct soap *soap)
{
	struct __ns1__SelectYjzhDevice *_p = ::soap_new___ns1__SelectYjzhDevice(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhDevice(soap, _p);
	}
	return _p;
}

inline struct __ns1__SelectYjzhDevice * soap_new_set___ns1__SelectYjzhDevice(
	struct soap *soap,
	_ns1__SelectYjzhDevice *ns1__SelectYjzhDevice)
{
	struct __ns1__SelectYjzhDevice *_p = ::soap_new___ns1__SelectYjzhDevice(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhDevice(soap, _p);
		_p->ns1__SelectYjzhDevice = ns1__SelectYjzhDevice;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectYjzhDevice(struct soap*, const struct __ns1__SelectYjzhDevice *, const char*, const char*);

inline int soap_write___ns1__SelectYjzhDevice(struct soap *soap, struct __ns1__SelectYjzhDevice const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SelectYjzhDevice(soap, p), 0) || ::soap_put___ns1__SelectYjzhDevice(soap, p, "-ns1:SelectYjzhDevice", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SelectYjzhDevice(struct soap *soap, const char *URL, struct __ns1__SelectYjzhDevice const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhDevice(soap, p), 0) || ::soap_put___ns1__SelectYjzhDevice(soap, p, "-ns1:SelectYjzhDevice", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SelectYjzhDevice(struct soap *soap, const char *URL, struct __ns1__SelectYjzhDevice const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhDevice(soap, p), 0) || ::soap_put___ns1__SelectYjzhDevice(soap, p, "-ns1:SelectYjzhDevice", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SelectYjzhDevice * SOAP_FMAC4 soap_get___ns1__SelectYjzhDevice(struct soap*, struct __ns1__SelectYjzhDevice *, const char*, const char*);

inline int soap_read___ns1__SelectYjzhDevice(struct soap *soap, struct __ns1__SelectYjzhDevice *p)
{
	if (p)
	{	::soap_default___ns1__SelectYjzhDevice(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SelectYjzhDevice(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SelectYjzhDevice(struct soap *soap, const char *URL, struct __ns1__SelectYjzhDevice *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SelectYjzhDevice(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SelectYjzhDevice(struct soap *soap, struct __ns1__SelectYjzhDevice *p)
{
	if (::soap_read___ns1__SelectYjzhDevice(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SelectYjzhStation_DEFINED
#define SOAP_TYPE___ns1__SelectYjzhStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SelectYjzhStation(struct soap*, struct __ns1__SelectYjzhStation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SelectYjzhStation(struct soap*, const struct __ns1__SelectYjzhStation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SelectYjzhStation(struct soap*, const char*, int, const struct __ns1__SelectYjzhStation *, const char*);
SOAP_FMAC3 struct __ns1__SelectYjzhStation * SOAP_FMAC4 soap_in___ns1__SelectYjzhStation(struct soap*, const char*, struct __ns1__SelectYjzhStation *, const char*);
SOAP_FMAC1 struct __ns1__SelectYjzhStation * SOAP_FMAC2 soap_instantiate___ns1__SelectYjzhStation(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SelectYjzhStation * soap_new___ns1__SelectYjzhStation(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SelectYjzhStation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SelectYjzhStation * soap_new_req___ns1__SelectYjzhStation(
	struct soap *soap)
{
	struct __ns1__SelectYjzhStation *_p = ::soap_new___ns1__SelectYjzhStation(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhStation(soap, _p);
	}
	return _p;
}

inline struct __ns1__SelectYjzhStation * soap_new_set___ns1__SelectYjzhStation(
	struct soap *soap,
	_ns1__SelectYjzhStation *ns1__SelectYjzhStation)
{
	struct __ns1__SelectYjzhStation *_p = ::soap_new___ns1__SelectYjzhStation(soap);
	if (_p)
	{	::soap_default___ns1__SelectYjzhStation(soap, _p);
		_p->ns1__SelectYjzhStation = ns1__SelectYjzhStation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SelectYjzhStation(struct soap*, const struct __ns1__SelectYjzhStation *, const char*, const char*);

inline int soap_write___ns1__SelectYjzhStation(struct soap *soap, struct __ns1__SelectYjzhStation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SelectYjzhStation(soap, p), 0) || ::soap_put___ns1__SelectYjzhStation(soap, p, "-ns1:SelectYjzhStation", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SelectYjzhStation(struct soap *soap, const char *URL, struct __ns1__SelectYjzhStation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhStation(soap, p), 0) || ::soap_put___ns1__SelectYjzhStation(soap, p, "-ns1:SelectYjzhStation", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SelectYjzhStation(struct soap *soap, const char *URL, struct __ns1__SelectYjzhStation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SelectYjzhStation(soap, p), 0) || ::soap_put___ns1__SelectYjzhStation(soap, p, "-ns1:SelectYjzhStation", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SelectYjzhStation * SOAP_FMAC4 soap_get___ns1__SelectYjzhStation(struct soap*, struct __ns1__SelectYjzhStation *, const char*, const char*);

inline int soap_read___ns1__SelectYjzhStation(struct soap *soap, struct __ns1__SelectYjzhStation *p)
{
	if (p)
	{	::soap_default___ns1__SelectYjzhStation(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SelectYjzhStation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SelectYjzhStation(struct soap *soap, const char *URL, struct __ns1__SelectYjzhStation *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SelectYjzhStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SelectYjzhStation(struct soap *soap, struct __ns1__SelectYjzhStation *p)
{
	if (::soap_read___ns1__SelectYjzhStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SaveMapFile_DEFINED
#define SOAP_TYPE___ns1__SaveMapFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveMapFile(struct soap*, struct __ns1__SaveMapFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveMapFile(struct soap*, const struct __ns1__SaveMapFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveMapFile(struct soap*, const char*, int, const struct __ns1__SaveMapFile *, const char*);
SOAP_FMAC3 struct __ns1__SaveMapFile * SOAP_FMAC4 soap_in___ns1__SaveMapFile(struct soap*, const char*, struct __ns1__SaveMapFile *, const char*);
SOAP_FMAC1 struct __ns1__SaveMapFile * SOAP_FMAC2 soap_instantiate___ns1__SaveMapFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveMapFile * soap_new___ns1__SaveMapFile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SaveMapFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SaveMapFile * soap_new_req___ns1__SaveMapFile(
	struct soap *soap)
{
	struct __ns1__SaveMapFile *_p = ::soap_new___ns1__SaveMapFile(soap);
	if (_p)
	{	::soap_default___ns1__SaveMapFile(soap, _p);
	}
	return _p;
}

inline struct __ns1__SaveMapFile * soap_new_set___ns1__SaveMapFile(
	struct soap *soap,
	_ns1__SaveMapFile *ns1__SaveMapFile)
{
	struct __ns1__SaveMapFile *_p = ::soap_new___ns1__SaveMapFile(soap);
	if (_p)
	{	::soap_default___ns1__SaveMapFile(soap, _p);
		_p->ns1__SaveMapFile = ns1__SaveMapFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveMapFile(struct soap*, const struct __ns1__SaveMapFile *, const char*, const char*);

inline int soap_write___ns1__SaveMapFile(struct soap *soap, struct __ns1__SaveMapFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SaveMapFile(soap, p), 0) || ::soap_put___ns1__SaveMapFile(soap, p, "-ns1:SaveMapFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SaveMapFile(struct soap *soap, const char *URL, struct __ns1__SaveMapFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveMapFile(soap, p), 0) || ::soap_put___ns1__SaveMapFile(soap, p, "-ns1:SaveMapFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SaveMapFile(struct soap *soap, const char *URL, struct __ns1__SaveMapFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveMapFile(soap, p), 0) || ::soap_put___ns1__SaveMapFile(soap, p, "-ns1:SaveMapFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SaveMapFile * SOAP_FMAC4 soap_get___ns1__SaveMapFile(struct soap*, struct __ns1__SaveMapFile *, const char*, const char*);

inline int soap_read___ns1__SaveMapFile(struct soap *soap, struct __ns1__SaveMapFile *p)
{
	if (p)
	{	::soap_default___ns1__SaveMapFile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SaveMapFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SaveMapFile(struct soap *soap, const char *URL, struct __ns1__SaveMapFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SaveMapFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SaveMapFile(struct soap *soap, struct __ns1__SaveMapFile *p)
{
	if (::soap_read___ns1__SaveMapFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GzGetDeviceStruct_DEFINED
#define SOAP_TYPE___ns1__GzGetDeviceStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GzGetDeviceStruct(struct soap*, struct __ns1__GzGetDeviceStruct *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GzGetDeviceStruct(struct soap*, const struct __ns1__GzGetDeviceStruct *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GzGetDeviceStruct(struct soap*, const char*, int, const struct __ns1__GzGetDeviceStruct *, const char*);
SOAP_FMAC3 struct __ns1__GzGetDeviceStruct * SOAP_FMAC4 soap_in___ns1__GzGetDeviceStruct(struct soap*, const char*, struct __ns1__GzGetDeviceStruct *, const char*);
SOAP_FMAC1 struct __ns1__GzGetDeviceStruct * SOAP_FMAC2 soap_instantiate___ns1__GzGetDeviceStruct(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GzGetDeviceStruct * soap_new___ns1__GzGetDeviceStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GzGetDeviceStruct(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GzGetDeviceStruct * soap_new_req___ns1__GzGetDeviceStruct(
	struct soap *soap)
{
	struct __ns1__GzGetDeviceStruct *_p = ::soap_new___ns1__GzGetDeviceStruct(soap);
	if (_p)
	{	::soap_default___ns1__GzGetDeviceStruct(soap, _p);
	}
	return _p;
}

inline struct __ns1__GzGetDeviceStruct * soap_new_set___ns1__GzGetDeviceStruct(
	struct soap *soap,
	_ns1__GzGetDeviceStruct *ns1__GzGetDeviceStruct)
{
	struct __ns1__GzGetDeviceStruct *_p = ::soap_new___ns1__GzGetDeviceStruct(soap);
	if (_p)
	{	::soap_default___ns1__GzGetDeviceStruct(soap, _p);
		_p->ns1__GzGetDeviceStruct = ns1__GzGetDeviceStruct;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GzGetDeviceStruct(struct soap*, const struct __ns1__GzGetDeviceStruct *, const char*, const char*);

inline int soap_write___ns1__GzGetDeviceStruct(struct soap *soap, struct __ns1__GzGetDeviceStruct const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GzGetDeviceStruct(soap, p), 0) || ::soap_put___ns1__GzGetDeviceStruct(soap, p, "-ns1:GzGetDeviceStruct", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GzGetDeviceStruct(struct soap *soap, const char *URL, struct __ns1__GzGetDeviceStruct const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetDeviceStruct(soap, p), 0) || ::soap_put___ns1__GzGetDeviceStruct(soap, p, "-ns1:GzGetDeviceStruct", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GzGetDeviceStruct(struct soap *soap, const char *URL, struct __ns1__GzGetDeviceStruct const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetDeviceStruct(soap, p), 0) || ::soap_put___ns1__GzGetDeviceStruct(soap, p, "-ns1:GzGetDeviceStruct", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GzGetDeviceStruct * SOAP_FMAC4 soap_get___ns1__GzGetDeviceStruct(struct soap*, struct __ns1__GzGetDeviceStruct *, const char*, const char*);

inline int soap_read___ns1__GzGetDeviceStruct(struct soap *soap, struct __ns1__GzGetDeviceStruct *p)
{
	if (p)
	{	::soap_default___ns1__GzGetDeviceStruct(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GzGetDeviceStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GzGetDeviceStruct(struct soap *soap, const char *URL, struct __ns1__GzGetDeviceStruct *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GzGetDeviceStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GzGetDeviceStruct(struct soap *soap, struct __ns1__GzGetDeviceStruct *p)
{
	if (::soap_read___ns1__GzGetDeviceStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GzGetTypeList_DEFINED
#define SOAP_TYPE___ns1__GzGetTypeList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GzGetTypeList(struct soap*, struct __ns1__GzGetTypeList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GzGetTypeList(struct soap*, const struct __ns1__GzGetTypeList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GzGetTypeList(struct soap*, const char*, int, const struct __ns1__GzGetTypeList *, const char*);
SOAP_FMAC3 struct __ns1__GzGetTypeList * SOAP_FMAC4 soap_in___ns1__GzGetTypeList(struct soap*, const char*, struct __ns1__GzGetTypeList *, const char*);
SOAP_FMAC1 struct __ns1__GzGetTypeList * SOAP_FMAC2 soap_instantiate___ns1__GzGetTypeList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GzGetTypeList * soap_new___ns1__GzGetTypeList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GzGetTypeList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GzGetTypeList * soap_new_req___ns1__GzGetTypeList(
	struct soap *soap)
{
	struct __ns1__GzGetTypeList *_p = ::soap_new___ns1__GzGetTypeList(soap);
	if (_p)
	{	::soap_default___ns1__GzGetTypeList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GzGetTypeList * soap_new_set___ns1__GzGetTypeList(
	struct soap *soap,
	_ns1__GzGetTypeList *ns1__GzGetTypeList)
{
	struct __ns1__GzGetTypeList *_p = ::soap_new___ns1__GzGetTypeList(soap);
	if (_p)
	{	::soap_default___ns1__GzGetTypeList(soap, _p);
		_p->ns1__GzGetTypeList = ns1__GzGetTypeList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GzGetTypeList(struct soap*, const struct __ns1__GzGetTypeList *, const char*, const char*);

inline int soap_write___ns1__GzGetTypeList(struct soap *soap, struct __ns1__GzGetTypeList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GzGetTypeList(soap, p), 0) || ::soap_put___ns1__GzGetTypeList(soap, p, "-ns1:GzGetTypeList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GzGetTypeList(struct soap *soap, const char *URL, struct __ns1__GzGetTypeList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetTypeList(soap, p), 0) || ::soap_put___ns1__GzGetTypeList(soap, p, "-ns1:GzGetTypeList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GzGetTypeList(struct soap *soap, const char *URL, struct __ns1__GzGetTypeList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GzGetTypeList(soap, p), 0) || ::soap_put___ns1__GzGetTypeList(soap, p, "-ns1:GzGetTypeList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GzGetTypeList * SOAP_FMAC4 soap_get___ns1__GzGetTypeList(struct soap*, struct __ns1__GzGetTypeList *, const char*, const char*);

inline int soap_read___ns1__GzGetTypeList(struct soap *soap, struct __ns1__GzGetTypeList *p)
{
	if (p)
	{	::soap_default___ns1__GzGetTypeList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GzGetTypeList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GzGetTypeList(struct soap *soap, const char *URL, struct __ns1__GzGetTypeList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GzGetTypeList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GzGetTypeList(struct soap *soap, struct __ns1__GzGetTypeList *p)
{
	if (::soap_read___ns1__GzGetTypeList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SGCDrawEmf_DEFINED
#define SOAP_TYPE___ns1__SGCDrawEmf_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SGCDrawEmf(struct soap*, struct __ns1__SGCDrawEmf *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SGCDrawEmf(struct soap*, const struct __ns1__SGCDrawEmf *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SGCDrawEmf(struct soap*, const char*, int, const struct __ns1__SGCDrawEmf *, const char*);
SOAP_FMAC3 struct __ns1__SGCDrawEmf * SOAP_FMAC4 soap_in___ns1__SGCDrawEmf(struct soap*, const char*, struct __ns1__SGCDrawEmf *, const char*);
SOAP_FMAC1 struct __ns1__SGCDrawEmf * SOAP_FMAC2 soap_instantiate___ns1__SGCDrawEmf(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SGCDrawEmf * soap_new___ns1__SGCDrawEmf(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SGCDrawEmf(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SGCDrawEmf * soap_new_req___ns1__SGCDrawEmf(
	struct soap *soap)
{
	struct __ns1__SGCDrawEmf *_p = ::soap_new___ns1__SGCDrawEmf(soap);
	if (_p)
	{	::soap_default___ns1__SGCDrawEmf(soap, _p);
	}
	return _p;
}

inline struct __ns1__SGCDrawEmf * soap_new_set___ns1__SGCDrawEmf(
	struct soap *soap,
	_ns1__SGCDrawEmf *ns1__SGCDrawEmf)
{
	struct __ns1__SGCDrawEmf *_p = ::soap_new___ns1__SGCDrawEmf(soap);
	if (_p)
	{	::soap_default___ns1__SGCDrawEmf(soap, _p);
		_p->ns1__SGCDrawEmf = ns1__SGCDrawEmf;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SGCDrawEmf(struct soap*, const struct __ns1__SGCDrawEmf *, const char*, const char*);

inline int soap_write___ns1__SGCDrawEmf(struct soap *soap, struct __ns1__SGCDrawEmf const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SGCDrawEmf(soap, p), 0) || ::soap_put___ns1__SGCDrawEmf(soap, p, "-ns1:SGCDrawEmf", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SGCDrawEmf(struct soap *soap, const char *URL, struct __ns1__SGCDrawEmf const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SGCDrawEmf(soap, p), 0) || ::soap_put___ns1__SGCDrawEmf(soap, p, "-ns1:SGCDrawEmf", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SGCDrawEmf(struct soap *soap, const char *URL, struct __ns1__SGCDrawEmf const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SGCDrawEmf(soap, p), 0) || ::soap_put___ns1__SGCDrawEmf(soap, p, "-ns1:SGCDrawEmf", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SGCDrawEmf * SOAP_FMAC4 soap_get___ns1__SGCDrawEmf(struct soap*, struct __ns1__SGCDrawEmf *, const char*, const char*);

inline int soap_read___ns1__SGCDrawEmf(struct soap *soap, struct __ns1__SGCDrawEmf *p)
{
	if (p)
	{	::soap_default___ns1__SGCDrawEmf(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SGCDrawEmf(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SGCDrawEmf(struct soap *soap, const char *URL, struct __ns1__SGCDrawEmf *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SGCDrawEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SGCDrawEmf(struct soap *soap, struct __ns1__SGCDrawEmf *p)
{
	if (::soap_read___ns1__SGCDrawEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__FlowChartEmf_DEFINED
#define SOAP_TYPE___ns1__FlowChartEmf_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__FlowChartEmf(struct soap*, struct __ns1__FlowChartEmf *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__FlowChartEmf(struct soap*, const struct __ns1__FlowChartEmf *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__FlowChartEmf(struct soap*, const char*, int, const struct __ns1__FlowChartEmf *, const char*);
SOAP_FMAC3 struct __ns1__FlowChartEmf * SOAP_FMAC4 soap_in___ns1__FlowChartEmf(struct soap*, const char*, struct __ns1__FlowChartEmf *, const char*);
SOAP_FMAC1 struct __ns1__FlowChartEmf * SOAP_FMAC2 soap_instantiate___ns1__FlowChartEmf(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__FlowChartEmf * soap_new___ns1__FlowChartEmf(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__FlowChartEmf(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__FlowChartEmf * soap_new_req___ns1__FlowChartEmf(
	struct soap *soap)
{
	struct __ns1__FlowChartEmf *_p = ::soap_new___ns1__FlowChartEmf(soap);
	if (_p)
	{	::soap_default___ns1__FlowChartEmf(soap, _p);
	}
	return _p;
}

inline struct __ns1__FlowChartEmf * soap_new_set___ns1__FlowChartEmf(
	struct soap *soap,
	_ns1__FlowChartEmf *ns1__FlowChartEmf)
{
	struct __ns1__FlowChartEmf *_p = ::soap_new___ns1__FlowChartEmf(soap);
	if (_p)
	{	::soap_default___ns1__FlowChartEmf(soap, _p);
		_p->ns1__FlowChartEmf = ns1__FlowChartEmf;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__FlowChartEmf(struct soap*, const struct __ns1__FlowChartEmf *, const char*, const char*);

inline int soap_write___ns1__FlowChartEmf(struct soap *soap, struct __ns1__FlowChartEmf const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__FlowChartEmf(soap, p), 0) || ::soap_put___ns1__FlowChartEmf(soap, p, "-ns1:FlowChartEmf", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__FlowChartEmf(struct soap *soap, const char *URL, struct __ns1__FlowChartEmf const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__FlowChartEmf(soap, p), 0) || ::soap_put___ns1__FlowChartEmf(soap, p, "-ns1:FlowChartEmf", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__FlowChartEmf(struct soap *soap, const char *URL, struct __ns1__FlowChartEmf const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__FlowChartEmf(soap, p), 0) || ::soap_put___ns1__FlowChartEmf(soap, p, "-ns1:FlowChartEmf", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__FlowChartEmf * SOAP_FMAC4 soap_get___ns1__FlowChartEmf(struct soap*, struct __ns1__FlowChartEmf *, const char*, const char*);

inline int soap_read___ns1__FlowChartEmf(struct soap *soap, struct __ns1__FlowChartEmf *p)
{
	if (p)
	{	::soap_default___ns1__FlowChartEmf(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__FlowChartEmf(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__FlowChartEmf(struct soap *soap, const char *URL, struct __ns1__FlowChartEmf *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__FlowChartEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__FlowChartEmf(struct soap *soap, struct __ns1__FlowChartEmf *p)
{
	if (::soap_read___ns1__FlowChartEmf(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetZhouQi_DEFINED
#define SOAP_TYPE___ns1__GetZhouQi_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetZhouQi(struct soap*, struct __ns1__GetZhouQi *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetZhouQi(struct soap*, const struct __ns1__GetZhouQi *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetZhouQi(struct soap*, const char*, int, const struct __ns1__GetZhouQi *, const char*);
SOAP_FMAC3 struct __ns1__GetZhouQi * SOAP_FMAC4 soap_in___ns1__GetZhouQi(struct soap*, const char*, struct __ns1__GetZhouQi *, const char*);
SOAP_FMAC1 struct __ns1__GetZhouQi * SOAP_FMAC2 soap_instantiate___ns1__GetZhouQi(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetZhouQi * soap_new___ns1__GetZhouQi(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetZhouQi(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetZhouQi * soap_new_req___ns1__GetZhouQi(
	struct soap *soap)
{
	struct __ns1__GetZhouQi *_p = ::soap_new___ns1__GetZhouQi(soap);
	if (_p)
	{	::soap_default___ns1__GetZhouQi(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetZhouQi * soap_new_set___ns1__GetZhouQi(
	struct soap *soap,
	_ns1__GetZhouQi *ns1__GetZhouQi)
{
	struct __ns1__GetZhouQi *_p = ::soap_new___ns1__GetZhouQi(soap);
	if (_p)
	{	::soap_default___ns1__GetZhouQi(soap, _p);
		_p->ns1__GetZhouQi = ns1__GetZhouQi;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetZhouQi(struct soap*, const struct __ns1__GetZhouQi *, const char*, const char*);

inline int soap_write___ns1__GetZhouQi(struct soap *soap, struct __ns1__GetZhouQi const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetZhouQi(soap, p), 0) || ::soap_put___ns1__GetZhouQi(soap, p, "-ns1:GetZhouQi", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetZhouQi(struct soap *soap, const char *URL, struct __ns1__GetZhouQi const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetZhouQi(soap, p), 0) || ::soap_put___ns1__GetZhouQi(soap, p, "-ns1:GetZhouQi", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetZhouQi(struct soap *soap, const char *URL, struct __ns1__GetZhouQi const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetZhouQi(soap, p), 0) || ::soap_put___ns1__GetZhouQi(soap, p, "-ns1:GetZhouQi", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetZhouQi * SOAP_FMAC4 soap_get___ns1__GetZhouQi(struct soap*, struct __ns1__GetZhouQi *, const char*, const char*);

inline int soap_read___ns1__GetZhouQi(struct soap *soap, struct __ns1__GetZhouQi *p)
{
	if (p)
	{	::soap_default___ns1__GetZhouQi(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetZhouQi(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetZhouQi(struct soap *soap, const char *URL, struct __ns1__GetZhouQi *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetZhouQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetZhouQi(struct soap *soap, struct __ns1__GetZhouQi *p)
{
	if (::soap_read___ns1__GetZhouQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__JiChaoQi_DEFINED
#define SOAP_TYPE___ns1__JiChaoQi_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__JiChaoQi(struct soap*, struct __ns1__JiChaoQi *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__JiChaoQi(struct soap*, const struct __ns1__JiChaoQi *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__JiChaoQi(struct soap*, const char*, int, const struct __ns1__JiChaoQi *, const char*);
SOAP_FMAC3 struct __ns1__JiChaoQi * SOAP_FMAC4 soap_in___ns1__JiChaoQi(struct soap*, const char*, struct __ns1__JiChaoQi *, const char*);
SOAP_FMAC1 struct __ns1__JiChaoQi * SOAP_FMAC2 soap_instantiate___ns1__JiChaoQi(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__JiChaoQi * soap_new___ns1__JiChaoQi(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__JiChaoQi(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__JiChaoQi * soap_new_req___ns1__JiChaoQi(
	struct soap *soap)
{
	struct __ns1__JiChaoQi *_p = ::soap_new___ns1__JiChaoQi(soap);
	if (_p)
	{	::soap_default___ns1__JiChaoQi(soap, _p);
	}
	return _p;
}

inline struct __ns1__JiChaoQi * soap_new_set___ns1__JiChaoQi(
	struct soap *soap,
	_ns1__JiChaoQi *ns1__JiChaoQi)
{
	struct __ns1__JiChaoQi *_p = ::soap_new___ns1__JiChaoQi(soap);
	if (_p)
	{	::soap_default___ns1__JiChaoQi(soap, _p);
		_p->ns1__JiChaoQi = ns1__JiChaoQi;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__JiChaoQi(struct soap*, const struct __ns1__JiChaoQi *, const char*, const char*);

inline int soap_write___ns1__JiChaoQi(struct soap *soap, struct __ns1__JiChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__JiChaoQi(soap, p), 0) || ::soap_put___ns1__JiChaoQi(soap, p, "-ns1:JiChaoQi", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__JiChaoQi(struct soap *soap, const char *URL, struct __ns1__JiChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__JiChaoQi(soap, p), 0) || ::soap_put___ns1__JiChaoQi(soap, p, "-ns1:JiChaoQi", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__JiChaoQi(struct soap *soap, const char *URL, struct __ns1__JiChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__JiChaoQi(soap, p), 0) || ::soap_put___ns1__JiChaoQi(soap, p, "-ns1:JiChaoQi", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__JiChaoQi * SOAP_FMAC4 soap_get___ns1__JiChaoQi(struct soap*, struct __ns1__JiChaoQi *, const char*, const char*);

inline int soap_read___ns1__JiChaoQi(struct soap *soap, struct __ns1__JiChaoQi *p)
{
	if (p)
	{	::soap_default___ns1__JiChaoQi(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__JiChaoQi(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__JiChaoQi(struct soap *soap, const char *URL, struct __ns1__JiChaoQi *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__JiChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__JiChaoQi(struct soap *soap, struct __ns1__JiChaoQi *p)
{
	if (::soap_read___ns1__JiChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ChaoQi_DEFINED
#define SOAP_TYPE___ns1__ChaoQi_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ChaoQi(struct soap*, struct __ns1__ChaoQi *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ChaoQi(struct soap*, const struct __ns1__ChaoQi *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ChaoQi(struct soap*, const char*, int, const struct __ns1__ChaoQi *, const char*);
SOAP_FMAC3 struct __ns1__ChaoQi * SOAP_FMAC4 soap_in___ns1__ChaoQi(struct soap*, const char*, struct __ns1__ChaoQi *, const char*);
SOAP_FMAC1 struct __ns1__ChaoQi * SOAP_FMAC2 soap_instantiate___ns1__ChaoQi(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ChaoQi * soap_new___ns1__ChaoQi(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ChaoQi(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ChaoQi * soap_new_req___ns1__ChaoQi(
	struct soap *soap)
{
	struct __ns1__ChaoQi *_p = ::soap_new___ns1__ChaoQi(soap);
	if (_p)
	{	::soap_default___ns1__ChaoQi(soap, _p);
	}
	return _p;
}

inline struct __ns1__ChaoQi * soap_new_set___ns1__ChaoQi(
	struct soap *soap,
	_ns1__ChaoQi *ns1__ChaoQi)
{
	struct __ns1__ChaoQi *_p = ::soap_new___ns1__ChaoQi(soap);
	if (_p)
	{	::soap_default___ns1__ChaoQi(soap, _p);
		_p->ns1__ChaoQi = ns1__ChaoQi;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ChaoQi(struct soap*, const struct __ns1__ChaoQi *, const char*, const char*);

inline int soap_write___ns1__ChaoQi(struct soap *soap, struct __ns1__ChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ChaoQi(soap, p), 0) || ::soap_put___ns1__ChaoQi(soap, p, "-ns1:ChaoQi", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ChaoQi(struct soap *soap, const char *URL, struct __ns1__ChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChaoQi(soap, p), 0) || ::soap_put___ns1__ChaoQi(soap, p, "-ns1:ChaoQi", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ChaoQi(struct soap *soap, const char *URL, struct __ns1__ChaoQi const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ChaoQi(soap, p), 0) || ::soap_put___ns1__ChaoQi(soap, p, "-ns1:ChaoQi", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ChaoQi * SOAP_FMAC4 soap_get___ns1__ChaoQi(struct soap*, struct __ns1__ChaoQi *, const char*, const char*);

inline int soap_read___ns1__ChaoQi(struct soap *soap, struct __ns1__ChaoQi *p)
{
	if (p)
	{	::soap_default___ns1__ChaoQi(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ChaoQi(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ChaoQi(struct soap *soap, const char *URL, struct __ns1__ChaoQi *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ChaoQi(struct soap *soap, struct __ns1__ChaoQi *p)
{
	if (::soap_read___ns1__ChaoQi(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__OpenMapExe_DEFINED
#define SOAP_TYPE___ns1__OpenMapExe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__OpenMapExe(struct soap*, struct __ns1__OpenMapExe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__OpenMapExe(struct soap*, const struct __ns1__OpenMapExe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__OpenMapExe(struct soap*, const char*, int, const struct __ns1__OpenMapExe *, const char*);
SOAP_FMAC3 struct __ns1__OpenMapExe * SOAP_FMAC4 soap_in___ns1__OpenMapExe(struct soap*, const char*, struct __ns1__OpenMapExe *, const char*);
SOAP_FMAC1 struct __ns1__OpenMapExe * SOAP_FMAC2 soap_instantiate___ns1__OpenMapExe(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__OpenMapExe * soap_new___ns1__OpenMapExe(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__OpenMapExe(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__OpenMapExe * soap_new_req___ns1__OpenMapExe(
	struct soap *soap)
{
	struct __ns1__OpenMapExe *_p = ::soap_new___ns1__OpenMapExe(soap);
	if (_p)
	{	::soap_default___ns1__OpenMapExe(soap, _p);
	}
	return _p;
}

inline struct __ns1__OpenMapExe * soap_new_set___ns1__OpenMapExe(
	struct soap *soap,
	_ns1__OpenMapExe *ns1__OpenMapExe)
{
	struct __ns1__OpenMapExe *_p = ::soap_new___ns1__OpenMapExe(soap);
	if (_p)
	{	::soap_default___ns1__OpenMapExe(soap, _p);
		_p->ns1__OpenMapExe = ns1__OpenMapExe;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__OpenMapExe(struct soap*, const struct __ns1__OpenMapExe *, const char*, const char*);

inline int soap_write___ns1__OpenMapExe(struct soap *soap, struct __ns1__OpenMapExe const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__OpenMapExe(soap, p), 0) || ::soap_put___ns1__OpenMapExe(soap, p, "-ns1:OpenMapExe", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__OpenMapExe(struct soap *soap, const char *URL, struct __ns1__OpenMapExe const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenMapExe(soap, p), 0) || ::soap_put___ns1__OpenMapExe(soap, p, "-ns1:OpenMapExe", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__OpenMapExe(struct soap *soap, const char *URL, struct __ns1__OpenMapExe const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenMapExe(soap, p), 0) || ::soap_put___ns1__OpenMapExe(soap, p, "-ns1:OpenMapExe", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__OpenMapExe * SOAP_FMAC4 soap_get___ns1__OpenMapExe(struct soap*, struct __ns1__OpenMapExe *, const char*, const char*);

inline int soap_read___ns1__OpenMapExe(struct soap *soap, struct __ns1__OpenMapExe *p)
{
	if (p)
	{	::soap_default___ns1__OpenMapExe(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__OpenMapExe(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__OpenMapExe(struct soap *soap, const char *URL, struct __ns1__OpenMapExe *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__OpenMapExe(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__OpenMapExe(struct soap *soap, struct __ns1__OpenMapExe *p)
{
	if (::soap_read___ns1__OpenMapExe(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetEmfPngFile_DEFINED
#define SOAP_TYPE___ns1__GetEmfPngFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetEmfPngFile(struct soap*, struct __ns1__GetEmfPngFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetEmfPngFile(struct soap*, const struct __ns1__GetEmfPngFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetEmfPngFile(struct soap*, const char*, int, const struct __ns1__GetEmfPngFile *, const char*);
SOAP_FMAC3 struct __ns1__GetEmfPngFile * SOAP_FMAC4 soap_in___ns1__GetEmfPngFile(struct soap*, const char*, struct __ns1__GetEmfPngFile *, const char*);
SOAP_FMAC1 struct __ns1__GetEmfPngFile * SOAP_FMAC2 soap_instantiate___ns1__GetEmfPngFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetEmfPngFile * soap_new___ns1__GetEmfPngFile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetEmfPngFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetEmfPngFile * soap_new_req___ns1__GetEmfPngFile(
	struct soap *soap)
{
	struct __ns1__GetEmfPngFile *_p = ::soap_new___ns1__GetEmfPngFile(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngFile(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetEmfPngFile * soap_new_set___ns1__GetEmfPngFile(
	struct soap *soap,
	_ns1__GetEmfPngFile *ns1__GetEmfPngFile)
{
	struct __ns1__GetEmfPngFile *_p = ::soap_new___ns1__GetEmfPngFile(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngFile(soap, _p);
		_p->ns1__GetEmfPngFile = ns1__GetEmfPngFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetEmfPngFile(struct soap*, const struct __ns1__GetEmfPngFile *, const char*, const char*);

inline int soap_write___ns1__GetEmfPngFile(struct soap *soap, struct __ns1__GetEmfPngFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetEmfPngFile(soap, p), 0) || ::soap_put___ns1__GetEmfPngFile(soap, p, "-ns1:GetEmfPngFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetEmfPngFile(struct soap *soap, const char *URL, struct __ns1__GetEmfPngFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngFile(soap, p), 0) || ::soap_put___ns1__GetEmfPngFile(soap, p, "-ns1:GetEmfPngFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetEmfPngFile(struct soap *soap, const char *URL, struct __ns1__GetEmfPngFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngFile(soap, p), 0) || ::soap_put___ns1__GetEmfPngFile(soap, p, "-ns1:GetEmfPngFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetEmfPngFile * SOAP_FMAC4 soap_get___ns1__GetEmfPngFile(struct soap*, struct __ns1__GetEmfPngFile *, const char*, const char*);

inline int soap_read___ns1__GetEmfPngFile(struct soap *soap, struct __ns1__GetEmfPngFile *p)
{
	if (p)
	{	::soap_default___ns1__GetEmfPngFile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetEmfPngFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetEmfPngFile(struct soap *soap, const char *URL, struct __ns1__GetEmfPngFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetEmfPngFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetEmfPngFile(struct soap *soap, struct __ns1__GetEmfPngFile *p)
{
	if (::soap_read___ns1__GetEmfPngFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetEmfPngVer_DEFINED
#define SOAP_TYPE___ns1__GetEmfPngVer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetEmfPngVer(struct soap*, struct __ns1__GetEmfPngVer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetEmfPngVer(struct soap*, const struct __ns1__GetEmfPngVer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetEmfPngVer(struct soap*, const char*, int, const struct __ns1__GetEmfPngVer *, const char*);
SOAP_FMAC3 struct __ns1__GetEmfPngVer * SOAP_FMAC4 soap_in___ns1__GetEmfPngVer(struct soap*, const char*, struct __ns1__GetEmfPngVer *, const char*);
SOAP_FMAC1 struct __ns1__GetEmfPngVer * SOAP_FMAC2 soap_instantiate___ns1__GetEmfPngVer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetEmfPngVer * soap_new___ns1__GetEmfPngVer(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetEmfPngVer(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetEmfPngVer * soap_new_req___ns1__GetEmfPngVer(
	struct soap *soap)
{
	struct __ns1__GetEmfPngVer *_p = ::soap_new___ns1__GetEmfPngVer(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngVer(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetEmfPngVer * soap_new_set___ns1__GetEmfPngVer(
	struct soap *soap,
	_ns1__GetEmfPngVer *ns1__GetEmfPngVer)
{
	struct __ns1__GetEmfPngVer *_p = ::soap_new___ns1__GetEmfPngVer(soap);
	if (_p)
	{	::soap_default___ns1__GetEmfPngVer(soap, _p);
		_p->ns1__GetEmfPngVer = ns1__GetEmfPngVer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetEmfPngVer(struct soap*, const struct __ns1__GetEmfPngVer *, const char*, const char*);

inline int soap_write___ns1__GetEmfPngVer(struct soap *soap, struct __ns1__GetEmfPngVer const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetEmfPngVer(soap, p), 0) || ::soap_put___ns1__GetEmfPngVer(soap, p, "-ns1:GetEmfPngVer", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetEmfPngVer(struct soap *soap, const char *URL, struct __ns1__GetEmfPngVer const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngVer(soap, p), 0) || ::soap_put___ns1__GetEmfPngVer(soap, p, "-ns1:GetEmfPngVer", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetEmfPngVer(struct soap *soap, const char *URL, struct __ns1__GetEmfPngVer const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetEmfPngVer(soap, p), 0) || ::soap_put___ns1__GetEmfPngVer(soap, p, "-ns1:GetEmfPngVer", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetEmfPngVer * SOAP_FMAC4 soap_get___ns1__GetEmfPngVer(struct soap*, struct __ns1__GetEmfPngVer *, const char*, const char*);

inline int soap_read___ns1__GetEmfPngVer(struct soap *soap, struct __ns1__GetEmfPngVer *p)
{
	if (p)
	{	::soap_default___ns1__GetEmfPngVer(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetEmfPngVer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetEmfPngVer(struct soap *soap, const char *URL, struct __ns1__GetEmfPngVer *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetEmfPngVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetEmfPngVer(struct soap *soap, struct __ns1__GetEmfPngVer *p)
{
	if (::soap_read___ns1__GetEmfPngVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__OpenProcess_DEFINED
#define SOAP_TYPE___ns1__OpenProcess_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__OpenProcess(struct soap*, struct __ns1__OpenProcess *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__OpenProcess(struct soap*, const struct __ns1__OpenProcess *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__OpenProcess(struct soap*, const char*, int, const struct __ns1__OpenProcess *, const char*);
SOAP_FMAC3 struct __ns1__OpenProcess * SOAP_FMAC4 soap_in___ns1__OpenProcess(struct soap*, const char*, struct __ns1__OpenProcess *, const char*);
SOAP_FMAC1 struct __ns1__OpenProcess * SOAP_FMAC2 soap_instantiate___ns1__OpenProcess(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__OpenProcess * soap_new___ns1__OpenProcess(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__OpenProcess(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__OpenProcess * soap_new_req___ns1__OpenProcess(
	struct soap *soap)
{
	struct __ns1__OpenProcess *_p = ::soap_new___ns1__OpenProcess(soap);
	if (_p)
	{	::soap_default___ns1__OpenProcess(soap, _p);
	}
	return _p;
}

inline struct __ns1__OpenProcess * soap_new_set___ns1__OpenProcess(
	struct soap *soap,
	_ns1__OpenProcess *ns1__OpenProcess)
{
	struct __ns1__OpenProcess *_p = ::soap_new___ns1__OpenProcess(soap);
	if (_p)
	{	::soap_default___ns1__OpenProcess(soap, _p);
		_p->ns1__OpenProcess = ns1__OpenProcess;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__OpenProcess(struct soap*, const struct __ns1__OpenProcess *, const char*, const char*);

inline int soap_write___ns1__OpenProcess(struct soap *soap, struct __ns1__OpenProcess const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__OpenProcess(soap, p), 0) || ::soap_put___ns1__OpenProcess(soap, p, "-ns1:OpenProcess", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__OpenProcess(struct soap *soap, const char *URL, struct __ns1__OpenProcess const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenProcess(soap, p), 0) || ::soap_put___ns1__OpenProcess(soap, p, "-ns1:OpenProcess", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__OpenProcess(struct soap *soap, const char *URL, struct __ns1__OpenProcess const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__OpenProcess(soap, p), 0) || ::soap_put___ns1__OpenProcess(soap, p, "-ns1:OpenProcess", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__OpenProcess * SOAP_FMAC4 soap_get___ns1__OpenProcess(struct soap*, struct __ns1__OpenProcess *, const char*, const char*);

inline int soap_read___ns1__OpenProcess(struct soap *soap, struct __ns1__OpenProcess *p)
{
	if (p)
	{	::soap_default___ns1__OpenProcess(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__OpenProcess(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__OpenProcess(struct soap *soap, const char *URL, struct __ns1__OpenProcess *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__OpenProcess(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__OpenProcess(struct soap *soap, struct __ns1__OpenProcess *p)
{
	if (::soap_read___ns1__OpenProcess(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMangeMapUpdate_DEFINED
#define SOAP_TYPE___ns1__GetMangeMapUpdate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMangeMapUpdate(struct soap*, struct __ns1__GetMangeMapUpdate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMangeMapUpdate(struct soap*, const struct __ns1__GetMangeMapUpdate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMangeMapUpdate(struct soap*, const char*, int, const struct __ns1__GetMangeMapUpdate *, const char*);
SOAP_FMAC3 struct __ns1__GetMangeMapUpdate * SOAP_FMAC4 soap_in___ns1__GetMangeMapUpdate(struct soap*, const char*, struct __ns1__GetMangeMapUpdate *, const char*);
SOAP_FMAC1 struct __ns1__GetMangeMapUpdate * SOAP_FMAC2 soap_instantiate___ns1__GetMangeMapUpdate(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMangeMapUpdate * soap_new___ns1__GetMangeMapUpdate(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMangeMapUpdate(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMangeMapUpdate * soap_new_req___ns1__GetMangeMapUpdate(
	struct soap *soap)
{
	struct __ns1__GetMangeMapUpdate *_p = ::soap_new___ns1__GetMangeMapUpdate(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeMapUpdate(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMangeMapUpdate * soap_new_set___ns1__GetMangeMapUpdate(
	struct soap *soap,
	_ns1__GetMangeMapUpdate *ns1__GetMangeMapUpdate)
{
	struct __ns1__GetMangeMapUpdate *_p = ::soap_new___ns1__GetMangeMapUpdate(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeMapUpdate(soap, _p);
		_p->ns1__GetMangeMapUpdate = ns1__GetMangeMapUpdate;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMangeMapUpdate(struct soap*, const struct __ns1__GetMangeMapUpdate *, const char*, const char*);

inline int soap_write___ns1__GetMangeMapUpdate(struct soap *soap, struct __ns1__GetMangeMapUpdate const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMangeMapUpdate(soap, p), 0) || ::soap_put___ns1__GetMangeMapUpdate(soap, p, "-ns1:GetMangeMapUpdate", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMangeMapUpdate(struct soap *soap, const char *URL, struct __ns1__GetMangeMapUpdate const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeMapUpdate(soap, p), 0) || ::soap_put___ns1__GetMangeMapUpdate(soap, p, "-ns1:GetMangeMapUpdate", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMangeMapUpdate(struct soap *soap, const char *URL, struct __ns1__GetMangeMapUpdate const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeMapUpdate(soap, p), 0) || ::soap_put___ns1__GetMangeMapUpdate(soap, p, "-ns1:GetMangeMapUpdate", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMangeMapUpdate * SOAP_FMAC4 soap_get___ns1__GetMangeMapUpdate(struct soap*, struct __ns1__GetMangeMapUpdate *, const char*, const char*);

inline int soap_read___ns1__GetMangeMapUpdate(struct soap *soap, struct __ns1__GetMangeMapUpdate *p)
{
	if (p)
	{	::soap_default___ns1__GetMangeMapUpdate(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMangeMapUpdate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMangeMapUpdate(struct soap *soap, const char *URL, struct __ns1__GetMangeMapUpdate *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMangeMapUpdate(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMangeMapUpdate(struct soap *soap, struct __ns1__GetMangeMapUpdate *p)
{
	if (::soap_read___ns1__GetMangeMapUpdate(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitMapVer_DEFINED
#define SOAP_TYPE___ns1__GetUnitMapVer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitMapVer(struct soap*, struct __ns1__GetUnitMapVer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitMapVer(struct soap*, const struct __ns1__GetUnitMapVer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitMapVer(struct soap*, const char*, int, const struct __ns1__GetUnitMapVer *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitMapVer * SOAP_FMAC4 soap_in___ns1__GetUnitMapVer(struct soap*, const char*, struct __ns1__GetUnitMapVer *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitMapVer * SOAP_FMAC2 soap_instantiate___ns1__GetUnitMapVer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitMapVer * soap_new___ns1__GetUnitMapVer(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitMapVer(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitMapVer * soap_new_req___ns1__GetUnitMapVer(
	struct soap *soap)
{
	struct __ns1__GetUnitMapVer *_p = ::soap_new___ns1__GetUnitMapVer(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitMapVer(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitMapVer * soap_new_set___ns1__GetUnitMapVer(
	struct soap *soap,
	_ns1__GetUnitMapVer *ns1__GetUnitMapVer)
{
	struct __ns1__GetUnitMapVer *_p = ::soap_new___ns1__GetUnitMapVer(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitMapVer(soap, _p);
		_p->ns1__GetUnitMapVer = ns1__GetUnitMapVer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitMapVer(struct soap*, const struct __ns1__GetUnitMapVer *, const char*, const char*);

inline int soap_write___ns1__GetUnitMapVer(struct soap *soap, struct __ns1__GetUnitMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitMapVer(soap, p), 0) || ::soap_put___ns1__GetUnitMapVer(soap, p, "-ns1:GetUnitMapVer", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitMapVer(struct soap *soap, const char *URL, struct __ns1__GetUnitMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitMapVer(soap, p), 0) || ::soap_put___ns1__GetUnitMapVer(soap, p, "-ns1:GetUnitMapVer", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitMapVer(struct soap *soap, const char *URL, struct __ns1__GetUnitMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitMapVer(soap, p), 0) || ::soap_put___ns1__GetUnitMapVer(soap, p, "-ns1:GetUnitMapVer", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitMapVer * SOAP_FMAC4 soap_get___ns1__GetUnitMapVer(struct soap*, struct __ns1__GetUnitMapVer *, const char*, const char*);

inline int soap_read___ns1__GetUnitMapVer(struct soap *soap, struct __ns1__GetUnitMapVer *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitMapVer(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitMapVer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitMapVer(struct soap *soap, const char *URL, struct __ns1__GetUnitMapVer *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitMapVer(struct soap *soap, struct __ns1__GetUnitMapVer *p)
{
	if (::soap_read___ns1__GetUnitMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__UpdateGzclMap_DEFINED
#define SOAP_TYPE___ns1__UpdateGzclMap_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpdateGzclMap(struct soap*, struct __ns1__UpdateGzclMap *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpdateGzclMap(struct soap*, const struct __ns1__UpdateGzclMap *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpdateGzclMap(struct soap*, const char*, int, const struct __ns1__UpdateGzclMap *, const char*);
SOAP_FMAC3 struct __ns1__UpdateGzclMap * SOAP_FMAC4 soap_in___ns1__UpdateGzclMap(struct soap*, const char*, struct __ns1__UpdateGzclMap *, const char*);
SOAP_FMAC1 struct __ns1__UpdateGzclMap * SOAP_FMAC2 soap_instantiate___ns1__UpdateGzclMap(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpdateGzclMap * soap_new___ns1__UpdateGzclMap(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__UpdateGzclMap(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__UpdateGzclMap * soap_new_req___ns1__UpdateGzclMap(
	struct soap *soap)
{
	struct __ns1__UpdateGzclMap *_p = ::soap_new___ns1__UpdateGzclMap(soap);
	if (_p)
	{	::soap_default___ns1__UpdateGzclMap(soap, _p);
	}
	return _p;
}

inline struct __ns1__UpdateGzclMap * soap_new_set___ns1__UpdateGzclMap(
	struct soap *soap,
	_ns1__UpdateGzclMap *ns1__UpdateGzclMap)
{
	struct __ns1__UpdateGzclMap *_p = ::soap_new___ns1__UpdateGzclMap(soap);
	if (_p)
	{	::soap_default___ns1__UpdateGzclMap(soap, _p);
		_p->ns1__UpdateGzclMap = ns1__UpdateGzclMap;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpdateGzclMap(struct soap*, const struct __ns1__UpdateGzclMap *, const char*, const char*);

inline int soap_write___ns1__UpdateGzclMap(struct soap *soap, struct __ns1__UpdateGzclMap const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__UpdateGzclMap(soap, p), 0) || ::soap_put___ns1__UpdateGzclMap(soap, p, "-ns1:UpdateGzclMap", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__UpdateGzclMap(struct soap *soap, const char *URL, struct __ns1__UpdateGzclMap const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpdateGzclMap(soap, p), 0) || ::soap_put___ns1__UpdateGzclMap(soap, p, "-ns1:UpdateGzclMap", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__UpdateGzclMap(struct soap *soap, const char *URL, struct __ns1__UpdateGzclMap const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpdateGzclMap(soap, p), 0) || ::soap_put___ns1__UpdateGzclMap(soap, p, "-ns1:UpdateGzclMap", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__UpdateGzclMap * SOAP_FMAC4 soap_get___ns1__UpdateGzclMap(struct soap*, struct __ns1__UpdateGzclMap *, const char*, const char*);

inline int soap_read___ns1__UpdateGzclMap(struct soap *soap, struct __ns1__UpdateGzclMap *p)
{
	if (p)
	{	::soap_default___ns1__UpdateGzclMap(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__UpdateGzclMap(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__UpdateGzclMap(struct soap *soap, const char *URL, struct __ns1__UpdateGzclMap *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__UpdateGzclMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__UpdateGzclMap(struct soap *soap, struct __ns1__UpdateGzclMap *p)
{
	if (::soap_read___ns1__UpdateGzclMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapListTime_DEFINED
#define SOAP_TYPE___ns1__GetMapListTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapListTime(struct soap*, struct __ns1__GetMapListTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapListTime(struct soap*, const struct __ns1__GetMapListTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapListTime(struct soap*, const char*, int, const struct __ns1__GetMapListTime *, const char*);
SOAP_FMAC3 struct __ns1__GetMapListTime * SOAP_FMAC4 soap_in___ns1__GetMapListTime(struct soap*, const char*, struct __ns1__GetMapListTime *, const char*);
SOAP_FMAC1 struct __ns1__GetMapListTime * SOAP_FMAC2 soap_instantiate___ns1__GetMapListTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapListTime * soap_new___ns1__GetMapListTime(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapListTime(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapListTime * soap_new_req___ns1__GetMapListTime(
	struct soap *soap)
{
	struct __ns1__GetMapListTime *_p = ::soap_new___ns1__GetMapListTime(soap);
	if (_p)
	{	::soap_default___ns1__GetMapListTime(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapListTime * soap_new_set___ns1__GetMapListTime(
	struct soap *soap,
	_ns1__GetMapListTime *ns1__GetMapListTime)
{
	struct __ns1__GetMapListTime *_p = ::soap_new___ns1__GetMapListTime(soap);
	if (_p)
	{	::soap_default___ns1__GetMapListTime(soap, _p);
		_p->ns1__GetMapListTime = ns1__GetMapListTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapListTime(struct soap*, const struct __ns1__GetMapListTime *, const char*, const char*);

inline int soap_write___ns1__GetMapListTime(struct soap *soap, struct __ns1__GetMapListTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapListTime(soap, p), 0) || ::soap_put___ns1__GetMapListTime(soap, p, "-ns1:GetMapListTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapListTime(struct soap *soap, const char *URL, struct __ns1__GetMapListTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapListTime(soap, p), 0) || ::soap_put___ns1__GetMapListTime(soap, p, "-ns1:GetMapListTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapListTime(struct soap *soap, const char *URL, struct __ns1__GetMapListTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapListTime(soap, p), 0) || ::soap_put___ns1__GetMapListTime(soap, p, "-ns1:GetMapListTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapListTime * SOAP_FMAC4 soap_get___ns1__GetMapListTime(struct soap*, struct __ns1__GetMapListTime *, const char*, const char*);

inline int soap_read___ns1__GetMapListTime(struct soap *soap, struct __ns1__GetMapListTime *p)
{
	if (p)
	{	::soap_default___ns1__GetMapListTime(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapListTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapListTime(struct soap *soap, const char *URL, struct __ns1__GetMapListTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapListTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapListTime(struct soap *soap, struct __ns1__GetMapListTime *p)
{
	if (::soap_read___ns1__GetMapListTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ServerLevel_DEFINED
#define SOAP_TYPE___ns1__ServerLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ServerLevel(struct soap*, struct __ns1__ServerLevel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ServerLevel(struct soap*, const struct __ns1__ServerLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ServerLevel(struct soap*, const char*, int, const struct __ns1__ServerLevel *, const char*);
SOAP_FMAC3 struct __ns1__ServerLevel * SOAP_FMAC4 soap_in___ns1__ServerLevel(struct soap*, const char*, struct __ns1__ServerLevel *, const char*);
SOAP_FMAC1 struct __ns1__ServerLevel * SOAP_FMAC2 soap_instantiate___ns1__ServerLevel(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ServerLevel * soap_new___ns1__ServerLevel(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ServerLevel(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ServerLevel * soap_new_req___ns1__ServerLevel(
	struct soap *soap)
{
	struct __ns1__ServerLevel *_p = ::soap_new___ns1__ServerLevel(soap);
	if (_p)
	{	::soap_default___ns1__ServerLevel(soap, _p);
	}
	return _p;
}

inline struct __ns1__ServerLevel * soap_new_set___ns1__ServerLevel(
	struct soap *soap,
	_ns1__ServerLevel *ns1__ServerLevel)
{
	struct __ns1__ServerLevel *_p = ::soap_new___ns1__ServerLevel(soap);
	if (_p)
	{	::soap_default___ns1__ServerLevel(soap, _p);
		_p->ns1__ServerLevel = ns1__ServerLevel;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ServerLevel(struct soap*, const struct __ns1__ServerLevel *, const char*, const char*);

inline int soap_write___ns1__ServerLevel(struct soap *soap, struct __ns1__ServerLevel const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ServerLevel(soap, p), 0) || ::soap_put___ns1__ServerLevel(soap, p, "-ns1:ServerLevel", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ServerLevel(struct soap *soap, const char *URL, struct __ns1__ServerLevel const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ServerLevel(soap, p), 0) || ::soap_put___ns1__ServerLevel(soap, p, "-ns1:ServerLevel", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ServerLevel(struct soap *soap, const char *URL, struct __ns1__ServerLevel const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ServerLevel(soap, p), 0) || ::soap_put___ns1__ServerLevel(soap, p, "-ns1:ServerLevel", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ServerLevel * SOAP_FMAC4 soap_get___ns1__ServerLevel(struct soap*, struct __ns1__ServerLevel *, const char*, const char*);

inline int soap_read___ns1__ServerLevel(struct soap *soap, struct __ns1__ServerLevel *p)
{
	if (p)
	{	::soap_default___ns1__ServerLevel(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ServerLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ServerLevel(struct soap *soap, const char *URL, struct __ns1__ServerLevel *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ServerLevel(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ServerLevel(struct soap *soap, struct __ns1__ServerLevel *p)
{
	if (::soap_read___ns1__ServerLevel(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetTableData_DEFINED
#define SOAP_TYPE___ns1__GetTableData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetTableData(struct soap*, struct __ns1__GetTableData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetTableData(struct soap*, const struct __ns1__GetTableData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetTableData(struct soap*, const char*, int, const struct __ns1__GetTableData *, const char*);
SOAP_FMAC3 struct __ns1__GetTableData * SOAP_FMAC4 soap_in___ns1__GetTableData(struct soap*, const char*, struct __ns1__GetTableData *, const char*);
SOAP_FMAC1 struct __ns1__GetTableData * SOAP_FMAC2 soap_instantiate___ns1__GetTableData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetTableData * soap_new___ns1__GetTableData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetTableData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetTableData * soap_new_req___ns1__GetTableData(
	struct soap *soap)
{
	struct __ns1__GetTableData *_p = ::soap_new___ns1__GetTableData(soap);
	if (_p)
	{	::soap_default___ns1__GetTableData(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetTableData * soap_new_set___ns1__GetTableData(
	struct soap *soap,
	_ns1__GetTableData *ns1__GetTableData)
{
	struct __ns1__GetTableData *_p = ::soap_new___ns1__GetTableData(soap);
	if (_p)
	{	::soap_default___ns1__GetTableData(soap, _p);
		_p->ns1__GetTableData = ns1__GetTableData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetTableData(struct soap*, const struct __ns1__GetTableData *, const char*, const char*);

inline int soap_write___ns1__GetTableData(struct soap *soap, struct __ns1__GetTableData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetTableData(soap, p), 0) || ::soap_put___ns1__GetTableData(soap, p, "-ns1:GetTableData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetTableData(struct soap *soap, const char *URL, struct __ns1__GetTableData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTableData(soap, p), 0) || ::soap_put___ns1__GetTableData(soap, p, "-ns1:GetTableData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetTableData(struct soap *soap, const char *URL, struct __ns1__GetTableData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTableData(soap, p), 0) || ::soap_put___ns1__GetTableData(soap, p, "-ns1:GetTableData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetTableData * SOAP_FMAC4 soap_get___ns1__GetTableData(struct soap*, struct __ns1__GetTableData *, const char*, const char*);

inline int soap_read___ns1__GetTableData(struct soap *soap, struct __ns1__GetTableData *p)
{
	if (p)
	{	::soap_default___ns1__GetTableData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetTableData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetTableData(struct soap *soap, const char *URL, struct __ns1__GetTableData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetTableData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetTableData(struct soap *soap, struct __ns1__GetTableData *p)
{
	if (::soap_read___ns1__GetTableData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMap_DEFINED
#define SOAP_TYPE___ns1__GetMap_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMap(struct soap*, struct __ns1__GetMap *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMap(struct soap*, const struct __ns1__GetMap *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMap(struct soap*, const char*, int, const struct __ns1__GetMap *, const char*);
SOAP_FMAC3 struct __ns1__GetMap * SOAP_FMAC4 soap_in___ns1__GetMap(struct soap*, const char*, struct __ns1__GetMap *, const char*);
SOAP_FMAC1 struct __ns1__GetMap * SOAP_FMAC2 soap_instantiate___ns1__GetMap(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMap * soap_new___ns1__GetMap(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMap(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMap * soap_new_req___ns1__GetMap(
	struct soap *soap)
{
	struct __ns1__GetMap *_p = ::soap_new___ns1__GetMap(soap);
	if (_p)
	{	::soap_default___ns1__GetMap(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMap * soap_new_set___ns1__GetMap(
	struct soap *soap,
	_ns1__GetMap *ns1__GetMap)
{
	struct __ns1__GetMap *_p = ::soap_new___ns1__GetMap(soap);
	if (_p)
	{	::soap_default___ns1__GetMap(soap, _p);
		_p->ns1__GetMap = ns1__GetMap;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMap(struct soap*, const struct __ns1__GetMap *, const char*, const char*);

inline int soap_write___ns1__GetMap(struct soap *soap, struct __ns1__GetMap const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMap(soap, p), 0) || ::soap_put___ns1__GetMap(soap, p, "-ns1:GetMap", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMap(struct soap *soap, const char *URL, struct __ns1__GetMap const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMap(soap, p), 0) || ::soap_put___ns1__GetMap(soap, p, "-ns1:GetMap", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMap(struct soap *soap, const char *URL, struct __ns1__GetMap const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMap(soap, p), 0) || ::soap_put___ns1__GetMap(soap, p, "-ns1:GetMap", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMap * SOAP_FMAC4 soap_get___ns1__GetMap(struct soap*, struct __ns1__GetMap *, const char*, const char*);

inline int soap_read___ns1__GetMap(struct soap *soap, struct __ns1__GetMap *p)
{
	if (p)
	{	::soap_default___ns1__GetMap(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMap(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMap(struct soap *soap, const char *URL, struct __ns1__GetMap *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMap(struct soap *soap, struct __ns1__GetMap *p)
{
	if (::soap_read___ns1__GetMap(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__CheckMapVer_DEFINED
#define SOAP_TYPE___ns1__CheckMapVer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckMapVer(struct soap*, struct __ns1__CheckMapVer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckMapVer(struct soap*, const struct __ns1__CheckMapVer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckMapVer(struct soap*, const char*, int, const struct __ns1__CheckMapVer *, const char*);
SOAP_FMAC3 struct __ns1__CheckMapVer * SOAP_FMAC4 soap_in___ns1__CheckMapVer(struct soap*, const char*, struct __ns1__CheckMapVer *, const char*);
SOAP_FMAC1 struct __ns1__CheckMapVer * SOAP_FMAC2 soap_instantiate___ns1__CheckMapVer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckMapVer * soap_new___ns1__CheckMapVer(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CheckMapVer(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CheckMapVer * soap_new_req___ns1__CheckMapVer(
	struct soap *soap)
{
	struct __ns1__CheckMapVer *_p = ::soap_new___ns1__CheckMapVer(soap);
	if (_p)
	{	::soap_default___ns1__CheckMapVer(soap, _p);
	}
	return _p;
}

inline struct __ns1__CheckMapVer * soap_new_set___ns1__CheckMapVer(
	struct soap *soap,
	_ns1__CheckMapVer *ns1__CheckMapVer)
{
	struct __ns1__CheckMapVer *_p = ::soap_new___ns1__CheckMapVer(soap);
	if (_p)
	{	::soap_default___ns1__CheckMapVer(soap, _p);
		_p->ns1__CheckMapVer = ns1__CheckMapVer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckMapVer(struct soap*, const struct __ns1__CheckMapVer *, const char*, const char*);

inline int soap_write___ns1__CheckMapVer(struct soap *soap, struct __ns1__CheckMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CheckMapVer(soap, p), 0) || ::soap_put___ns1__CheckMapVer(soap, p, "-ns1:CheckMapVer", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CheckMapVer(struct soap *soap, const char *URL, struct __ns1__CheckMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckMapVer(soap, p), 0) || ::soap_put___ns1__CheckMapVer(soap, p, "-ns1:CheckMapVer", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CheckMapVer(struct soap *soap, const char *URL, struct __ns1__CheckMapVer const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckMapVer(soap, p), 0) || ::soap_put___ns1__CheckMapVer(soap, p, "-ns1:CheckMapVer", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CheckMapVer * SOAP_FMAC4 soap_get___ns1__CheckMapVer(struct soap*, struct __ns1__CheckMapVer *, const char*, const char*);

inline int soap_read___ns1__CheckMapVer(struct soap *soap, struct __ns1__CheckMapVer *p)
{
	if (p)
	{	::soap_default___ns1__CheckMapVer(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CheckMapVer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CheckMapVer(struct soap *soap, const char *URL, struct __ns1__CheckMapVer *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CheckMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__CheckMapVer(struct soap *soap, struct __ns1__CheckMapVer *p)
{
	if (::soap_read___ns1__CheckMapVer(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMangeXb_DEFINED
#define SOAP_TYPE___ns1__GetMangeXb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMangeXb(struct soap*, struct __ns1__GetMangeXb *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMangeXb(struct soap*, const struct __ns1__GetMangeXb *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMangeXb(struct soap*, const char*, int, const struct __ns1__GetMangeXb *, const char*);
SOAP_FMAC3 struct __ns1__GetMangeXb * SOAP_FMAC4 soap_in___ns1__GetMangeXb(struct soap*, const char*, struct __ns1__GetMangeXb *, const char*);
SOAP_FMAC1 struct __ns1__GetMangeXb * SOAP_FMAC2 soap_instantiate___ns1__GetMangeXb(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMangeXb * soap_new___ns1__GetMangeXb(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMangeXb(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMangeXb * soap_new_req___ns1__GetMangeXb(
	struct soap *soap)
{
	struct __ns1__GetMangeXb *_p = ::soap_new___ns1__GetMangeXb(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeXb(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMangeXb * soap_new_set___ns1__GetMangeXb(
	struct soap *soap,
	_ns1__GetMangeXb *ns1__GetMangeXb)
{
	struct __ns1__GetMangeXb *_p = ::soap_new___ns1__GetMangeXb(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeXb(soap, _p);
		_p->ns1__GetMangeXb = ns1__GetMangeXb;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMangeXb(struct soap*, const struct __ns1__GetMangeXb *, const char*, const char*);

inline int soap_write___ns1__GetMangeXb(struct soap *soap, struct __ns1__GetMangeXb const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMangeXb(soap, p), 0) || ::soap_put___ns1__GetMangeXb(soap, p, "-ns1:GetMangeXb", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMangeXb(struct soap *soap, const char *URL, struct __ns1__GetMangeXb const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeXb(soap, p), 0) || ::soap_put___ns1__GetMangeXb(soap, p, "-ns1:GetMangeXb", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMangeXb(struct soap *soap, const char *URL, struct __ns1__GetMangeXb const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeXb(soap, p), 0) || ::soap_put___ns1__GetMangeXb(soap, p, "-ns1:GetMangeXb", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMangeXb * SOAP_FMAC4 soap_get___ns1__GetMangeXb(struct soap*, struct __ns1__GetMangeXb *, const char*, const char*);

inline int soap_read___ns1__GetMangeXb(struct soap *soap, struct __ns1__GetMangeXb *p)
{
	if (p)
	{	::soap_default___ns1__GetMangeXb(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMangeXb(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMangeXb(struct soap *soap, const char *URL, struct __ns1__GetMangeXb *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMangeXb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMangeXb(struct soap *soap, struct __ns1__GetMangeXb *p)
{
	if (::soap_read___ns1__GetMangeXb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMangeUnit_DEFINED
#define SOAP_TYPE___ns1__GetMangeUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMangeUnit(struct soap*, struct __ns1__GetMangeUnit *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMangeUnit(struct soap*, const struct __ns1__GetMangeUnit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMangeUnit(struct soap*, const char*, int, const struct __ns1__GetMangeUnit *, const char*);
SOAP_FMAC3 struct __ns1__GetMangeUnit * SOAP_FMAC4 soap_in___ns1__GetMangeUnit(struct soap*, const char*, struct __ns1__GetMangeUnit *, const char*);
SOAP_FMAC1 struct __ns1__GetMangeUnit * SOAP_FMAC2 soap_instantiate___ns1__GetMangeUnit(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMangeUnit * soap_new___ns1__GetMangeUnit(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMangeUnit(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMangeUnit * soap_new_req___ns1__GetMangeUnit(
	struct soap *soap)
{
	struct __ns1__GetMangeUnit *_p = ::soap_new___ns1__GetMangeUnit(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeUnit(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMangeUnit * soap_new_set___ns1__GetMangeUnit(
	struct soap *soap,
	_ns1__GetMangeUnit *ns1__GetMangeUnit)
{
	struct __ns1__GetMangeUnit *_p = ::soap_new___ns1__GetMangeUnit(soap);
	if (_p)
	{	::soap_default___ns1__GetMangeUnit(soap, _p);
		_p->ns1__GetMangeUnit = ns1__GetMangeUnit;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMangeUnit(struct soap*, const struct __ns1__GetMangeUnit *, const char*, const char*);

inline int soap_write___ns1__GetMangeUnit(struct soap *soap, struct __ns1__GetMangeUnit const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMangeUnit(soap, p), 0) || ::soap_put___ns1__GetMangeUnit(soap, p, "-ns1:GetMangeUnit", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMangeUnit(struct soap *soap, const char *URL, struct __ns1__GetMangeUnit const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeUnit(soap, p), 0) || ::soap_put___ns1__GetMangeUnit(soap, p, "-ns1:GetMangeUnit", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMangeUnit(struct soap *soap, const char *URL, struct __ns1__GetMangeUnit const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMangeUnit(soap, p), 0) || ::soap_put___ns1__GetMangeUnit(soap, p, "-ns1:GetMangeUnit", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMangeUnit * SOAP_FMAC4 soap_get___ns1__GetMangeUnit(struct soap*, struct __ns1__GetMangeUnit *, const char*, const char*);

inline int soap_read___ns1__GetMangeUnit(struct soap *soap, struct __ns1__GetMangeUnit *p)
{
	if (p)
	{	::soap_default___ns1__GetMangeUnit(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMangeUnit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMangeUnit(struct soap *soap, const char *URL, struct __ns1__GetMangeUnit *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMangeUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMangeUnit(struct soap *soap, struct __ns1__GetMangeUnit *p)
{
	if (::soap_read___ns1__GetMangeUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMaList_DEFINED
#define SOAP_TYPE___ns1__GetMaList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMaList(struct soap*, struct __ns1__GetMaList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMaList(struct soap*, const struct __ns1__GetMaList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMaList(struct soap*, const char*, int, const struct __ns1__GetMaList *, const char*);
SOAP_FMAC3 struct __ns1__GetMaList * SOAP_FMAC4 soap_in___ns1__GetMaList(struct soap*, const char*, struct __ns1__GetMaList *, const char*);
SOAP_FMAC1 struct __ns1__GetMaList * SOAP_FMAC2 soap_instantiate___ns1__GetMaList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMaList * soap_new___ns1__GetMaList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMaList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMaList * soap_new_req___ns1__GetMaList(
	struct soap *soap)
{
	struct __ns1__GetMaList *_p = ::soap_new___ns1__GetMaList(soap);
	if (_p)
	{	::soap_default___ns1__GetMaList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMaList * soap_new_set___ns1__GetMaList(
	struct soap *soap,
	_ns1__GetMaList *ns1__GetMaList)
{
	struct __ns1__GetMaList *_p = ::soap_new___ns1__GetMaList(soap);
	if (_p)
	{	::soap_default___ns1__GetMaList(soap, _p);
		_p->ns1__GetMaList = ns1__GetMaList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMaList(struct soap*, const struct __ns1__GetMaList *, const char*, const char*);

inline int soap_write___ns1__GetMaList(struct soap *soap, struct __ns1__GetMaList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMaList(soap, p), 0) || ::soap_put___ns1__GetMaList(soap, p, "-ns1:GetMaList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMaList(struct soap *soap, const char *URL, struct __ns1__GetMaList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMaList(soap, p), 0) || ::soap_put___ns1__GetMaList(soap, p, "-ns1:GetMaList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMaList(struct soap *soap, const char *URL, struct __ns1__GetMaList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMaList(soap, p), 0) || ::soap_put___ns1__GetMaList(soap, p, "-ns1:GetMaList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMaList * SOAP_FMAC4 soap_get___ns1__GetMaList(struct soap*, struct __ns1__GetMaList *, const char*, const char*);

inline int soap_read___ns1__GetMaList(struct soap *soap, struct __ns1__GetMaList *p)
{
	if (p)
	{	::soap_default___ns1__GetMaList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMaList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMaList(struct soap *soap, const char *URL, struct __ns1__GetMaList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMaList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMaList(struct soap *soap, struct __ns1__GetMaList *p)
{
	if (::soap_read___ns1__GetMaList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapDeviceData_DEFINED
#define SOAP_TYPE___ns1__GetMapDeviceData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapDeviceData(struct soap*, struct __ns1__GetMapDeviceData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapDeviceData(struct soap*, const struct __ns1__GetMapDeviceData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapDeviceData(struct soap*, const char*, int, const struct __ns1__GetMapDeviceData *, const char*);
SOAP_FMAC3 struct __ns1__GetMapDeviceData * SOAP_FMAC4 soap_in___ns1__GetMapDeviceData(struct soap*, const char*, struct __ns1__GetMapDeviceData *, const char*);
SOAP_FMAC1 struct __ns1__GetMapDeviceData * SOAP_FMAC2 soap_instantiate___ns1__GetMapDeviceData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapDeviceData * soap_new___ns1__GetMapDeviceData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapDeviceData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapDeviceData * soap_new_req___ns1__GetMapDeviceData(
	struct soap *soap)
{
	struct __ns1__GetMapDeviceData *_p = ::soap_new___ns1__GetMapDeviceData(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceData(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapDeviceData * soap_new_set___ns1__GetMapDeviceData(
	struct soap *soap,
	_ns1__GetMapDeviceData *ns1__GetMapDeviceData)
{
	struct __ns1__GetMapDeviceData *_p = ::soap_new___ns1__GetMapDeviceData(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceData(soap, _p);
		_p->ns1__GetMapDeviceData = ns1__GetMapDeviceData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapDeviceData(struct soap*, const struct __ns1__GetMapDeviceData *, const char*, const char*);

inline int soap_write___ns1__GetMapDeviceData(struct soap *soap, struct __ns1__GetMapDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapDeviceData(soap, p), 0) || ::soap_put___ns1__GetMapDeviceData(soap, p, "-ns1:GetMapDeviceData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapDeviceData(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceData(soap, p), 0) || ::soap_put___ns1__GetMapDeviceData(soap, p, "-ns1:GetMapDeviceData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapDeviceData(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceData(soap, p), 0) || ::soap_put___ns1__GetMapDeviceData(soap, p, "-ns1:GetMapDeviceData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapDeviceData * SOAP_FMAC4 soap_get___ns1__GetMapDeviceData(struct soap*, struct __ns1__GetMapDeviceData *, const char*, const char*);

inline int soap_read___ns1__GetMapDeviceData(struct soap *soap, struct __ns1__GetMapDeviceData *p)
{
	if (p)
	{	::soap_default___ns1__GetMapDeviceData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapDeviceData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapDeviceData(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapDeviceData(struct soap *soap, struct __ns1__GetMapDeviceData *p)
{
	if (::soap_read___ns1__GetMapDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapTabName_DEFINED
#define SOAP_TYPE___ns1__GetMapTabName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapTabName(struct soap*, struct __ns1__GetMapTabName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapTabName(struct soap*, const struct __ns1__GetMapTabName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapTabName(struct soap*, const char*, int, const struct __ns1__GetMapTabName *, const char*);
SOAP_FMAC3 struct __ns1__GetMapTabName * SOAP_FMAC4 soap_in___ns1__GetMapTabName(struct soap*, const char*, struct __ns1__GetMapTabName *, const char*);
SOAP_FMAC1 struct __ns1__GetMapTabName * SOAP_FMAC2 soap_instantiate___ns1__GetMapTabName(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapTabName * soap_new___ns1__GetMapTabName(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapTabName(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapTabName * soap_new_req___ns1__GetMapTabName(
	struct soap *soap)
{
	struct __ns1__GetMapTabName *_p = ::soap_new___ns1__GetMapTabName(soap);
	if (_p)
	{	::soap_default___ns1__GetMapTabName(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapTabName * soap_new_set___ns1__GetMapTabName(
	struct soap *soap,
	_ns1__GetMapTabName *ns1__GetMapTabName)
{
	struct __ns1__GetMapTabName *_p = ::soap_new___ns1__GetMapTabName(soap);
	if (_p)
	{	::soap_default___ns1__GetMapTabName(soap, _p);
		_p->ns1__GetMapTabName = ns1__GetMapTabName;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapTabName(struct soap*, const struct __ns1__GetMapTabName *, const char*, const char*);

inline int soap_write___ns1__GetMapTabName(struct soap *soap, struct __ns1__GetMapTabName const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapTabName(soap, p), 0) || ::soap_put___ns1__GetMapTabName(soap, p, "-ns1:GetMapTabName", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapTabName(struct soap *soap, const char *URL, struct __ns1__GetMapTabName const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapTabName(soap, p), 0) || ::soap_put___ns1__GetMapTabName(soap, p, "-ns1:GetMapTabName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapTabName(struct soap *soap, const char *URL, struct __ns1__GetMapTabName const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapTabName(soap, p), 0) || ::soap_put___ns1__GetMapTabName(soap, p, "-ns1:GetMapTabName", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapTabName * SOAP_FMAC4 soap_get___ns1__GetMapTabName(struct soap*, struct __ns1__GetMapTabName *, const char*, const char*);

inline int soap_read___ns1__GetMapTabName(struct soap *soap, struct __ns1__GetMapTabName *p)
{
	if (p)
	{	::soap_default___ns1__GetMapTabName(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapTabName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapTabName(struct soap *soap, const char *URL, struct __ns1__GetMapTabName *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapTabName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapTabName(struct soap *soap, struct __ns1__GetMapTabName *p)
{
	if (::soap_read___ns1__GetMapTabName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapUpdateTime_DEFINED
#define SOAP_TYPE___ns1__GetMapUpdateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapUpdateTime(struct soap*, struct __ns1__GetMapUpdateTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapUpdateTime(struct soap*, const struct __ns1__GetMapUpdateTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapUpdateTime(struct soap*, const char*, int, const struct __ns1__GetMapUpdateTime *, const char*);
SOAP_FMAC3 struct __ns1__GetMapUpdateTime * SOAP_FMAC4 soap_in___ns1__GetMapUpdateTime(struct soap*, const char*, struct __ns1__GetMapUpdateTime *, const char*);
SOAP_FMAC1 struct __ns1__GetMapUpdateTime * SOAP_FMAC2 soap_instantiate___ns1__GetMapUpdateTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapUpdateTime * soap_new___ns1__GetMapUpdateTime(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapUpdateTime(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapUpdateTime * soap_new_req___ns1__GetMapUpdateTime(
	struct soap *soap)
{
	struct __ns1__GetMapUpdateTime *_p = ::soap_new___ns1__GetMapUpdateTime(soap);
	if (_p)
	{	::soap_default___ns1__GetMapUpdateTime(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapUpdateTime * soap_new_set___ns1__GetMapUpdateTime(
	struct soap *soap,
	_ns1__GetMapUpdateTime *ns1__GetMapUpdateTime)
{
	struct __ns1__GetMapUpdateTime *_p = ::soap_new___ns1__GetMapUpdateTime(soap);
	if (_p)
	{	::soap_default___ns1__GetMapUpdateTime(soap, _p);
		_p->ns1__GetMapUpdateTime = ns1__GetMapUpdateTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapUpdateTime(struct soap*, const struct __ns1__GetMapUpdateTime *, const char*, const char*);

inline int soap_write___ns1__GetMapUpdateTime(struct soap *soap, struct __ns1__GetMapUpdateTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapUpdateTime(soap, p), 0) || ::soap_put___ns1__GetMapUpdateTime(soap, p, "-ns1:GetMapUpdateTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapUpdateTime(struct soap *soap, const char *URL, struct __ns1__GetMapUpdateTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapUpdateTime(soap, p), 0) || ::soap_put___ns1__GetMapUpdateTime(soap, p, "-ns1:GetMapUpdateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapUpdateTime(struct soap *soap, const char *URL, struct __ns1__GetMapUpdateTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapUpdateTime(soap, p), 0) || ::soap_put___ns1__GetMapUpdateTime(soap, p, "-ns1:GetMapUpdateTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapUpdateTime * SOAP_FMAC4 soap_get___ns1__GetMapUpdateTime(struct soap*, struct __ns1__GetMapUpdateTime *, const char*, const char*);

inline int soap_read___ns1__GetMapUpdateTime(struct soap *soap, struct __ns1__GetMapUpdateTime *p)
{
	if (p)
	{	::soap_default___ns1__GetMapUpdateTime(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapUpdateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapUpdateTime(struct soap *soap, const char *URL, struct __ns1__GetMapUpdateTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapUpdateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapUpdateTime(struct soap *soap, struct __ns1__GetMapUpdateTime *p)
{
	if (::soap_read___ns1__GetMapUpdateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__WriteFile_DEFINED
#define SOAP_TYPE___ns1__WriteFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__WriteFile(struct soap*, struct __ns1__WriteFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__WriteFile(struct soap*, const struct __ns1__WriteFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__WriteFile(struct soap*, const char*, int, const struct __ns1__WriteFile *, const char*);
SOAP_FMAC3 struct __ns1__WriteFile * SOAP_FMAC4 soap_in___ns1__WriteFile(struct soap*, const char*, struct __ns1__WriteFile *, const char*);
SOAP_FMAC1 struct __ns1__WriteFile * SOAP_FMAC2 soap_instantiate___ns1__WriteFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__WriteFile * soap_new___ns1__WriteFile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__WriteFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__WriteFile * soap_new_req___ns1__WriteFile(
	struct soap *soap)
{
	struct __ns1__WriteFile *_p = ::soap_new___ns1__WriteFile(soap);
	if (_p)
	{	::soap_default___ns1__WriteFile(soap, _p);
	}
	return _p;
}

inline struct __ns1__WriteFile * soap_new_set___ns1__WriteFile(
	struct soap *soap,
	_ns1__WriteFile *ns1__WriteFile)
{
	struct __ns1__WriteFile *_p = ::soap_new___ns1__WriteFile(soap);
	if (_p)
	{	::soap_default___ns1__WriteFile(soap, _p);
		_p->ns1__WriteFile = ns1__WriteFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__WriteFile(struct soap*, const struct __ns1__WriteFile *, const char*, const char*);

inline int soap_write___ns1__WriteFile(struct soap *soap, struct __ns1__WriteFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__WriteFile(soap, p), 0) || ::soap_put___ns1__WriteFile(soap, p, "-ns1:WriteFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__WriteFile(struct soap *soap, const char *URL, struct __ns1__WriteFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__WriteFile(soap, p), 0) || ::soap_put___ns1__WriteFile(soap, p, "-ns1:WriteFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__WriteFile(struct soap *soap, const char *URL, struct __ns1__WriteFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__WriteFile(soap, p), 0) || ::soap_put___ns1__WriteFile(soap, p, "-ns1:WriteFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__WriteFile * SOAP_FMAC4 soap_get___ns1__WriteFile(struct soap*, struct __ns1__WriteFile *, const char*, const char*);

inline int soap_read___ns1__WriteFile(struct soap *soap, struct __ns1__WriteFile *p)
{
	if (p)
	{	::soap_default___ns1__WriteFile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__WriteFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__WriteFile(struct soap *soap, const char *URL, struct __ns1__WriteFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__WriteFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__WriteFile(struct soap *soap, struct __ns1__WriteFile *p)
{
	if (::soap_read___ns1__WriteFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownLoadFile_DEFINED
#define SOAP_TYPE___ns1__DownLoadFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownLoadFile(struct soap*, struct __ns1__DownLoadFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownLoadFile(struct soap*, const struct __ns1__DownLoadFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownLoadFile(struct soap*, const char*, int, const struct __ns1__DownLoadFile *, const char*);
SOAP_FMAC3 struct __ns1__DownLoadFile * SOAP_FMAC4 soap_in___ns1__DownLoadFile(struct soap*, const char*, struct __ns1__DownLoadFile *, const char*);
SOAP_FMAC1 struct __ns1__DownLoadFile * SOAP_FMAC2 soap_instantiate___ns1__DownLoadFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownLoadFile * soap_new___ns1__DownLoadFile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownLoadFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownLoadFile * soap_new_req___ns1__DownLoadFile(
	struct soap *soap)
{
	struct __ns1__DownLoadFile *_p = ::soap_new___ns1__DownLoadFile(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadFile(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownLoadFile * soap_new_set___ns1__DownLoadFile(
	struct soap *soap,
	_ns1__DownLoadFile *ns1__DownLoadFile)
{
	struct __ns1__DownLoadFile *_p = ::soap_new___ns1__DownLoadFile(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadFile(soap, _p);
		_p->ns1__DownLoadFile = ns1__DownLoadFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownLoadFile(struct soap*, const struct __ns1__DownLoadFile *, const char*, const char*);

inline int soap_write___ns1__DownLoadFile(struct soap *soap, struct __ns1__DownLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownLoadFile(soap, p), 0) || ::soap_put___ns1__DownLoadFile(soap, p, "-ns1:DownLoadFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownLoadFile(struct soap *soap, const char *URL, struct __ns1__DownLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadFile(soap, p), 0) || ::soap_put___ns1__DownLoadFile(soap, p, "-ns1:DownLoadFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownLoadFile(struct soap *soap, const char *URL, struct __ns1__DownLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadFile(soap, p), 0) || ::soap_put___ns1__DownLoadFile(soap, p, "-ns1:DownLoadFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownLoadFile * SOAP_FMAC4 soap_get___ns1__DownLoadFile(struct soap*, struct __ns1__DownLoadFile *, const char*, const char*);

inline int soap_read___ns1__DownLoadFile(struct soap *soap, struct __ns1__DownLoadFile *p)
{
	if (p)
	{	::soap_default___ns1__DownLoadFile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownLoadFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownLoadFile(struct soap *soap, const char *URL, struct __ns1__DownLoadFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownLoadFile(struct soap *soap, struct __ns1__DownLoadFile *p)
{
	if (::soap_read___ns1__DownLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ExecuteSqlForFile_DEFINED
#define SOAP_TYPE___ns1__ExecuteSqlForFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteSqlForFile(struct soap*, struct __ns1__ExecuteSqlForFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteSqlForFile(struct soap*, const struct __ns1__ExecuteSqlForFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteSqlForFile(struct soap*, const char*, int, const struct __ns1__ExecuteSqlForFile *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteSqlForFile * SOAP_FMAC4 soap_in___ns1__ExecuteSqlForFile(struct soap*, const char*, struct __ns1__ExecuteSqlForFile *, const char*);
SOAP_FMAC1 struct __ns1__ExecuteSqlForFile * SOAP_FMAC2 soap_instantiate___ns1__ExecuteSqlForFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExecuteSqlForFile * soap_new___ns1__ExecuteSqlForFile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ExecuteSqlForFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ExecuteSqlForFile * soap_new_req___ns1__ExecuteSqlForFile(
	struct soap *soap)
{
	struct __ns1__ExecuteSqlForFile *_p = ::soap_new___ns1__ExecuteSqlForFile(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForFile(soap, _p);
	}
	return _p;
}

inline struct __ns1__ExecuteSqlForFile * soap_new_set___ns1__ExecuteSqlForFile(
	struct soap *soap,
	_ns1__ExecuteSqlForFile *ns1__ExecuteSqlForFile)
{
	struct __ns1__ExecuteSqlForFile *_p = ::soap_new___ns1__ExecuteSqlForFile(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForFile(soap, _p);
		_p->ns1__ExecuteSqlForFile = ns1__ExecuteSqlForFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteSqlForFile(struct soap*, const struct __ns1__ExecuteSqlForFile *, const char*, const char*);

inline int soap_write___ns1__ExecuteSqlForFile(struct soap *soap, struct __ns1__ExecuteSqlForFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ExecuteSqlForFile(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForFile(soap, p, "-ns1:ExecuteSqlForFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ExecuteSqlForFile(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForFile(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForFile(soap, p, "-ns1:ExecuteSqlForFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ExecuteSqlForFile(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForFile(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForFile(soap, p, "-ns1:ExecuteSqlForFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ExecuteSqlForFile * SOAP_FMAC4 soap_get___ns1__ExecuteSqlForFile(struct soap*, struct __ns1__ExecuteSqlForFile *, const char*, const char*);

inline int soap_read___ns1__ExecuteSqlForFile(struct soap *soap, struct __ns1__ExecuteSqlForFile *p)
{
	if (p)
	{	::soap_default___ns1__ExecuteSqlForFile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ExecuteSqlForFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ExecuteSqlForFile(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ExecuteSqlForFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ExecuteSqlForFile(struct soap *soap, struct __ns1__ExecuteSqlForFile *p)
{
	if (::soap_read___ns1__ExecuteSqlForFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetFieldInfo_DEFINED
#define SOAP_TYPE___ns1__GetFieldInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFieldInfo(struct soap*, struct __ns1__GetFieldInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFieldInfo(struct soap*, const struct __ns1__GetFieldInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFieldInfo(struct soap*, const char*, int, const struct __ns1__GetFieldInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetFieldInfo * SOAP_FMAC4 soap_in___ns1__GetFieldInfo(struct soap*, const char*, struct __ns1__GetFieldInfo *, const char*);
SOAP_FMAC1 struct __ns1__GetFieldInfo * SOAP_FMAC2 soap_instantiate___ns1__GetFieldInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFieldInfo * soap_new___ns1__GetFieldInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetFieldInfo(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetFieldInfo * soap_new_req___ns1__GetFieldInfo(
	struct soap *soap)
{
	struct __ns1__GetFieldInfo *_p = ::soap_new___ns1__GetFieldInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetFieldInfo(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetFieldInfo * soap_new_set___ns1__GetFieldInfo(
	struct soap *soap,
	_ns1__GetFieldInfo *ns1__GetFieldInfo)
{
	struct __ns1__GetFieldInfo *_p = ::soap_new___ns1__GetFieldInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetFieldInfo(soap, _p);
		_p->ns1__GetFieldInfo = ns1__GetFieldInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFieldInfo(struct soap*, const struct __ns1__GetFieldInfo *, const char*, const char*);

inline int soap_write___ns1__GetFieldInfo(struct soap *soap, struct __ns1__GetFieldInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetFieldInfo(soap, p), 0) || ::soap_put___ns1__GetFieldInfo(soap, p, "-ns1:GetFieldInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetFieldInfo(struct soap *soap, const char *URL, struct __ns1__GetFieldInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFieldInfo(soap, p), 0) || ::soap_put___ns1__GetFieldInfo(soap, p, "-ns1:GetFieldInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetFieldInfo(struct soap *soap, const char *URL, struct __ns1__GetFieldInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFieldInfo(soap, p), 0) || ::soap_put___ns1__GetFieldInfo(soap, p, "-ns1:GetFieldInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetFieldInfo * SOAP_FMAC4 soap_get___ns1__GetFieldInfo(struct soap*, struct __ns1__GetFieldInfo *, const char*, const char*);

inline int soap_read___ns1__GetFieldInfo(struct soap *soap, struct __ns1__GetFieldInfo *p)
{
	if (p)
	{	::soap_default___ns1__GetFieldInfo(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetFieldInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetFieldInfo(struct soap *soap, const char *URL, struct __ns1__GetFieldInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetFieldInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetFieldInfo(struct soap *soap, struct __ns1__GetFieldInfo *p)
{
	if (::soap_read___ns1__GetFieldInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__IsOracleTable_DEFINED
#define SOAP_TYPE___ns1__IsOracleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__IsOracleTable(struct soap*, struct __ns1__IsOracleTable *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__IsOracleTable(struct soap*, const struct __ns1__IsOracleTable *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__IsOracleTable(struct soap*, const char*, int, const struct __ns1__IsOracleTable *, const char*);
SOAP_FMAC3 struct __ns1__IsOracleTable * SOAP_FMAC4 soap_in___ns1__IsOracleTable(struct soap*, const char*, struct __ns1__IsOracleTable *, const char*);
SOAP_FMAC1 struct __ns1__IsOracleTable * SOAP_FMAC2 soap_instantiate___ns1__IsOracleTable(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__IsOracleTable * soap_new___ns1__IsOracleTable(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__IsOracleTable(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__IsOracleTable * soap_new_req___ns1__IsOracleTable(
	struct soap *soap)
{
	struct __ns1__IsOracleTable *_p = ::soap_new___ns1__IsOracleTable(soap);
	if (_p)
	{	::soap_default___ns1__IsOracleTable(soap, _p);
	}
	return _p;
}

inline struct __ns1__IsOracleTable * soap_new_set___ns1__IsOracleTable(
	struct soap *soap,
	_ns1__IsOracleTable *ns1__IsOracleTable)
{
	struct __ns1__IsOracleTable *_p = ::soap_new___ns1__IsOracleTable(soap);
	if (_p)
	{	::soap_default___ns1__IsOracleTable(soap, _p);
		_p->ns1__IsOracleTable = ns1__IsOracleTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__IsOracleTable(struct soap*, const struct __ns1__IsOracleTable *, const char*, const char*);

inline int soap_write___ns1__IsOracleTable(struct soap *soap, struct __ns1__IsOracleTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__IsOracleTable(soap, p), 0) || ::soap_put___ns1__IsOracleTable(soap, p, "-ns1:IsOracleTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__IsOracleTable(struct soap *soap, const char *URL, struct __ns1__IsOracleTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__IsOracleTable(soap, p), 0) || ::soap_put___ns1__IsOracleTable(soap, p, "-ns1:IsOracleTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__IsOracleTable(struct soap *soap, const char *URL, struct __ns1__IsOracleTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__IsOracleTable(soap, p), 0) || ::soap_put___ns1__IsOracleTable(soap, p, "-ns1:IsOracleTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__IsOracleTable * SOAP_FMAC4 soap_get___ns1__IsOracleTable(struct soap*, struct __ns1__IsOracleTable *, const char*, const char*);

inline int soap_read___ns1__IsOracleTable(struct soap *soap, struct __ns1__IsOracleTable *p)
{
	if (p)
	{	::soap_default___ns1__IsOracleTable(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__IsOracleTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__IsOracleTable(struct soap *soap, const char *URL, struct __ns1__IsOracleTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__IsOracleTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__IsOracleTable(struct soap *soap, struct __ns1__IsOracleTable *p)
{
	if (::soap_read___ns1__IsOracleTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetTabList_DEFINED
#define SOAP_TYPE___ns1__GetTabList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetTabList(struct soap*, struct __ns1__GetTabList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetTabList(struct soap*, const struct __ns1__GetTabList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetTabList(struct soap*, const char*, int, const struct __ns1__GetTabList *, const char*);
SOAP_FMAC3 struct __ns1__GetTabList * SOAP_FMAC4 soap_in___ns1__GetTabList(struct soap*, const char*, struct __ns1__GetTabList *, const char*);
SOAP_FMAC1 struct __ns1__GetTabList * SOAP_FMAC2 soap_instantiate___ns1__GetTabList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetTabList * soap_new___ns1__GetTabList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetTabList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetTabList * soap_new_req___ns1__GetTabList(
	struct soap *soap)
{
	struct __ns1__GetTabList *_p = ::soap_new___ns1__GetTabList(soap);
	if (_p)
	{	::soap_default___ns1__GetTabList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetTabList * soap_new_set___ns1__GetTabList(
	struct soap *soap,
	_ns1__GetTabList *ns1__GetTabList)
{
	struct __ns1__GetTabList *_p = ::soap_new___ns1__GetTabList(soap);
	if (_p)
	{	::soap_default___ns1__GetTabList(soap, _p);
		_p->ns1__GetTabList = ns1__GetTabList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetTabList(struct soap*, const struct __ns1__GetTabList *, const char*, const char*);

inline int soap_write___ns1__GetTabList(struct soap *soap, struct __ns1__GetTabList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetTabList(soap, p), 0) || ::soap_put___ns1__GetTabList(soap, p, "-ns1:GetTabList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetTabList(struct soap *soap, const char *URL, struct __ns1__GetTabList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTabList(soap, p), 0) || ::soap_put___ns1__GetTabList(soap, p, "-ns1:GetTabList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetTabList(struct soap *soap, const char *URL, struct __ns1__GetTabList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetTabList(soap, p), 0) || ::soap_put___ns1__GetTabList(soap, p, "-ns1:GetTabList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetTabList * SOAP_FMAC4 soap_get___ns1__GetTabList(struct soap*, struct __ns1__GetTabList *, const char*, const char*);

inline int soap_read___ns1__GetTabList(struct soap *soap, struct __ns1__GetTabList *p)
{
	if (p)
	{	::soap_default___ns1__GetTabList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetTabList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetTabList(struct soap *soap, const char *URL, struct __ns1__GetTabList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetTabList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetTabList(struct soap *soap, struct __ns1__GetTabList *p)
{
	if (::soap_read___ns1__GetTabList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownCQData_DEFINED
#define SOAP_TYPE___ns1__DownCQData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownCQData(struct soap*, struct __ns1__DownCQData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownCQData(struct soap*, const struct __ns1__DownCQData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownCQData(struct soap*, const char*, int, const struct __ns1__DownCQData *, const char*);
SOAP_FMAC3 struct __ns1__DownCQData * SOAP_FMAC4 soap_in___ns1__DownCQData(struct soap*, const char*, struct __ns1__DownCQData *, const char*);
SOAP_FMAC1 struct __ns1__DownCQData * SOAP_FMAC2 soap_instantiate___ns1__DownCQData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownCQData * soap_new___ns1__DownCQData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownCQData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownCQData * soap_new_req___ns1__DownCQData(
	struct soap *soap)
{
	struct __ns1__DownCQData *_p = ::soap_new___ns1__DownCQData(soap);
	if (_p)
	{	::soap_default___ns1__DownCQData(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownCQData * soap_new_set___ns1__DownCQData(
	struct soap *soap,
	_ns1__DownCQData *ns1__DownCQData)
{
	struct __ns1__DownCQData *_p = ::soap_new___ns1__DownCQData(soap);
	if (_p)
	{	::soap_default___ns1__DownCQData(soap, _p);
		_p->ns1__DownCQData = ns1__DownCQData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownCQData(struct soap*, const struct __ns1__DownCQData *, const char*, const char*);

inline int soap_write___ns1__DownCQData(struct soap *soap, struct __ns1__DownCQData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownCQData(soap, p), 0) || ::soap_put___ns1__DownCQData(soap, p, "-ns1:DownCQData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownCQData(struct soap *soap, const char *URL, struct __ns1__DownCQData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownCQData(soap, p), 0) || ::soap_put___ns1__DownCQData(soap, p, "-ns1:DownCQData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownCQData(struct soap *soap, const char *URL, struct __ns1__DownCQData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownCQData(soap, p), 0) || ::soap_put___ns1__DownCQData(soap, p, "-ns1:DownCQData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownCQData * SOAP_FMAC4 soap_get___ns1__DownCQData(struct soap*, struct __ns1__DownCQData *, const char*, const char*);

inline int soap_read___ns1__DownCQData(struct soap *soap, struct __ns1__DownCQData *p)
{
	if (p)
	{	::soap_default___ns1__DownCQData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownCQData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownCQData(struct soap *soap, const char *URL, struct __ns1__DownCQData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownCQData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownCQData(struct soap *soap, struct __ns1__DownCQData *p)
{
	if (::soap_read___ns1__DownCQData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__AlterTable_DEFINED
#define SOAP_TYPE___ns1__AlterTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AlterTable(struct soap*, struct __ns1__AlterTable *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AlterTable(struct soap*, const struct __ns1__AlterTable *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AlterTable(struct soap*, const char*, int, const struct __ns1__AlterTable *, const char*);
SOAP_FMAC3 struct __ns1__AlterTable * SOAP_FMAC4 soap_in___ns1__AlterTable(struct soap*, const char*, struct __ns1__AlterTable *, const char*);
SOAP_FMAC1 struct __ns1__AlterTable * SOAP_FMAC2 soap_instantiate___ns1__AlterTable(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AlterTable * soap_new___ns1__AlterTable(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__AlterTable(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__AlterTable * soap_new_req___ns1__AlterTable(
	struct soap *soap)
{
	struct __ns1__AlterTable *_p = ::soap_new___ns1__AlterTable(soap);
	if (_p)
	{	::soap_default___ns1__AlterTable(soap, _p);
	}
	return _p;
}

inline struct __ns1__AlterTable * soap_new_set___ns1__AlterTable(
	struct soap *soap,
	_ns1__AlterTable *ns1__AlterTable)
{
	struct __ns1__AlterTable *_p = ::soap_new___ns1__AlterTable(soap);
	if (_p)
	{	::soap_default___ns1__AlterTable(soap, _p);
		_p->ns1__AlterTable = ns1__AlterTable;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AlterTable(struct soap*, const struct __ns1__AlterTable *, const char*, const char*);

inline int soap_write___ns1__AlterTable(struct soap *soap, struct __ns1__AlterTable const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__AlterTable(soap, p), 0) || ::soap_put___ns1__AlterTable(soap, p, "-ns1:AlterTable", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__AlterTable(struct soap *soap, const char *URL, struct __ns1__AlterTable const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AlterTable(soap, p), 0) || ::soap_put___ns1__AlterTable(soap, p, "-ns1:AlterTable", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__AlterTable(struct soap *soap, const char *URL, struct __ns1__AlterTable const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__AlterTable(soap, p), 0) || ::soap_put___ns1__AlterTable(soap, p, "-ns1:AlterTable", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__AlterTable * SOAP_FMAC4 soap_get___ns1__AlterTable(struct soap*, struct __ns1__AlterTable *, const char*, const char*);

inline int soap_read___ns1__AlterTable(struct soap *soap, struct __ns1__AlterTable *p)
{
	if (p)
	{	::soap_default___ns1__AlterTable(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__AlterTable(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__AlterTable(struct soap *soap, const char *URL, struct __ns1__AlterTable *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__AlterTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__AlterTable(struct soap *soap, struct __ns1__AlterTable *p)
{
	if (::soap_read___ns1__AlterTable(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetFileNew_DEFINED
#define SOAP_TYPE___ns1__GetFileNew_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFileNew(struct soap*, struct __ns1__GetFileNew *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFileNew(struct soap*, const struct __ns1__GetFileNew *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFileNew(struct soap*, const char*, int, const struct __ns1__GetFileNew *, const char*);
SOAP_FMAC3 struct __ns1__GetFileNew * SOAP_FMAC4 soap_in___ns1__GetFileNew(struct soap*, const char*, struct __ns1__GetFileNew *, const char*);
SOAP_FMAC1 struct __ns1__GetFileNew * SOAP_FMAC2 soap_instantiate___ns1__GetFileNew(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFileNew * soap_new___ns1__GetFileNew(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetFileNew(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetFileNew * soap_new_req___ns1__GetFileNew(
	struct soap *soap)
{
	struct __ns1__GetFileNew *_p = ::soap_new___ns1__GetFileNew(soap);
	if (_p)
	{	::soap_default___ns1__GetFileNew(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetFileNew * soap_new_set___ns1__GetFileNew(
	struct soap *soap,
	_ns1__GetFileNew *ns1__GetFileNew)
{
	struct __ns1__GetFileNew *_p = ::soap_new___ns1__GetFileNew(soap);
	if (_p)
	{	::soap_default___ns1__GetFileNew(soap, _p);
		_p->ns1__GetFileNew = ns1__GetFileNew;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFileNew(struct soap*, const struct __ns1__GetFileNew *, const char*, const char*);

inline int soap_write___ns1__GetFileNew(struct soap *soap, struct __ns1__GetFileNew const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetFileNew(soap, p), 0) || ::soap_put___ns1__GetFileNew(soap, p, "-ns1:GetFileNew", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetFileNew(struct soap *soap, const char *URL, struct __ns1__GetFileNew const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileNew(soap, p), 0) || ::soap_put___ns1__GetFileNew(soap, p, "-ns1:GetFileNew", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetFileNew(struct soap *soap, const char *URL, struct __ns1__GetFileNew const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileNew(soap, p), 0) || ::soap_put___ns1__GetFileNew(soap, p, "-ns1:GetFileNew", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetFileNew * SOAP_FMAC4 soap_get___ns1__GetFileNew(struct soap*, struct __ns1__GetFileNew *, const char*, const char*);

inline int soap_read___ns1__GetFileNew(struct soap *soap, struct __ns1__GetFileNew *p)
{
	if (p)
	{	::soap_default___ns1__GetFileNew(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetFileNew(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetFileNew(struct soap *soap, const char *URL, struct __ns1__GetFileNew *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetFileNew(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetFileNew(struct soap *soap, struct __ns1__GetFileNew *p)
{
	if (::soap_read___ns1__GetFileNew(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownMapfile_DEFINED
#define SOAP_TYPE___ns1__DownMapfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownMapfile(struct soap*, struct __ns1__DownMapfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownMapfile(struct soap*, const struct __ns1__DownMapfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownMapfile(struct soap*, const char*, int, const struct __ns1__DownMapfile *, const char*);
SOAP_FMAC3 struct __ns1__DownMapfile * SOAP_FMAC4 soap_in___ns1__DownMapfile(struct soap*, const char*, struct __ns1__DownMapfile *, const char*);
SOAP_FMAC1 struct __ns1__DownMapfile * SOAP_FMAC2 soap_instantiate___ns1__DownMapfile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownMapfile * soap_new___ns1__DownMapfile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownMapfile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownMapfile * soap_new_req___ns1__DownMapfile(
	struct soap *soap)
{
	struct __ns1__DownMapfile *_p = ::soap_new___ns1__DownMapfile(soap);
	if (_p)
	{	::soap_default___ns1__DownMapfile(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownMapfile * soap_new_set___ns1__DownMapfile(
	struct soap *soap,
	_ns1__DownMapfile *ns1__DownMapfile)
{
	struct __ns1__DownMapfile *_p = ::soap_new___ns1__DownMapfile(soap);
	if (_p)
	{	::soap_default___ns1__DownMapfile(soap, _p);
		_p->ns1__DownMapfile = ns1__DownMapfile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownMapfile(struct soap*, const struct __ns1__DownMapfile *, const char*, const char*);

inline int soap_write___ns1__DownMapfile(struct soap *soap, struct __ns1__DownMapfile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownMapfile(soap, p), 0) || ::soap_put___ns1__DownMapfile(soap, p, "-ns1:DownMapfile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownMapfile(struct soap *soap, const char *URL, struct __ns1__DownMapfile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownMapfile(soap, p), 0) || ::soap_put___ns1__DownMapfile(soap, p, "-ns1:DownMapfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownMapfile(struct soap *soap, const char *URL, struct __ns1__DownMapfile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownMapfile(soap, p), 0) || ::soap_put___ns1__DownMapfile(soap, p, "-ns1:DownMapfile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownMapfile * SOAP_FMAC4 soap_get___ns1__DownMapfile(struct soap*, struct __ns1__DownMapfile *, const char*, const char*);

inline int soap_read___ns1__DownMapfile(struct soap *soap, struct __ns1__DownMapfile *p)
{
	if (p)
	{	::soap_default___ns1__DownMapfile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownMapfile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownMapfile(struct soap *soap, const char *URL, struct __ns1__DownMapfile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownMapfile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownMapfile(struct soap *soap, struct __ns1__DownMapfile *p)
{
	if (::soap_read___ns1__DownMapfile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDownFileInfo_DEFINED
#define SOAP_TYPE___ns1__GetDownFileInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDownFileInfo(struct soap*, struct __ns1__GetDownFileInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDownFileInfo(struct soap*, const struct __ns1__GetDownFileInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDownFileInfo(struct soap*, const char*, int, const struct __ns1__GetDownFileInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetDownFileInfo * SOAP_FMAC4 soap_in___ns1__GetDownFileInfo(struct soap*, const char*, struct __ns1__GetDownFileInfo *, const char*);
SOAP_FMAC1 struct __ns1__GetDownFileInfo * SOAP_FMAC2 soap_instantiate___ns1__GetDownFileInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDownFileInfo * soap_new___ns1__GetDownFileInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDownFileInfo(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDownFileInfo * soap_new_req___ns1__GetDownFileInfo(
	struct soap *soap)
{
	struct __ns1__GetDownFileInfo *_p = ::soap_new___ns1__GetDownFileInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetDownFileInfo(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDownFileInfo * soap_new_set___ns1__GetDownFileInfo(
	struct soap *soap,
	_ns1__GetDownFileInfo *ns1__GetDownFileInfo)
{
	struct __ns1__GetDownFileInfo *_p = ::soap_new___ns1__GetDownFileInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetDownFileInfo(soap, _p);
		_p->ns1__GetDownFileInfo = ns1__GetDownFileInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDownFileInfo(struct soap*, const struct __ns1__GetDownFileInfo *, const char*, const char*);

inline int soap_write___ns1__GetDownFileInfo(struct soap *soap, struct __ns1__GetDownFileInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDownFileInfo(soap, p), 0) || ::soap_put___ns1__GetDownFileInfo(soap, p, "-ns1:GetDownFileInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDownFileInfo(struct soap *soap, const char *URL, struct __ns1__GetDownFileInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDownFileInfo(soap, p), 0) || ::soap_put___ns1__GetDownFileInfo(soap, p, "-ns1:GetDownFileInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDownFileInfo(struct soap *soap, const char *URL, struct __ns1__GetDownFileInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDownFileInfo(soap, p), 0) || ::soap_put___ns1__GetDownFileInfo(soap, p, "-ns1:GetDownFileInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDownFileInfo * SOAP_FMAC4 soap_get___ns1__GetDownFileInfo(struct soap*, struct __ns1__GetDownFileInfo *, const char*, const char*);

inline int soap_read___ns1__GetDownFileInfo(struct soap *soap, struct __ns1__GetDownFileInfo *p)
{
	if (p)
	{	::soap_default___ns1__GetDownFileInfo(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDownFileInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDownFileInfo(struct soap *soap, const char *URL, struct __ns1__GetDownFileInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDownFileInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDownFileInfo(struct soap *soap, struct __ns1__GetDownFileInfo *p)
{
	if (::soap_read___ns1__GetDownFileInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetGxDeviceData_DEFINED
#define SOAP_TYPE___ns1__GetGxDeviceData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetGxDeviceData(struct soap*, struct __ns1__GetGxDeviceData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetGxDeviceData(struct soap*, const struct __ns1__GetGxDeviceData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetGxDeviceData(struct soap*, const char*, int, const struct __ns1__GetGxDeviceData *, const char*);
SOAP_FMAC3 struct __ns1__GetGxDeviceData * SOAP_FMAC4 soap_in___ns1__GetGxDeviceData(struct soap*, const char*, struct __ns1__GetGxDeviceData *, const char*);
SOAP_FMAC1 struct __ns1__GetGxDeviceData * SOAP_FMAC2 soap_instantiate___ns1__GetGxDeviceData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetGxDeviceData * soap_new___ns1__GetGxDeviceData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetGxDeviceData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetGxDeviceData * soap_new_req___ns1__GetGxDeviceData(
	struct soap *soap)
{
	struct __ns1__GetGxDeviceData *_p = ::soap_new___ns1__GetGxDeviceData(soap);
	if (_p)
	{	::soap_default___ns1__GetGxDeviceData(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetGxDeviceData * soap_new_set___ns1__GetGxDeviceData(
	struct soap *soap,
	_ns1__GetGxDeviceData *ns1__GetGxDeviceData)
{
	struct __ns1__GetGxDeviceData *_p = ::soap_new___ns1__GetGxDeviceData(soap);
	if (_p)
	{	::soap_default___ns1__GetGxDeviceData(soap, _p);
		_p->ns1__GetGxDeviceData = ns1__GetGxDeviceData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetGxDeviceData(struct soap*, const struct __ns1__GetGxDeviceData *, const char*, const char*);

inline int soap_write___ns1__GetGxDeviceData(struct soap *soap, struct __ns1__GetGxDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetGxDeviceData(soap, p), 0) || ::soap_put___ns1__GetGxDeviceData(soap, p, "-ns1:GetGxDeviceData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetGxDeviceData(struct soap *soap, const char *URL, struct __ns1__GetGxDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxDeviceData(soap, p), 0) || ::soap_put___ns1__GetGxDeviceData(soap, p, "-ns1:GetGxDeviceData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetGxDeviceData(struct soap *soap, const char *URL, struct __ns1__GetGxDeviceData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxDeviceData(soap, p), 0) || ::soap_put___ns1__GetGxDeviceData(soap, p, "-ns1:GetGxDeviceData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetGxDeviceData * SOAP_FMAC4 soap_get___ns1__GetGxDeviceData(struct soap*, struct __ns1__GetGxDeviceData *, const char*, const char*);

inline int soap_read___ns1__GetGxDeviceData(struct soap *soap, struct __ns1__GetGxDeviceData *p)
{
	if (p)
	{	::soap_default___ns1__GetGxDeviceData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetGxDeviceData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetGxDeviceData(struct soap *soap, const char *URL, struct __ns1__GetGxDeviceData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetGxDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetGxDeviceData(struct soap *soap, struct __ns1__GetGxDeviceData *p)
{
	if (::soap_read___ns1__GetGxDeviceData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetMapDeviceType_DEFINED
#define SOAP_TYPE___ns1__GetMapDeviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetMapDeviceType(struct soap*, struct __ns1__GetMapDeviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetMapDeviceType(struct soap*, const struct __ns1__GetMapDeviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetMapDeviceType(struct soap*, const char*, int, const struct __ns1__GetMapDeviceType *, const char*);
SOAP_FMAC3 struct __ns1__GetMapDeviceType * SOAP_FMAC4 soap_in___ns1__GetMapDeviceType(struct soap*, const char*, struct __ns1__GetMapDeviceType *, const char*);
SOAP_FMAC1 struct __ns1__GetMapDeviceType * SOAP_FMAC2 soap_instantiate___ns1__GetMapDeviceType(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetMapDeviceType * soap_new___ns1__GetMapDeviceType(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetMapDeviceType(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetMapDeviceType * soap_new_req___ns1__GetMapDeviceType(
	struct soap *soap)
{
	struct __ns1__GetMapDeviceType *_p = ::soap_new___ns1__GetMapDeviceType(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceType(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetMapDeviceType * soap_new_set___ns1__GetMapDeviceType(
	struct soap *soap,
	_ns1__GetMapDeviceType *ns1__GetMapDeviceType)
{
	struct __ns1__GetMapDeviceType *_p = ::soap_new___ns1__GetMapDeviceType(soap);
	if (_p)
	{	::soap_default___ns1__GetMapDeviceType(soap, _p);
		_p->ns1__GetMapDeviceType = ns1__GetMapDeviceType;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetMapDeviceType(struct soap*, const struct __ns1__GetMapDeviceType *, const char*, const char*);

inline int soap_write___ns1__GetMapDeviceType(struct soap *soap, struct __ns1__GetMapDeviceType const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetMapDeviceType(soap, p), 0) || ::soap_put___ns1__GetMapDeviceType(soap, p, "-ns1:GetMapDeviceType", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetMapDeviceType(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceType const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceType(soap, p), 0) || ::soap_put___ns1__GetMapDeviceType(soap, p, "-ns1:GetMapDeviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetMapDeviceType(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceType const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetMapDeviceType(soap, p), 0) || ::soap_put___ns1__GetMapDeviceType(soap, p, "-ns1:GetMapDeviceType", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetMapDeviceType * SOAP_FMAC4 soap_get___ns1__GetMapDeviceType(struct soap*, struct __ns1__GetMapDeviceType *, const char*, const char*);

inline int soap_read___ns1__GetMapDeviceType(struct soap *soap, struct __ns1__GetMapDeviceType *p)
{
	if (p)
	{	::soap_default___ns1__GetMapDeviceType(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetMapDeviceType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetMapDeviceType(struct soap *soap, const char *URL, struct __ns1__GetMapDeviceType *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetMapDeviceType(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetMapDeviceType(struct soap *soap, struct __ns1__GetMapDeviceType *p)
{
	if (::soap_read___ns1__GetMapDeviceType(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetXbStationList_DEFINED
#define SOAP_TYPE___ns1__GetXbStationList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXbStationList(struct soap*, struct __ns1__GetXbStationList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXbStationList(struct soap*, const struct __ns1__GetXbStationList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXbStationList(struct soap*, const char*, int, const struct __ns1__GetXbStationList *, const char*);
SOAP_FMAC3 struct __ns1__GetXbStationList * SOAP_FMAC4 soap_in___ns1__GetXbStationList(struct soap*, const char*, struct __ns1__GetXbStationList *, const char*);
SOAP_FMAC1 struct __ns1__GetXbStationList * SOAP_FMAC2 soap_instantiate___ns1__GetXbStationList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXbStationList * soap_new___ns1__GetXbStationList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetXbStationList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetXbStationList * soap_new_req___ns1__GetXbStationList(
	struct soap *soap)
{
	struct __ns1__GetXbStationList *_p = ::soap_new___ns1__GetXbStationList(soap);
	if (_p)
	{	::soap_default___ns1__GetXbStationList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetXbStationList * soap_new_set___ns1__GetXbStationList(
	struct soap *soap,
	_ns1__GetXbStationList *ns1__GetXbStationList)
{
	struct __ns1__GetXbStationList *_p = ::soap_new___ns1__GetXbStationList(soap);
	if (_p)
	{	::soap_default___ns1__GetXbStationList(soap, _p);
		_p->ns1__GetXbStationList = ns1__GetXbStationList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXbStationList(struct soap*, const struct __ns1__GetXbStationList *, const char*, const char*);

inline int soap_write___ns1__GetXbStationList(struct soap *soap, struct __ns1__GetXbStationList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetXbStationList(soap, p), 0) || ::soap_put___ns1__GetXbStationList(soap, p, "-ns1:GetXbStationList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetXbStationList(struct soap *soap, const char *URL, struct __ns1__GetXbStationList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbStationList(soap, p), 0) || ::soap_put___ns1__GetXbStationList(soap, p, "-ns1:GetXbStationList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetXbStationList(struct soap *soap, const char *URL, struct __ns1__GetXbStationList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbStationList(soap, p), 0) || ::soap_put___ns1__GetXbStationList(soap, p, "-ns1:GetXbStationList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetXbStationList * SOAP_FMAC4 soap_get___ns1__GetXbStationList(struct soap*, struct __ns1__GetXbStationList *, const char*, const char*);

inline int soap_read___ns1__GetXbStationList(struct soap *soap, struct __ns1__GetXbStationList *p)
{
	if (p)
	{	::soap_default___ns1__GetXbStationList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetXbStationList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetXbStationList(struct soap *soap, const char *URL, struct __ns1__GetXbStationList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetXbStationList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetXbStationList(struct soap *soap, struct __ns1__GetXbStationList *p)
{
	if (::soap_read___ns1__GetXbStationList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetXbList_DEFINED
#define SOAP_TYPE___ns1__GetXbList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXbList(struct soap*, struct __ns1__GetXbList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXbList(struct soap*, const struct __ns1__GetXbList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXbList(struct soap*, const char*, int, const struct __ns1__GetXbList *, const char*);
SOAP_FMAC3 struct __ns1__GetXbList * SOAP_FMAC4 soap_in___ns1__GetXbList(struct soap*, const char*, struct __ns1__GetXbList *, const char*);
SOAP_FMAC1 struct __ns1__GetXbList * SOAP_FMAC2 soap_instantiate___ns1__GetXbList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXbList * soap_new___ns1__GetXbList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetXbList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetXbList * soap_new_req___ns1__GetXbList(
	struct soap *soap)
{
	struct __ns1__GetXbList *_p = ::soap_new___ns1__GetXbList(soap);
	if (_p)
	{	::soap_default___ns1__GetXbList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetXbList * soap_new_set___ns1__GetXbList(
	struct soap *soap,
	_ns1__GetXbList *ns1__GetXbList)
{
	struct __ns1__GetXbList *_p = ::soap_new___ns1__GetXbList(soap);
	if (_p)
	{	::soap_default___ns1__GetXbList(soap, _p);
		_p->ns1__GetXbList = ns1__GetXbList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXbList(struct soap*, const struct __ns1__GetXbList *, const char*, const char*);

inline int soap_write___ns1__GetXbList(struct soap *soap, struct __ns1__GetXbList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetXbList(soap, p), 0) || ::soap_put___ns1__GetXbList(soap, p, "-ns1:GetXbList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetXbList(struct soap *soap, const char *URL, struct __ns1__GetXbList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbList(soap, p), 0) || ::soap_put___ns1__GetXbList(soap, p, "-ns1:GetXbList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetXbList(struct soap *soap, const char *URL, struct __ns1__GetXbList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXbList(soap, p), 0) || ::soap_put___ns1__GetXbList(soap, p, "-ns1:GetXbList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetXbList * SOAP_FMAC4 soap_get___ns1__GetXbList(struct soap*, struct __ns1__GetXbList *, const char*, const char*);

inline int soap_read___ns1__GetXbList(struct soap *soap, struct __ns1__GetXbList *p)
{
	if (p)
	{	::soap_default___ns1__GetXbList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetXbList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetXbList(struct soap *soap, const char *URL, struct __ns1__GetXbList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetXbList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetXbList(struct soap *soap, struct __ns1__GetXbList *p)
{
	if (::soap_read___ns1__GetXbList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetFileSize_DEFINED
#define SOAP_TYPE___ns1__GetFileSize_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFileSize(struct soap*, struct __ns1__GetFileSize *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFileSize(struct soap*, const struct __ns1__GetFileSize *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFileSize(struct soap*, const char*, int, const struct __ns1__GetFileSize *, const char*);
SOAP_FMAC3 struct __ns1__GetFileSize * SOAP_FMAC4 soap_in___ns1__GetFileSize(struct soap*, const char*, struct __ns1__GetFileSize *, const char*);
SOAP_FMAC1 struct __ns1__GetFileSize * SOAP_FMAC2 soap_instantiate___ns1__GetFileSize(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFileSize * soap_new___ns1__GetFileSize(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetFileSize(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetFileSize * soap_new_req___ns1__GetFileSize(
	struct soap *soap)
{
	struct __ns1__GetFileSize *_p = ::soap_new___ns1__GetFileSize(soap);
	if (_p)
	{	::soap_default___ns1__GetFileSize(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetFileSize * soap_new_set___ns1__GetFileSize(
	struct soap *soap,
	_ns1__GetFileSize *ns1__GetFileSize)
{
	struct __ns1__GetFileSize *_p = ::soap_new___ns1__GetFileSize(soap);
	if (_p)
	{	::soap_default___ns1__GetFileSize(soap, _p);
		_p->ns1__GetFileSize = ns1__GetFileSize;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFileSize(struct soap*, const struct __ns1__GetFileSize *, const char*, const char*);

inline int soap_write___ns1__GetFileSize(struct soap *soap, struct __ns1__GetFileSize const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetFileSize(soap, p), 0) || ::soap_put___ns1__GetFileSize(soap, p, "-ns1:GetFileSize", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetFileSize(struct soap *soap, const char *URL, struct __ns1__GetFileSize const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileSize(soap, p), 0) || ::soap_put___ns1__GetFileSize(soap, p, "-ns1:GetFileSize", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetFileSize(struct soap *soap, const char *URL, struct __ns1__GetFileSize const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetFileSize(soap, p), 0) || ::soap_put___ns1__GetFileSize(soap, p, "-ns1:GetFileSize", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetFileSize * SOAP_FMAC4 soap_get___ns1__GetFileSize(struct soap*, struct __ns1__GetFileSize *, const char*, const char*);

inline int soap_read___ns1__GetFileSize(struct soap *soap, struct __ns1__GetFileSize *p)
{
	if (p)
	{	::soap_default___ns1__GetFileSize(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetFileSize(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetFileSize(struct soap *soap, const char *URL, struct __ns1__GetFileSize *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetFileSize(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetFileSize(struct soap *soap, struct __ns1__GetFileSize *p)
{
	if (::soap_read___ns1__GetFileSize(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitPersonInfo_DEFINED
#define SOAP_TYPE___ns1__GetUnitPersonInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitPersonInfo(struct soap*, struct __ns1__GetUnitPersonInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitPersonInfo(struct soap*, const struct __ns1__GetUnitPersonInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitPersonInfo(struct soap*, const char*, int, const struct __ns1__GetUnitPersonInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitPersonInfo * SOAP_FMAC4 soap_in___ns1__GetUnitPersonInfo(struct soap*, const char*, struct __ns1__GetUnitPersonInfo *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitPersonInfo * SOAP_FMAC2 soap_instantiate___ns1__GetUnitPersonInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitPersonInfo * soap_new___ns1__GetUnitPersonInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitPersonInfo(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitPersonInfo * soap_new_req___ns1__GetUnitPersonInfo(
	struct soap *soap)
{
	struct __ns1__GetUnitPersonInfo *_p = ::soap_new___ns1__GetUnitPersonInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitPersonInfo(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitPersonInfo * soap_new_set___ns1__GetUnitPersonInfo(
	struct soap *soap,
	_ns1__GetUnitPersonInfo *ns1__GetUnitPersonInfo)
{
	struct __ns1__GetUnitPersonInfo *_p = ::soap_new___ns1__GetUnitPersonInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitPersonInfo(soap, _p);
		_p->ns1__GetUnitPersonInfo = ns1__GetUnitPersonInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitPersonInfo(struct soap*, const struct __ns1__GetUnitPersonInfo *, const char*, const char*);

inline int soap_write___ns1__GetUnitPersonInfo(struct soap *soap, struct __ns1__GetUnitPersonInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitPersonInfo(soap, p), 0) || ::soap_put___ns1__GetUnitPersonInfo(soap, p, "-ns1:GetUnitPersonInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitPersonInfo(struct soap *soap, const char *URL, struct __ns1__GetUnitPersonInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitPersonInfo(soap, p), 0) || ::soap_put___ns1__GetUnitPersonInfo(soap, p, "-ns1:GetUnitPersonInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitPersonInfo(struct soap *soap, const char *URL, struct __ns1__GetUnitPersonInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitPersonInfo(soap, p), 0) || ::soap_put___ns1__GetUnitPersonInfo(soap, p, "-ns1:GetUnitPersonInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitPersonInfo * SOAP_FMAC4 soap_get___ns1__GetUnitPersonInfo(struct soap*, struct __ns1__GetUnitPersonInfo *, const char*, const char*);

inline int soap_read___ns1__GetUnitPersonInfo(struct soap *soap, struct __ns1__GetUnitPersonInfo *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitPersonInfo(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitPersonInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitPersonInfo(struct soap *soap, const char *URL, struct __ns1__GetUnitPersonInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitPersonInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitPersonInfo(struct soap *soap, struct __ns1__GetUnitPersonInfo *p)
{
	if (::soap_read___ns1__GetUnitPersonInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitStruct_DEFINED
#define SOAP_TYPE___ns1__GetUnitStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitStruct(struct soap*, struct __ns1__GetUnitStruct *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitStruct(struct soap*, const struct __ns1__GetUnitStruct *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitStruct(struct soap*, const char*, int, const struct __ns1__GetUnitStruct *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitStruct * SOAP_FMAC4 soap_in___ns1__GetUnitStruct(struct soap*, const char*, struct __ns1__GetUnitStruct *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitStruct * SOAP_FMAC2 soap_instantiate___ns1__GetUnitStruct(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitStruct * soap_new___ns1__GetUnitStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitStruct(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitStruct * soap_new_req___ns1__GetUnitStruct(
	struct soap *soap)
{
	struct __ns1__GetUnitStruct *_p = ::soap_new___ns1__GetUnitStruct(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStruct(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitStruct * soap_new_set___ns1__GetUnitStruct(
	struct soap *soap,
	_ns1__GetUnitStruct *ns1__GetUnitStruct)
{
	struct __ns1__GetUnitStruct *_p = ::soap_new___ns1__GetUnitStruct(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStruct(soap, _p);
		_p->ns1__GetUnitStruct = ns1__GetUnitStruct;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitStruct(struct soap*, const struct __ns1__GetUnitStruct *, const char*, const char*);

inline int soap_write___ns1__GetUnitStruct(struct soap *soap, struct __ns1__GetUnitStruct const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitStruct(soap, p), 0) || ::soap_put___ns1__GetUnitStruct(soap, p, "-ns1:GetUnitStruct", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitStruct(struct soap *soap, const char *URL, struct __ns1__GetUnitStruct const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStruct(soap, p), 0) || ::soap_put___ns1__GetUnitStruct(soap, p, "-ns1:GetUnitStruct", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitStruct(struct soap *soap, const char *URL, struct __ns1__GetUnitStruct const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStruct(soap, p), 0) || ::soap_put___ns1__GetUnitStruct(soap, p, "-ns1:GetUnitStruct", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitStruct * SOAP_FMAC4 soap_get___ns1__GetUnitStruct(struct soap*, struct __ns1__GetUnitStruct *, const char*, const char*);

inline int soap_read___ns1__GetUnitStruct(struct soap *soap, struct __ns1__GetUnitStruct *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitStruct(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitStruct(struct soap *soap, const char *URL, struct __ns1__GetUnitStruct *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitStruct(struct soap *soap, struct __ns1__GetUnitStruct *p)
{
	if (::soap_read___ns1__GetUnitStruct(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetUnitStation_DEFINED
#define SOAP_TYPE___ns1__GetUnitStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUnitStation(struct soap*, struct __ns1__GetUnitStation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUnitStation(struct soap*, const struct __ns1__GetUnitStation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUnitStation(struct soap*, const char*, int, const struct __ns1__GetUnitStation *, const char*);
SOAP_FMAC3 struct __ns1__GetUnitStation * SOAP_FMAC4 soap_in___ns1__GetUnitStation(struct soap*, const char*, struct __ns1__GetUnitStation *, const char*);
SOAP_FMAC1 struct __ns1__GetUnitStation * SOAP_FMAC2 soap_instantiate___ns1__GetUnitStation(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUnitStation * soap_new___ns1__GetUnitStation(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetUnitStation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetUnitStation * soap_new_req___ns1__GetUnitStation(
	struct soap *soap)
{
	struct __ns1__GetUnitStation *_p = ::soap_new___ns1__GetUnitStation(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStation(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetUnitStation * soap_new_set___ns1__GetUnitStation(
	struct soap *soap,
	_ns1__GetUnitStation *ns1__GetUnitStation)
{
	struct __ns1__GetUnitStation *_p = ::soap_new___ns1__GetUnitStation(soap);
	if (_p)
	{	::soap_default___ns1__GetUnitStation(soap, _p);
		_p->ns1__GetUnitStation = ns1__GetUnitStation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUnitStation(struct soap*, const struct __ns1__GetUnitStation *, const char*, const char*);

inline int soap_write___ns1__GetUnitStation(struct soap *soap, struct __ns1__GetUnitStation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetUnitStation(soap, p), 0) || ::soap_put___ns1__GetUnitStation(soap, p, "-ns1:GetUnitStation", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetUnitStation(struct soap *soap, const char *URL, struct __ns1__GetUnitStation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStation(soap, p), 0) || ::soap_put___ns1__GetUnitStation(soap, p, "-ns1:GetUnitStation", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetUnitStation(struct soap *soap, const char *URL, struct __ns1__GetUnitStation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetUnitStation(soap, p), 0) || ::soap_put___ns1__GetUnitStation(soap, p, "-ns1:GetUnitStation", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetUnitStation * SOAP_FMAC4 soap_get___ns1__GetUnitStation(struct soap*, struct __ns1__GetUnitStation *, const char*, const char*);

inline int soap_read___ns1__GetUnitStation(struct soap *soap, struct __ns1__GetUnitStation *p)
{
	if (p)
	{	::soap_default___ns1__GetUnitStation(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetUnitStation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetUnitStation(struct soap *soap, const char *URL, struct __ns1__GetUnitStation *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetUnitStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetUnitStation(struct soap *soap, struct __ns1__GetUnitStation *p)
{
	if (::soap_read___ns1__GetUnitStation(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDwList_DEFINED
#define SOAP_TYPE___ns1__GetDwList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDwList(struct soap*, struct __ns1__GetDwList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDwList(struct soap*, const struct __ns1__GetDwList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDwList(struct soap*, const char*, int, const struct __ns1__GetDwList *, const char*);
SOAP_FMAC3 struct __ns1__GetDwList * SOAP_FMAC4 soap_in___ns1__GetDwList(struct soap*, const char*, struct __ns1__GetDwList *, const char*);
SOAP_FMAC1 struct __ns1__GetDwList * SOAP_FMAC2 soap_instantiate___ns1__GetDwList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDwList * soap_new___ns1__GetDwList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDwList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDwList * soap_new_req___ns1__GetDwList(
	struct soap *soap)
{
	struct __ns1__GetDwList *_p = ::soap_new___ns1__GetDwList(soap);
	if (_p)
	{	::soap_default___ns1__GetDwList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDwList * soap_new_set___ns1__GetDwList(
	struct soap *soap,
	_ns1__GetDwList *ns1__GetDwList)
{
	struct __ns1__GetDwList *_p = ::soap_new___ns1__GetDwList(soap);
	if (_p)
	{	::soap_default___ns1__GetDwList(soap, _p);
		_p->ns1__GetDwList = ns1__GetDwList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDwList(struct soap*, const struct __ns1__GetDwList *, const char*, const char*);

inline int soap_write___ns1__GetDwList(struct soap *soap, struct __ns1__GetDwList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDwList(soap, p), 0) || ::soap_put___ns1__GetDwList(soap, p, "-ns1:GetDwList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDwList(struct soap *soap, const char *URL, struct __ns1__GetDwList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwList(soap, p), 0) || ::soap_put___ns1__GetDwList(soap, p, "-ns1:GetDwList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDwList(struct soap *soap, const char *URL, struct __ns1__GetDwList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwList(soap, p), 0) || ::soap_put___ns1__GetDwList(soap, p, "-ns1:GetDwList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDwList * SOAP_FMAC4 soap_get___ns1__GetDwList(struct soap*, struct __ns1__GetDwList *, const char*, const char*);

inline int soap_read___ns1__GetDwList(struct soap *soap, struct __ns1__GetDwList *p)
{
	if (p)
	{	::soap_default___ns1__GetDwList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDwList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDwList(struct soap *soap, const char *URL, struct __ns1__GetDwList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDwList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDwList(struct soap *soap, struct __ns1__GetDwList *p)
{
	if (::soap_read___ns1__GetDwList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetOpenFireInfo_DEFINED
#define SOAP_TYPE___ns1__GetOpenFireInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetOpenFireInfo(struct soap*, struct __ns1__GetOpenFireInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetOpenFireInfo(struct soap*, const struct __ns1__GetOpenFireInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetOpenFireInfo(struct soap*, const char*, int, const struct __ns1__GetOpenFireInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetOpenFireInfo * SOAP_FMAC4 soap_in___ns1__GetOpenFireInfo(struct soap*, const char*, struct __ns1__GetOpenFireInfo *, const char*);
SOAP_FMAC1 struct __ns1__GetOpenFireInfo * SOAP_FMAC2 soap_instantiate___ns1__GetOpenFireInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetOpenFireInfo * soap_new___ns1__GetOpenFireInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetOpenFireInfo(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetOpenFireInfo * soap_new_req___ns1__GetOpenFireInfo(
	struct soap *soap)
{
	struct __ns1__GetOpenFireInfo *_p = ::soap_new___ns1__GetOpenFireInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetOpenFireInfo(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetOpenFireInfo * soap_new_set___ns1__GetOpenFireInfo(
	struct soap *soap,
	_ns1__GetOpenFireInfo *ns1__GetOpenFireInfo)
{
	struct __ns1__GetOpenFireInfo *_p = ::soap_new___ns1__GetOpenFireInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetOpenFireInfo(soap, _p);
		_p->ns1__GetOpenFireInfo = ns1__GetOpenFireInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetOpenFireInfo(struct soap*, const struct __ns1__GetOpenFireInfo *, const char*, const char*);

inline int soap_write___ns1__GetOpenFireInfo(struct soap *soap, struct __ns1__GetOpenFireInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetOpenFireInfo(soap, p), 0) || ::soap_put___ns1__GetOpenFireInfo(soap, p, "-ns1:GetOpenFireInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetOpenFireInfo(struct soap *soap, const char *URL, struct __ns1__GetOpenFireInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOpenFireInfo(soap, p), 0) || ::soap_put___ns1__GetOpenFireInfo(soap, p, "-ns1:GetOpenFireInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetOpenFireInfo(struct soap *soap, const char *URL, struct __ns1__GetOpenFireInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOpenFireInfo(soap, p), 0) || ::soap_put___ns1__GetOpenFireInfo(soap, p, "-ns1:GetOpenFireInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetOpenFireInfo * SOAP_FMAC4 soap_get___ns1__GetOpenFireInfo(struct soap*, struct __ns1__GetOpenFireInfo *, const char*, const char*);

inline int soap_read___ns1__GetOpenFireInfo(struct soap *soap, struct __ns1__GetOpenFireInfo *p)
{
	if (p)
	{	::soap_default___ns1__GetOpenFireInfo(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetOpenFireInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetOpenFireInfo(struct soap *soap, const char *URL, struct __ns1__GetOpenFireInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetOpenFireInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetOpenFireInfo(struct soap *soap, struct __ns1__GetOpenFireInfo *p)
{
	if (::soap_read___ns1__GetOpenFireInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__MobDownLoadData_DEFINED
#define SOAP_TYPE___ns1__MobDownLoadData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__MobDownLoadData(struct soap*, struct __ns1__MobDownLoadData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__MobDownLoadData(struct soap*, const struct __ns1__MobDownLoadData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__MobDownLoadData(struct soap*, const char*, int, const struct __ns1__MobDownLoadData *, const char*);
SOAP_FMAC3 struct __ns1__MobDownLoadData * SOAP_FMAC4 soap_in___ns1__MobDownLoadData(struct soap*, const char*, struct __ns1__MobDownLoadData *, const char*);
SOAP_FMAC1 struct __ns1__MobDownLoadData * SOAP_FMAC2 soap_instantiate___ns1__MobDownLoadData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__MobDownLoadData * soap_new___ns1__MobDownLoadData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__MobDownLoadData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__MobDownLoadData * soap_new_req___ns1__MobDownLoadData(
	struct soap *soap)
{
	struct __ns1__MobDownLoadData *_p = ::soap_new___ns1__MobDownLoadData(soap);
	if (_p)
	{	::soap_default___ns1__MobDownLoadData(soap, _p);
	}
	return _p;
}

inline struct __ns1__MobDownLoadData * soap_new_set___ns1__MobDownLoadData(
	struct soap *soap,
	_ns1__MobDownLoadData *ns1__MobDownLoadData)
{
	struct __ns1__MobDownLoadData *_p = ::soap_new___ns1__MobDownLoadData(soap);
	if (_p)
	{	::soap_default___ns1__MobDownLoadData(soap, _p);
		_p->ns1__MobDownLoadData = ns1__MobDownLoadData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__MobDownLoadData(struct soap*, const struct __ns1__MobDownLoadData *, const char*, const char*);

inline int soap_write___ns1__MobDownLoadData(struct soap *soap, struct __ns1__MobDownLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__MobDownLoadData(soap, p), 0) || ::soap_put___ns1__MobDownLoadData(soap, p, "-ns1:MobDownLoadData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__MobDownLoadData(struct soap *soap, const char *URL, struct __ns1__MobDownLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MobDownLoadData(soap, p), 0) || ::soap_put___ns1__MobDownLoadData(soap, p, "-ns1:MobDownLoadData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__MobDownLoadData(struct soap *soap, const char *URL, struct __ns1__MobDownLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__MobDownLoadData(soap, p), 0) || ::soap_put___ns1__MobDownLoadData(soap, p, "-ns1:MobDownLoadData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__MobDownLoadData * SOAP_FMAC4 soap_get___ns1__MobDownLoadData(struct soap*, struct __ns1__MobDownLoadData *, const char*, const char*);

inline int soap_read___ns1__MobDownLoadData(struct soap *soap, struct __ns1__MobDownLoadData *p)
{
	if (p)
	{	::soap_default___ns1__MobDownLoadData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__MobDownLoadData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__MobDownLoadData(struct soap *soap, const char *URL, struct __ns1__MobDownLoadData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__MobDownLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__MobDownLoadData(struct soap *soap, struct __ns1__MobDownLoadData *p)
{
	if (::soap_read___ns1__MobDownLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownLoadMobGPSData_DEFINED
#define SOAP_TYPE___ns1__DownLoadMobGPSData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownLoadMobGPSData(struct soap*, struct __ns1__DownLoadMobGPSData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownLoadMobGPSData(struct soap*, const struct __ns1__DownLoadMobGPSData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownLoadMobGPSData(struct soap*, const char*, int, const struct __ns1__DownLoadMobGPSData *, const char*);
SOAP_FMAC3 struct __ns1__DownLoadMobGPSData * SOAP_FMAC4 soap_in___ns1__DownLoadMobGPSData(struct soap*, const char*, struct __ns1__DownLoadMobGPSData *, const char*);
SOAP_FMAC1 struct __ns1__DownLoadMobGPSData * SOAP_FMAC2 soap_instantiate___ns1__DownLoadMobGPSData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownLoadMobGPSData * soap_new___ns1__DownLoadMobGPSData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownLoadMobGPSData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownLoadMobGPSData * soap_new_req___ns1__DownLoadMobGPSData(
	struct soap *soap)
{
	struct __ns1__DownLoadMobGPSData *_p = ::soap_new___ns1__DownLoadMobGPSData(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadMobGPSData(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownLoadMobGPSData * soap_new_set___ns1__DownLoadMobGPSData(
	struct soap *soap,
	_ns1__DownLoadMobGPSData *ns1__DownLoadMobGPSData)
{
	struct __ns1__DownLoadMobGPSData *_p = ::soap_new___ns1__DownLoadMobGPSData(soap);
	if (_p)
	{	::soap_default___ns1__DownLoadMobGPSData(soap, _p);
		_p->ns1__DownLoadMobGPSData = ns1__DownLoadMobGPSData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownLoadMobGPSData(struct soap*, const struct __ns1__DownLoadMobGPSData *, const char*, const char*);

inline int soap_write___ns1__DownLoadMobGPSData(struct soap *soap, struct __ns1__DownLoadMobGPSData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownLoadMobGPSData(soap, p), 0) || ::soap_put___ns1__DownLoadMobGPSData(soap, p, "-ns1:DownLoadMobGPSData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownLoadMobGPSData(struct soap *soap, const char *URL, struct __ns1__DownLoadMobGPSData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadMobGPSData(soap, p), 0) || ::soap_put___ns1__DownLoadMobGPSData(soap, p, "-ns1:DownLoadMobGPSData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownLoadMobGPSData(struct soap *soap, const char *URL, struct __ns1__DownLoadMobGPSData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownLoadMobGPSData(soap, p), 0) || ::soap_put___ns1__DownLoadMobGPSData(soap, p, "-ns1:DownLoadMobGPSData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownLoadMobGPSData * SOAP_FMAC4 soap_get___ns1__DownLoadMobGPSData(struct soap*, struct __ns1__DownLoadMobGPSData *, const char*, const char*);

inline int soap_read___ns1__DownLoadMobGPSData(struct soap *soap, struct __ns1__DownLoadMobGPSData *p)
{
	if (p)
	{	::soap_default___ns1__DownLoadMobGPSData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownLoadMobGPSData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownLoadMobGPSData(struct soap *soap, const char *URL, struct __ns1__DownLoadMobGPSData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownLoadMobGPSData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownLoadMobGPSData(struct soap *soap, struct __ns1__DownLoadMobGPSData *p)
{
	if (::soap_read___ns1__DownLoadMobGPSData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDcsData_DEFINED
#define SOAP_TYPE___ns1__GetDcsData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDcsData(struct soap*, struct __ns1__GetDcsData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDcsData(struct soap*, const struct __ns1__GetDcsData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDcsData(struct soap*, const char*, int, const struct __ns1__GetDcsData *, const char*);
SOAP_FMAC3 struct __ns1__GetDcsData * SOAP_FMAC4 soap_in___ns1__GetDcsData(struct soap*, const char*, struct __ns1__GetDcsData *, const char*);
SOAP_FMAC1 struct __ns1__GetDcsData * SOAP_FMAC2 soap_instantiate___ns1__GetDcsData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDcsData * soap_new___ns1__GetDcsData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDcsData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDcsData * soap_new_req___ns1__GetDcsData(
	struct soap *soap)
{
	struct __ns1__GetDcsData *_p = ::soap_new___ns1__GetDcsData(soap);
	if (_p)
	{	::soap_default___ns1__GetDcsData(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDcsData * soap_new_set___ns1__GetDcsData(
	struct soap *soap,
	_ns1__GetDcsData *ns1__GetDcsData)
{
	struct __ns1__GetDcsData *_p = ::soap_new___ns1__GetDcsData(soap);
	if (_p)
	{	::soap_default___ns1__GetDcsData(soap, _p);
		_p->ns1__GetDcsData = ns1__GetDcsData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDcsData(struct soap*, const struct __ns1__GetDcsData *, const char*, const char*);

inline int soap_write___ns1__GetDcsData(struct soap *soap, struct __ns1__GetDcsData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDcsData(soap, p), 0) || ::soap_put___ns1__GetDcsData(soap, p, "-ns1:GetDcsData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDcsData(struct soap *soap, const char *URL, struct __ns1__GetDcsData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDcsData(soap, p), 0) || ::soap_put___ns1__GetDcsData(soap, p, "-ns1:GetDcsData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDcsData(struct soap *soap, const char *URL, struct __ns1__GetDcsData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDcsData(soap, p), 0) || ::soap_put___ns1__GetDcsData(soap, p, "-ns1:GetDcsData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDcsData * SOAP_FMAC4 soap_get___ns1__GetDcsData(struct soap*, struct __ns1__GetDcsData *, const char*, const char*);

inline int soap_read___ns1__GetDcsData(struct soap *soap, struct __ns1__GetDcsData *p)
{
	if (p)
	{	::soap_default___ns1__GetDcsData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDcsData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDcsData(struct soap *soap, const char *URL, struct __ns1__GetDcsData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDcsData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDcsData(struct soap *soap, struct __ns1__GetDcsData *p)
{
	if (::soap_read___ns1__GetDcsData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetBgImg_DEFINED
#define SOAP_TYPE___ns1__GetBgImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetBgImg(struct soap*, struct __ns1__GetBgImg *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetBgImg(struct soap*, const struct __ns1__GetBgImg *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetBgImg(struct soap*, const char*, int, const struct __ns1__GetBgImg *, const char*);
SOAP_FMAC3 struct __ns1__GetBgImg * SOAP_FMAC4 soap_in___ns1__GetBgImg(struct soap*, const char*, struct __ns1__GetBgImg *, const char*);
SOAP_FMAC1 struct __ns1__GetBgImg * SOAP_FMAC2 soap_instantiate___ns1__GetBgImg(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetBgImg * soap_new___ns1__GetBgImg(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetBgImg(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetBgImg * soap_new_req___ns1__GetBgImg(
	struct soap *soap)
{
	struct __ns1__GetBgImg *_p = ::soap_new___ns1__GetBgImg(soap);
	if (_p)
	{	::soap_default___ns1__GetBgImg(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetBgImg * soap_new_set___ns1__GetBgImg(
	struct soap *soap,
	_ns1__GetBgImg *ns1__GetBgImg)
{
	struct __ns1__GetBgImg *_p = ::soap_new___ns1__GetBgImg(soap);
	if (_p)
	{	::soap_default___ns1__GetBgImg(soap, _p);
		_p->ns1__GetBgImg = ns1__GetBgImg;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetBgImg(struct soap*, const struct __ns1__GetBgImg *, const char*, const char*);

inline int soap_write___ns1__GetBgImg(struct soap *soap, struct __ns1__GetBgImg const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetBgImg(soap, p), 0) || ::soap_put___ns1__GetBgImg(soap, p, "-ns1:GetBgImg", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetBgImg(struct soap *soap, const char *URL, struct __ns1__GetBgImg const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetBgImg(soap, p), 0) || ::soap_put___ns1__GetBgImg(soap, p, "-ns1:GetBgImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetBgImg(struct soap *soap, const char *URL, struct __ns1__GetBgImg const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetBgImg(soap, p), 0) || ::soap_put___ns1__GetBgImg(soap, p, "-ns1:GetBgImg", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetBgImg * SOAP_FMAC4 soap_get___ns1__GetBgImg(struct soap*, struct __ns1__GetBgImg *, const char*, const char*);

inline int soap_read___ns1__GetBgImg(struct soap *soap, struct __ns1__GetBgImg *p)
{
	if (p)
	{	::soap_default___ns1__GetBgImg(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetBgImg(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetBgImg(struct soap *soap, const char *URL, struct __ns1__GetBgImg *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetBgImg(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetBgImg(struct soap *soap, struct __ns1__GetBgImg *p)
{
	if (::soap_read___ns1__GetBgImg(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDevPic_DEFINED
#define SOAP_TYPE___ns1__GetDevPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDevPic(struct soap*, struct __ns1__GetDevPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDevPic(struct soap*, const struct __ns1__GetDevPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDevPic(struct soap*, const char*, int, const struct __ns1__GetDevPic *, const char*);
SOAP_FMAC3 struct __ns1__GetDevPic * SOAP_FMAC4 soap_in___ns1__GetDevPic(struct soap*, const char*, struct __ns1__GetDevPic *, const char*);
SOAP_FMAC1 struct __ns1__GetDevPic * SOAP_FMAC2 soap_instantiate___ns1__GetDevPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDevPic * soap_new___ns1__GetDevPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDevPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDevPic * soap_new_req___ns1__GetDevPic(
	struct soap *soap)
{
	struct __ns1__GetDevPic *_p = ::soap_new___ns1__GetDevPic(soap);
	if (_p)
	{	::soap_default___ns1__GetDevPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDevPic * soap_new_set___ns1__GetDevPic(
	struct soap *soap,
	_ns1__GetDevPic *ns1__GetDevPic)
{
	struct __ns1__GetDevPic *_p = ::soap_new___ns1__GetDevPic(soap);
	if (_p)
	{	::soap_default___ns1__GetDevPic(soap, _p);
		_p->ns1__GetDevPic = ns1__GetDevPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDevPic(struct soap*, const struct __ns1__GetDevPic *, const char*, const char*);

inline int soap_write___ns1__GetDevPic(struct soap *soap, struct __ns1__GetDevPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDevPic(soap, p), 0) || ::soap_put___ns1__GetDevPic(soap, p, "-ns1:GetDevPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDevPic(struct soap *soap, const char *URL, struct __ns1__GetDevPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevPic(soap, p), 0) || ::soap_put___ns1__GetDevPic(soap, p, "-ns1:GetDevPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDevPic(struct soap *soap, const char *URL, struct __ns1__GetDevPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevPic(soap, p), 0) || ::soap_put___ns1__GetDevPic(soap, p, "-ns1:GetDevPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDevPic * SOAP_FMAC4 soap_get___ns1__GetDevPic(struct soap*, struct __ns1__GetDevPic *, const char*, const char*);

inline int soap_read___ns1__GetDevPic(struct soap *soap, struct __ns1__GetDevPic *p)
{
	if (p)
	{	::soap_default___ns1__GetDevPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDevPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDevPic(struct soap *soap, const char *URL, struct __ns1__GetDevPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDevPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDevPic(struct soap *soap, struct __ns1__GetDevPic *p)
{
	if (::soap_read___ns1__GetDevPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetJxPic_DEFINED
#define SOAP_TYPE___ns1__GetJxPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJxPic(struct soap*, struct __ns1__GetJxPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJxPic(struct soap*, const struct __ns1__GetJxPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJxPic(struct soap*, const char*, int, const struct __ns1__GetJxPic *, const char*);
SOAP_FMAC3 struct __ns1__GetJxPic * SOAP_FMAC4 soap_in___ns1__GetJxPic(struct soap*, const char*, struct __ns1__GetJxPic *, const char*);
SOAP_FMAC1 struct __ns1__GetJxPic * SOAP_FMAC2 soap_instantiate___ns1__GetJxPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJxPic * soap_new___ns1__GetJxPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetJxPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetJxPic * soap_new_req___ns1__GetJxPic(
	struct soap *soap)
{
	struct __ns1__GetJxPic *_p = ::soap_new___ns1__GetJxPic(soap);
	if (_p)
	{	::soap_default___ns1__GetJxPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetJxPic * soap_new_set___ns1__GetJxPic(
	struct soap *soap,
	_ns1__GetJxPic *ns1__GetJxPic)
{
	struct __ns1__GetJxPic *_p = ::soap_new___ns1__GetJxPic(soap);
	if (_p)
	{	::soap_default___ns1__GetJxPic(soap, _p);
		_p->ns1__GetJxPic = ns1__GetJxPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJxPic(struct soap*, const struct __ns1__GetJxPic *, const char*, const char*);

inline int soap_write___ns1__GetJxPic(struct soap *soap, struct __ns1__GetJxPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetJxPic(soap, p), 0) || ::soap_put___ns1__GetJxPic(soap, p, "-ns1:GetJxPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetJxPic(struct soap *soap, const char *URL, struct __ns1__GetJxPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxPic(soap, p), 0) || ::soap_put___ns1__GetJxPic(soap, p, "-ns1:GetJxPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetJxPic(struct soap *soap, const char *URL, struct __ns1__GetJxPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxPic(soap, p), 0) || ::soap_put___ns1__GetJxPic(soap, p, "-ns1:GetJxPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetJxPic * SOAP_FMAC4 soap_get___ns1__GetJxPic(struct soap*, struct __ns1__GetJxPic *, const char*, const char*);

inline int soap_read___ns1__GetJxPic(struct soap *soap, struct __ns1__GetJxPic *p)
{
	if (p)
	{	::soap_default___ns1__GetJxPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetJxPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetJxPic(struct soap *soap, const char *URL, struct __ns1__GetJxPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetJxPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetJxPic(struct soap *soap, struct __ns1__GetJxPic *p)
{
	if (::soap_read___ns1__GetJxPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetStationJxData_DEFINED
#define SOAP_TYPE___ns1__GetStationJxData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetStationJxData(struct soap*, struct __ns1__GetStationJxData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetStationJxData(struct soap*, const struct __ns1__GetStationJxData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetStationJxData(struct soap*, const char*, int, const struct __ns1__GetStationJxData *, const char*);
SOAP_FMAC3 struct __ns1__GetStationJxData * SOAP_FMAC4 soap_in___ns1__GetStationJxData(struct soap*, const char*, struct __ns1__GetStationJxData *, const char*);
SOAP_FMAC1 struct __ns1__GetStationJxData * SOAP_FMAC2 soap_instantiate___ns1__GetStationJxData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetStationJxData * soap_new___ns1__GetStationJxData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetStationJxData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetStationJxData * soap_new_req___ns1__GetStationJxData(
	struct soap *soap)
{
	struct __ns1__GetStationJxData *_p = ::soap_new___ns1__GetStationJxData(soap);
	if (_p)
	{	::soap_default___ns1__GetStationJxData(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetStationJxData * soap_new_set___ns1__GetStationJxData(
	struct soap *soap,
	_ns1__GetStationJxData *ns1__GetStationJxData)
{
	struct __ns1__GetStationJxData *_p = ::soap_new___ns1__GetStationJxData(soap);
	if (_p)
	{	::soap_default___ns1__GetStationJxData(soap, _p);
		_p->ns1__GetStationJxData = ns1__GetStationJxData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetStationJxData(struct soap*, const struct __ns1__GetStationJxData *, const char*, const char*);

inline int soap_write___ns1__GetStationJxData(struct soap *soap, struct __ns1__GetStationJxData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetStationJxData(soap, p), 0) || ::soap_put___ns1__GetStationJxData(soap, p, "-ns1:GetStationJxData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetStationJxData(struct soap *soap, const char *URL, struct __ns1__GetStationJxData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetStationJxData(soap, p), 0) || ::soap_put___ns1__GetStationJxData(soap, p, "-ns1:GetStationJxData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetStationJxData(struct soap *soap, const char *URL, struct __ns1__GetStationJxData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetStationJxData(soap, p), 0) || ::soap_put___ns1__GetStationJxData(soap, p, "-ns1:GetStationJxData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetStationJxData * SOAP_FMAC4 soap_get___ns1__GetStationJxData(struct soap*, struct __ns1__GetStationJxData *, const char*, const char*);

inline int soap_read___ns1__GetStationJxData(struct soap *soap, struct __ns1__GetStationJxData *p)
{
	if (p)
	{	::soap_default___ns1__GetStationJxData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetStationJxData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetStationJxData(struct soap *soap, const char *URL, struct __ns1__GetStationJxData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetStationJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetStationJxData(struct soap *soap, struct __ns1__GetStationJxData *p)
{
	if (::soap_read___ns1__GetStationJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetJxData_DEFINED
#define SOAP_TYPE___ns1__GetJxData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetJxData(struct soap*, struct __ns1__GetJxData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetJxData(struct soap*, const struct __ns1__GetJxData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetJxData(struct soap*, const char*, int, const struct __ns1__GetJxData *, const char*);
SOAP_FMAC3 struct __ns1__GetJxData * SOAP_FMAC4 soap_in___ns1__GetJxData(struct soap*, const char*, struct __ns1__GetJxData *, const char*);
SOAP_FMAC1 struct __ns1__GetJxData * SOAP_FMAC2 soap_instantiate___ns1__GetJxData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetJxData * soap_new___ns1__GetJxData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetJxData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetJxData * soap_new_req___ns1__GetJxData(
	struct soap *soap)
{
	struct __ns1__GetJxData *_p = ::soap_new___ns1__GetJxData(soap);
	if (_p)
	{	::soap_default___ns1__GetJxData(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetJxData * soap_new_set___ns1__GetJxData(
	struct soap *soap,
	_ns1__GetJxData *ns1__GetJxData)
{
	struct __ns1__GetJxData *_p = ::soap_new___ns1__GetJxData(soap);
	if (_p)
	{	::soap_default___ns1__GetJxData(soap, _p);
		_p->ns1__GetJxData = ns1__GetJxData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetJxData(struct soap*, const struct __ns1__GetJxData *, const char*, const char*);

inline int soap_write___ns1__GetJxData(struct soap *soap, struct __ns1__GetJxData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetJxData(soap, p), 0) || ::soap_put___ns1__GetJxData(soap, p, "-ns1:GetJxData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetJxData(struct soap *soap, const char *URL, struct __ns1__GetJxData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxData(soap, p), 0) || ::soap_put___ns1__GetJxData(soap, p, "-ns1:GetJxData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetJxData(struct soap *soap, const char *URL, struct __ns1__GetJxData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetJxData(soap, p), 0) || ::soap_put___ns1__GetJxData(soap, p, "-ns1:GetJxData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetJxData * SOAP_FMAC4 soap_get___ns1__GetJxData(struct soap*, struct __ns1__GetJxData *, const char*, const char*);

inline int soap_read___ns1__GetJxData(struct soap *soap, struct __ns1__GetJxData *p)
{
	if (p)
	{	::soap_default___ns1__GetJxData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetJxData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetJxData(struct soap *soap, const char *URL, struct __ns1__GetJxData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetJxData(struct soap *soap, struct __ns1__GetJxData *p)
{
	if (::soap_read___ns1__GetJxData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDeviceXj_DEFINED
#define SOAP_TYPE___ns1__GetDeviceXj_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDeviceXj(struct soap*, struct __ns1__GetDeviceXj *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDeviceXj(struct soap*, const struct __ns1__GetDeviceXj *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDeviceXj(struct soap*, const char*, int, const struct __ns1__GetDeviceXj *, const char*);
SOAP_FMAC3 struct __ns1__GetDeviceXj * SOAP_FMAC4 soap_in___ns1__GetDeviceXj(struct soap*, const char*, struct __ns1__GetDeviceXj *, const char*);
SOAP_FMAC1 struct __ns1__GetDeviceXj * SOAP_FMAC2 soap_instantiate___ns1__GetDeviceXj(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDeviceXj * soap_new___ns1__GetDeviceXj(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDeviceXj(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDeviceXj * soap_new_req___ns1__GetDeviceXj(
	struct soap *soap)
{
	struct __ns1__GetDeviceXj *_p = ::soap_new___ns1__GetDeviceXj(soap);
	if (_p)
	{	::soap_default___ns1__GetDeviceXj(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDeviceXj * soap_new_set___ns1__GetDeviceXj(
	struct soap *soap,
	_ns1__GetDeviceXj *ns1__GetDeviceXj)
{
	struct __ns1__GetDeviceXj *_p = ::soap_new___ns1__GetDeviceXj(soap);
	if (_p)
	{	::soap_default___ns1__GetDeviceXj(soap, _p);
		_p->ns1__GetDeviceXj = ns1__GetDeviceXj;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDeviceXj(struct soap*, const struct __ns1__GetDeviceXj *, const char*, const char*);

inline int soap_write___ns1__GetDeviceXj(struct soap *soap, struct __ns1__GetDeviceXj const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDeviceXj(soap, p), 0) || ::soap_put___ns1__GetDeviceXj(soap, p, "-ns1:GetDeviceXj", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDeviceXj(struct soap *soap, const char *URL, struct __ns1__GetDeviceXj const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDeviceXj(soap, p), 0) || ::soap_put___ns1__GetDeviceXj(soap, p, "-ns1:GetDeviceXj", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDeviceXj(struct soap *soap, const char *URL, struct __ns1__GetDeviceXj const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDeviceXj(soap, p), 0) || ::soap_put___ns1__GetDeviceXj(soap, p, "-ns1:GetDeviceXj", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDeviceXj * SOAP_FMAC4 soap_get___ns1__GetDeviceXj(struct soap*, struct __ns1__GetDeviceXj *, const char*, const char*);

inline int soap_read___ns1__GetDeviceXj(struct soap *soap, struct __ns1__GetDeviceXj *p)
{
	if (p)
	{	::soap_default___ns1__GetDeviceXj(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDeviceXj(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDeviceXj(struct soap *soap, const char *URL, struct __ns1__GetDeviceXj *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDeviceXj(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDeviceXj(struct soap *soap, struct __ns1__GetDeviceXj *p)
{
	if (::soap_read___ns1__GetDeviceXj(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDwPic_DEFINED
#define SOAP_TYPE___ns1__GetDwPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDwPic(struct soap*, struct __ns1__GetDwPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDwPic(struct soap*, const struct __ns1__GetDwPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDwPic(struct soap*, const char*, int, const struct __ns1__GetDwPic *, const char*);
SOAP_FMAC3 struct __ns1__GetDwPic * SOAP_FMAC4 soap_in___ns1__GetDwPic(struct soap*, const char*, struct __ns1__GetDwPic *, const char*);
SOAP_FMAC1 struct __ns1__GetDwPic * SOAP_FMAC2 soap_instantiate___ns1__GetDwPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDwPic * soap_new___ns1__GetDwPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDwPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDwPic * soap_new_req___ns1__GetDwPic(
	struct soap *soap)
{
	struct __ns1__GetDwPic *_p = ::soap_new___ns1__GetDwPic(soap);
	if (_p)
	{	::soap_default___ns1__GetDwPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDwPic * soap_new_set___ns1__GetDwPic(
	struct soap *soap,
	_ns1__GetDwPic *ns1__GetDwPic)
{
	struct __ns1__GetDwPic *_p = ::soap_new___ns1__GetDwPic(soap);
	if (_p)
	{	::soap_default___ns1__GetDwPic(soap, _p);
		_p->ns1__GetDwPic = ns1__GetDwPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDwPic(struct soap*, const struct __ns1__GetDwPic *, const char*, const char*);

inline int soap_write___ns1__GetDwPic(struct soap *soap, struct __ns1__GetDwPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDwPic(soap, p), 0) || ::soap_put___ns1__GetDwPic(soap, p, "-ns1:GetDwPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDwPic(struct soap *soap, const char *URL, struct __ns1__GetDwPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwPic(soap, p), 0) || ::soap_put___ns1__GetDwPic(soap, p, "-ns1:GetDwPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDwPic(struct soap *soap, const char *URL, struct __ns1__GetDwPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwPic(soap, p), 0) || ::soap_put___ns1__GetDwPic(soap, p, "-ns1:GetDwPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDwPic * SOAP_FMAC4 soap_get___ns1__GetDwPic(struct soap*, struct __ns1__GetDwPic *, const char*, const char*);

inline int soap_read___ns1__GetDwPic(struct soap *soap, struct __ns1__GetDwPic *p)
{
	if (p)
	{	::soap_default___ns1__GetDwPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDwPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDwPic(struct soap *soap, const char *URL, struct __ns1__GetDwPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDwPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDwPic(struct soap *soap, struct __ns1__GetDwPic *p)
{
	if (::soap_read___ns1__GetDwPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDwInfo_DEFINED
#define SOAP_TYPE___ns1__GetDwInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDwInfo(struct soap*, struct __ns1__GetDwInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDwInfo(struct soap*, const struct __ns1__GetDwInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDwInfo(struct soap*, const char*, int, const struct __ns1__GetDwInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetDwInfo * SOAP_FMAC4 soap_in___ns1__GetDwInfo(struct soap*, const char*, struct __ns1__GetDwInfo *, const char*);
SOAP_FMAC1 struct __ns1__GetDwInfo * SOAP_FMAC2 soap_instantiate___ns1__GetDwInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDwInfo * soap_new___ns1__GetDwInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDwInfo(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDwInfo * soap_new_req___ns1__GetDwInfo(
	struct soap *soap)
{
	struct __ns1__GetDwInfo *_p = ::soap_new___ns1__GetDwInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetDwInfo(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDwInfo * soap_new_set___ns1__GetDwInfo(
	struct soap *soap,
	_ns1__GetDwInfo *ns1__GetDwInfo)
{
	struct __ns1__GetDwInfo *_p = ::soap_new___ns1__GetDwInfo(soap);
	if (_p)
	{	::soap_default___ns1__GetDwInfo(soap, _p);
		_p->ns1__GetDwInfo = ns1__GetDwInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDwInfo(struct soap*, const struct __ns1__GetDwInfo *, const char*, const char*);

inline int soap_write___ns1__GetDwInfo(struct soap *soap, struct __ns1__GetDwInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDwInfo(soap, p), 0) || ::soap_put___ns1__GetDwInfo(soap, p, "-ns1:GetDwInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDwInfo(struct soap *soap, const char *URL, struct __ns1__GetDwInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwInfo(soap, p), 0) || ::soap_put___ns1__GetDwInfo(soap, p, "-ns1:GetDwInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDwInfo(struct soap *soap, const char *URL, struct __ns1__GetDwInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDwInfo(soap, p), 0) || ::soap_put___ns1__GetDwInfo(soap, p, "-ns1:GetDwInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDwInfo * SOAP_FMAC4 soap_get___ns1__GetDwInfo(struct soap*, struct __ns1__GetDwInfo *, const char*, const char*);

inline int soap_read___ns1__GetDwInfo(struct soap *soap, struct __ns1__GetDwInfo *p)
{
	if (p)
	{	::soap_default___ns1__GetDwInfo(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDwInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDwInfo(struct soap *soap, const char *URL, struct __ns1__GetDwInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDwInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDwInfo(struct soap *soap, struct __ns1__GetDwInfo *p)
{
	if (::soap_read___ns1__GetDwInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetPicNames_DEFINED
#define SOAP_TYPE___ns1__GetPicNames_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPicNames(struct soap*, struct __ns1__GetPicNames *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPicNames(struct soap*, const struct __ns1__GetPicNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPicNames(struct soap*, const char*, int, const struct __ns1__GetPicNames *, const char*);
SOAP_FMAC3 struct __ns1__GetPicNames * SOAP_FMAC4 soap_in___ns1__GetPicNames(struct soap*, const char*, struct __ns1__GetPicNames *, const char*);
SOAP_FMAC1 struct __ns1__GetPicNames * SOAP_FMAC2 soap_instantiate___ns1__GetPicNames(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPicNames * soap_new___ns1__GetPicNames(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetPicNames(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetPicNames * soap_new_req___ns1__GetPicNames(
	struct soap *soap)
{
	struct __ns1__GetPicNames *_p = ::soap_new___ns1__GetPicNames(soap);
	if (_p)
	{	::soap_default___ns1__GetPicNames(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetPicNames * soap_new_set___ns1__GetPicNames(
	struct soap *soap,
	_ns1__GetPicNames *ns1__GetPicNames)
{
	struct __ns1__GetPicNames *_p = ::soap_new___ns1__GetPicNames(soap);
	if (_p)
	{	::soap_default___ns1__GetPicNames(soap, _p);
		_p->ns1__GetPicNames = ns1__GetPicNames;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPicNames(struct soap*, const struct __ns1__GetPicNames *, const char*, const char*);

inline int soap_write___ns1__GetPicNames(struct soap *soap, struct __ns1__GetPicNames const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetPicNames(soap, p), 0) || ::soap_put___ns1__GetPicNames(soap, p, "-ns1:GetPicNames", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetPicNames(struct soap *soap, const char *URL, struct __ns1__GetPicNames const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPicNames(soap, p), 0) || ::soap_put___ns1__GetPicNames(soap, p, "-ns1:GetPicNames", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetPicNames(struct soap *soap, const char *URL, struct __ns1__GetPicNames const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPicNames(soap, p), 0) || ::soap_put___ns1__GetPicNames(soap, p, "-ns1:GetPicNames", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetPicNames * SOAP_FMAC4 soap_get___ns1__GetPicNames(struct soap*, struct __ns1__GetPicNames *, const char*, const char*);

inline int soap_read___ns1__GetPicNames(struct soap *soap, struct __ns1__GetPicNames *p)
{
	if (p)
	{	::soap_default___ns1__GetPicNames(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetPicNames(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetPicNames(struct soap *soap, const char *URL, struct __ns1__GetPicNames *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetPicNames(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetPicNames(struct soap *soap, struct __ns1__GetPicNames *p)
{
	if (::soap_read___ns1__GetPicNames(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownloadPic_DEFINED
#define SOAP_TYPE___ns1__DownloadPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownloadPic(struct soap*, struct __ns1__DownloadPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownloadPic(struct soap*, const struct __ns1__DownloadPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownloadPic(struct soap*, const char*, int, const struct __ns1__DownloadPic *, const char*);
SOAP_FMAC3 struct __ns1__DownloadPic * SOAP_FMAC4 soap_in___ns1__DownloadPic(struct soap*, const char*, struct __ns1__DownloadPic *, const char*);
SOAP_FMAC1 struct __ns1__DownloadPic * SOAP_FMAC2 soap_instantiate___ns1__DownloadPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownloadPic * soap_new___ns1__DownloadPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownloadPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownloadPic * soap_new_req___ns1__DownloadPic(
	struct soap *soap)
{
	struct __ns1__DownloadPic *_p = ::soap_new___ns1__DownloadPic(soap);
	if (_p)
	{	::soap_default___ns1__DownloadPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownloadPic * soap_new_set___ns1__DownloadPic(
	struct soap *soap,
	_ns1__DownloadPic *ns1__DownloadPic)
{
	struct __ns1__DownloadPic *_p = ::soap_new___ns1__DownloadPic(soap);
	if (_p)
	{	::soap_default___ns1__DownloadPic(soap, _p);
		_p->ns1__DownloadPic = ns1__DownloadPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownloadPic(struct soap*, const struct __ns1__DownloadPic *, const char*, const char*);

inline int soap_write___ns1__DownloadPic(struct soap *soap, struct __ns1__DownloadPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownloadPic(soap, p), 0) || ::soap_put___ns1__DownloadPic(soap, p, "-ns1:DownloadPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownloadPic(struct soap *soap, const char *URL, struct __ns1__DownloadPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownloadPic(soap, p), 0) || ::soap_put___ns1__DownloadPic(soap, p, "-ns1:DownloadPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownloadPic(struct soap *soap, const char *URL, struct __ns1__DownloadPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownloadPic(soap, p), 0) || ::soap_put___ns1__DownloadPic(soap, p, "-ns1:DownloadPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownloadPic * SOAP_FMAC4 soap_get___ns1__DownloadPic(struct soap*, struct __ns1__DownloadPic *, const char*, const char*);

inline int soap_read___ns1__DownloadPic(struct soap *soap, struct __ns1__DownloadPic *p)
{
	if (p)
	{	::soap_default___ns1__DownloadPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownloadPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownloadPic(struct soap *soap, const char *URL, struct __ns1__DownloadPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownloadPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownloadPic(struct soap *soap, struct __ns1__DownloadPic *p)
{
	if (::soap_read___ns1__DownloadPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__upPic_DEFINED
#define SOAP_TYPE___ns1__upPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__upPic(struct soap*, struct __ns1__upPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__upPic(struct soap*, const struct __ns1__upPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__upPic(struct soap*, const char*, int, const struct __ns1__upPic *, const char*);
SOAP_FMAC3 struct __ns1__upPic * SOAP_FMAC4 soap_in___ns1__upPic(struct soap*, const char*, struct __ns1__upPic *, const char*);
SOAP_FMAC1 struct __ns1__upPic * SOAP_FMAC2 soap_instantiate___ns1__upPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__upPic * soap_new___ns1__upPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__upPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__upPic * soap_new_req___ns1__upPic(
	struct soap *soap)
{
	struct __ns1__upPic *_p = ::soap_new___ns1__upPic(soap);
	if (_p)
	{	::soap_default___ns1__upPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__upPic * soap_new_set___ns1__upPic(
	struct soap *soap,
	_ns1__upPic *ns1__upPic)
{
	struct __ns1__upPic *_p = ::soap_new___ns1__upPic(soap);
	if (_p)
	{	::soap_default___ns1__upPic(soap, _p);
		_p->ns1__upPic = ns1__upPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__upPic(struct soap*, const struct __ns1__upPic *, const char*, const char*);

inline int soap_write___ns1__upPic(struct soap *soap, struct __ns1__upPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__upPic(soap, p), 0) || ::soap_put___ns1__upPic(soap, p, "-ns1:upPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__upPic(struct soap *soap, const char *URL, struct __ns1__upPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__upPic(soap, p), 0) || ::soap_put___ns1__upPic(soap, p, "-ns1:upPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__upPic(struct soap *soap, const char *URL, struct __ns1__upPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__upPic(soap, p), 0) || ::soap_put___ns1__upPic(soap, p, "-ns1:upPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__upPic * SOAP_FMAC4 soap_get___ns1__upPic(struct soap*, struct __ns1__upPic *, const char*, const char*);

inline int soap_read___ns1__upPic(struct soap *soap, struct __ns1__upPic *p)
{
	if (p)
	{	::soap_default___ns1__upPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__upPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__upPic(struct soap *soap, const char *URL, struct __ns1__upPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__upPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__upPic(struct soap *soap, struct __ns1__upPic *p)
{
	if (::soap_read___ns1__upPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__UpLoadFile_DEFINED
#define SOAP_TYPE___ns1__UpLoadFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpLoadFile(struct soap*, struct __ns1__UpLoadFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpLoadFile(struct soap*, const struct __ns1__UpLoadFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpLoadFile(struct soap*, const char*, int, const struct __ns1__UpLoadFile *, const char*);
SOAP_FMAC3 struct __ns1__UpLoadFile * SOAP_FMAC4 soap_in___ns1__UpLoadFile(struct soap*, const char*, struct __ns1__UpLoadFile *, const char*);
SOAP_FMAC1 struct __ns1__UpLoadFile * SOAP_FMAC2 soap_instantiate___ns1__UpLoadFile(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpLoadFile * soap_new___ns1__UpLoadFile(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__UpLoadFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__UpLoadFile * soap_new_req___ns1__UpLoadFile(
	struct soap *soap)
{
	struct __ns1__UpLoadFile *_p = ::soap_new___ns1__UpLoadFile(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadFile(soap, _p);
	}
	return _p;
}

inline struct __ns1__UpLoadFile * soap_new_set___ns1__UpLoadFile(
	struct soap *soap,
	_ns1__UpLoadFile *ns1__UpLoadFile)
{
	struct __ns1__UpLoadFile *_p = ::soap_new___ns1__UpLoadFile(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadFile(soap, _p);
		_p->ns1__UpLoadFile = ns1__UpLoadFile;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpLoadFile(struct soap*, const struct __ns1__UpLoadFile *, const char*, const char*);

inline int soap_write___ns1__UpLoadFile(struct soap *soap, struct __ns1__UpLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__UpLoadFile(soap, p), 0) || ::soap_put___ns1__UpLoadFile(soap, p, "-ns1:UpLoadFile", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__UpLoadFile(struct soap *soap, const char *URL, struct __ns1__UpLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadFile(soap, p), 0) || ::soap_put___ns1__UpLoadFile(soap, p, "-ns1:UpLoadFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__UpLoadFile(struct soap *soap, const char *URL, struct __ns1__UpLoadFile const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadFile(soap, p), 0) || ::soap_put___ns1__UpLoadFile(soap, p, "-ns1:UpLoadFile", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__UpLoadFile * SOAP_FMAC4 soap_get___ns1__UpLoadFile(struct soap*, struct __ns1__UpLoadFile *, const char*, const char*);

inline int soap_read___ns1__UpLoadFile(struct soap *soap, struct __ns1__UpLoadFile *p)
{
	if (p)
	{	::soap_default___ns1__UpLoadFile(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__UpLoadFile(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__UpLoadFile(struct soap *soap, const char *URL, struct __ns1__UpLoadFile *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__UpLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__UpLoadFile(struct soap *soap, struct __ns1__UpLoadFile *p)
{
	if (::soap_read___ns1__UpLoadFile(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetAPVupdater_DEFINED
#define SOAP_TYPE___ns1__GetAPVupdater_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAPVupdater(struct soap*, struct __ns1__GetAPVupdater *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAPVupdater(struct soap*, const struct __ns1__GetAPVupdater *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAPVupdater(struct soap*, const char*, int, const struct __ns1__GetAPVupdater *, const char*);
SOAP_FMAC3 struct __ns1__GetAPVupdater * SOAP_FMAC4 soap_in___ns1__GetAPVupdater(struct soap*, const char*, struct __ns1__GetAPVupdater *, const char*);
SOAP_FMAC1 struct __ns1__GetAPVupdater * SOAP_FMAC2 soap_instantiate___ns1__GetAPVupdater(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAPVupdater * soap_new___ns1__GetAPVupdater(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetAPVupdater(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetAPVupdater * soap_new_req___ns1__GetAPVupdater(
	struct soap *soap)
{
	struct __ns1__GetAPVupdater *_p = ::soap_new___ns1__GetAPVupdater(soap);
	if (_p)
	{	::soap_default___ns1__GetAPVupdater(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetAPVupdater * soap_new_set___ns1__GetAPVupdater(
	struct soap *soap,
	_ns1__GetAPVupdater *ns1__GetAPVupdater)
{
	struct __ns1__GetAPVupdater *_p = ::soap_new___ns1__GetAPVupdater(soap);
	if (_p)
	{	::soap_default___ns1__GetAPVupdater(soap, _p);
		_p->ns1__GetAPVupdater = ns1__GetAPVupdater;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAPVupdater(struct soap*, const struct __ns1__GetAPVupdater *, const char*, const char*);

inline int soap_write___ns1__GetAPVupdater(struct soap *soap, struct __ns1__GetAPVupdater const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetAPVupdater(soap, p), 0) || ::soap_put___ns1__GetAPVupdater(soap, p, "-ns1:GetAPVupdater", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetAPVupdater(struct soap *soap, const char *URL, struct __ns1__GetAPVupdater const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAPVupdater(soap, p), 0) || ::soap_put___ns1__GetAPVupdater(soap, p, "-ns1:GetAPVupdater", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetAPVupdater(struct soap *soap, const char *URL, struct __ns1__GetAPVupdater const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetAPVupdater(soap, p), 0) || ::soap_put___ns1__GetAPVupdater(soap, p, "-ns1:GetAPVupdater", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetAPVupdater * SOAP_FMAC4 soap_get___ns1__GetAPVupdater(struct soap*, struct __ns1__GetAPVupdater *, const char*, const char*);

inline int soap_read___ns1__GetAPVupdater(struct soap *soap, struct __ns1__GetAPVupdater *p)
{
	if (p)
	{	::soap_default___ns1__GetAPVupdater(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetAPVupdater(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetAPVupdater(struct soap *soap, const char *URL, struct __ns1__GetAPVupdater *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetAPVupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetAPVupdater(struct soap *soap, struct __ns1__GetAPVupdater *p)
{
	if (::soap_read___ns1__GetAPVupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetXHYDGLXTupdater_DEFINED
#define SOAP_TYPE___ns1__GetXHYDGLXTupdater_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetXHYDGLXTupdater(struct soap*, struct __ns1__GetXHYDGLXTupdater *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetXHYDGLXTupdater(struct soap*, const struct __ns1__GetXHYDGLXTupdater *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetXHYDGLXTupdater(struct soap*, const char*, int, const struct __ns1__GetXHYDGLXTupdater *, const char*);
SOAP_FMAC3 struct __ns1__GetXHYDGLXTupdater * SOAP_FMAC4 soap_in___ns1__GetXHYDGLXTupdater(struct soap*, const char*, struct __ns1__GetXHYDGLXTupdater *, const char*);
SOAP_FMAC1 struct __ns1__GetXHYDGLXTupdater * SOAP_FMAC2 soap_instantiate___ns1__GetXHYDGLXTupdater(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetXHYDGLXTupdater * soap_new___ns1__GetXHYDGLXTupdater(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetXHYDGLXTupdater(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetXHYDGLXTupdater * soap_new_req___ns1__GetXHYDGLXTupdater(
	struct soap *soap)
{
	struct __ns1__GetXHYDGLXTupdater *_p = ::soap_new___ns1__GetXHYDGLXTupdater(soap);
	if (_p)
	{	::soap_default___ns1__GetXHYDGLXTupdater(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetXHYDGLXTupdater * soap_new_set___ns1__GetXHYDGLXTupdater(
	struct soap *soap,
	_ns1__GetXHYDGLXTupdater *ns1__GetXHYDGLXTupdater)
{
	struct __ns1__GetXHYDGLXTupdater *_p = ::soap_new___ns1__GetXHYDGLXTupdater(soap);
	if (_p)
	{	::soap_default___ns1__GetXHYDGLXTupdater(soap, _p);
		_p->ns1__GetXHYDGLXTupdater = ns1__GetXHYDGLXTupdater;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetXHYDGLXTupdater(struct soap*, const struct __ns1__GetXHYDGLXTupdater *, const char*, const char*);

inline int soap_write___ns1__GetXHYDGLXTupdater(struct soap *soap, struct __ns1__GetXHYDGLXTupdater const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetXHYDGLXTupdater(soap, p), 0) || ::soap_put___ns1__GetXHYDGLXTupdater(soap, p, "-ns1:GetXHYDGLXTupdater", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetXHYDGLXTupdater(struct soap *soap, const char *URL, struct __ns1__GetXHYDGLXTupdater const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXHYDGLXTupdater(soap, p), 0) || ::soap_put___ns1__GetXHYDGLXTupdater(soap, p, "-ns1:GetXHYDGLXTupdater", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetXHYDGLXTupdater(struct soap *soap, const char *URL, struct __ns1__GetXHYDGLXTupdater const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetXHYDGLXTupdater(soap, p), 0) || ::soap_put___ns1__GetXHYDGLXTupdater(soap, p, "-ns1:GetXHYDGLXTupdater", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetXHYDGLXTupdater * SOAP_FMAC4 soap_get___ns1__GetXHYDGLXTupdater(struct soap*, struct __ns1__GetXHYDGLXTupdater *, const char*, const char*);

inline int soap_read___ns1__GetXHYDGLXTupdater(struct soap *soap, struct __ns1__GetXHYDGLXTupdater *p)
{
	if (p)
	{	::soap_default___ns1__GetXHYDGLXTupdater(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetXHYDGLXTupdater(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetXHYDGLXTupdater(struct soap *soap, const char *URL, struct __ns1__GetXHYDGLXTupdater *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetXHYDGLXTupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetXHYDGLXTupdater(struct soap *soap, struct __ns1__GetXHYDGLXTupdater *p)
{
	if (::soap_read___ns1__GetXHYDGLXTupdater(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ExecuteSqlForColb_DEFINED
#define SOAP_TYPE___ns1__ExecuteSqlForColb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteSqlForColb(struct soap*, struct __ns1__ExecuteSqlForColb *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteSqlForColb(struct soap*, const struct __ns1__ExecuteSqlForColb *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteSqlForColb(struct soap*, const char*, int, const struct __ns1__ExecuteSqlForColb *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteSqlForColb * SOAP_FMAC4 soap_in___ns1__ExecuteSqlForColb(struct soap*, const char*, struct __ns1__ExecuteSqlForColb *, const char*);
SOAP_FMAC1 struct __ns1__ExecuteSqlForColb * SOAP_FMAC2 soap_instantiate___ns1__ExecuteSqlForColb(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExecuteSqlForColb * soap_new___ns1__ExecuteSqlForColb(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ExecuteSqlForColb(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ExecuteSqlForColb * soap_new_req___ns1__ExecuteSqlForColb(
	struct soap *soap)
{
	struct __ns1__ExecuteSqlForColb *_p = ::soap_new___ns1__ExecuteSqlForColb(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForColb(soap, _p);
	}
	return _p;
}

inline struct __ns1__ExecuteSqlForColb * soap_new_set___ns1__ExecuteSqlForColb(
	struct soap *soap,
	_ns1__ExecuteSqlForColb *ns1__ExecuteSqlForColb)
{
	struct __ns1__ExecuteSqlForColb *_p = ::soap_new___ns1__ExecuteSqlForColb(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSqlForColb(soap, _p);
		_p->ns1__ExecuteSqlForColb = ns1__ExecuteSqlForColb;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteSqlForColb(struct soap*, const struct __ns1__ExecuteSqlForColb *, const char*, const char*);

inline int soap_write___ns1__ExecuteSqlForColb(struct soap *soap, struct __ns1__ExecuteSqlForColb const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ExecuteSqlForColb(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForColb(soap, p, "-ns1:ExecuteSqlForColb", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ExecuteSqlForColb(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForColb const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForColb(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForColb(soap, p, "-ns1:ExecuteSqlForColb", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ExecuteSqlForColb(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForColb const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSqlForColb(soap, p), 0) || ::soap_put___ns1__ExecuteSqlForColb(soap, p, "-ns1:ExecuteSqlForColb", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ExecuteSqlForColb * SOAP_FMAC4 soap_get___ns1__ExecuteSqlForColb(struct soap*, struct __ns1__ExecuteSqlForColb *, const char*, const char*);

inline int soap_read___ns1__ExecuteSqlForColb(struct soap *soap, struct __ns1__ExecuteSqlForColb *p)
{
	if (p)
	{	::soap_default___ns1__ExecuteSqlForColb(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ExecuteSqlForColb(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ExecuteSqlForColb(struct soap *soap, const char *URL, struct __ns1__ExecuteSqlForColb *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ExecuteSqlForColb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ExecuteSqlForColb(struct soap *soap, struct __ns1__ExecuteSqlForColb *p)
{
	if (::soap_read___ns1__ExecuteSqlForColb(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__UpLoadData_DEFINED
#define SOAP_TYPE___ns1__UpLoadData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpLoadData(struct soap*, struct __ns1__UpLoadData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpLoadData(struct soap*, const struct __ns1__UpLoadData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpLoadData(struct soap*, const char*, int, const struct __ns1__UpLoadData *, const char*);
SOAP_FMAC3 struct __ns1__UpLoadData * SOAP_FMAC4 soap_in___ns1__UpLoadData(struct soap*, const char*, struct __ns1__UpLoadData *, const char*);
SOAP_FMAC1 struct __ns1__UpLoadData * SOAP_FMAC2 soap_instantiate___ns1__UpLoadData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UpLoadData * soap_new___ns1__UpLoadData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__UpLoadData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__UpLoadData * soap_new_req___ns1__UpLoadData(
	struct soap *soap)
{
	struct __ns1__UpLoadData *_p = ::soap_new___ns1__UpLoadData(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadData(soap, _p);
	}
	return _p;
}

inline struct __ns1__UpLoadData * soap_new_set___ns1__UpLoadData(
	struct soap *soap,
	_ns1__UpLoadData *ns1__UpLoadData)
{
	struct __ns1__UpLoadData *_p = ::soap_new___ns1__UpLoadData(soap);
	if (_p)
	{	::soap_default___ns1__UpLoadData(soap, _p);
		_p->ns1__UpLoadData = ns1__UpLoadData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpLoadData(struct soap*, const struct __ns1__UpLoadData *, const char*, const char*);

inline int soap_write___ns1__UpLoadData(struct soap *soap, struct __ns1__UpLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__UpLoadData(soap, p), 0) || ::soap_put___ns1__UpLoadData(soap, p, "-ns1:UpLoadData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__UpLoadData(struct soap *soap, const char *URL, struct __ns1__UpLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadData(soap, p), 0) || ::soap_put___ns1__UpLoadData(soap, p, "-ns1:UpLoadData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__UpLoadData(struct soap *soap, const char *URL, struct __ns1__UpLoadData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__UpLoadData(soap, p), 0) || ::soap_put___ns1__UpLoadData(soap, p, "-ns1:UpLoadData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__UpLoadData * SOAP_FMAC4 soap_get___ns1__UpLoadData(struct soap*, struct __ns1__UpLoadData *, const char*, const char*);

inline int soap_read___ns1__UpLoadData(struct soap *soap, struct __ns1__UpLoadData *p)
{
	if (p)
	{	::soap_default___ns1__UpLoadData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__UpLoadData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__UpLoadData(struct soap *soap, const char *URL, struct __ns1__UpLoadData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__UpLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__UpLoadData(struct soap *soap, struct __ns1__UpLoadData *p)
{
	if (::soap_read___ns1__UpLoadData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__TcdSendup_DEFINED
#define SOAP_TYPE___ns1__TcdSendup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__TcdSendup(struct soap*, struct __ns1__TcdSendup *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__TcdSendup(struct soap*, const struct __ns1__TcdSendup *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__TcdSendup(struct soap*, const char*, int, const struct __ns1__TcdSendup *, const char*);
SOAP_FMAC3 struct __ns1__TcdSendup * SOAP_FMAC4 soap_in___ns1__TcdSendup(struct soap*, const char*, struct __ns1__TcdSendup *, const char*);
SOAP_FMAC1 struct __ns1__TcdSendup * SOAP_FMAC2 soap_instantiate___ns1__TcdSendup(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__TcdSendup * soap_new___ns1__TcdSendup(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__TcdSendup(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__TcdSendup * soap_new_req___ns1__TcdSendup(
	struct soap *soap)
{
	struct __ns1__TcdSendup *_p = ::soap_new___ns1__TcdSendup(soap);
	if (_p)
	{	::soap_default___ns1__TcdSendup(soap, _p);
	}
	return _p;
}

inline struct __ns1__TcdSendup * soap_new_set___ns1__TcdSendup(
	struct soap *soap,
	_ns1__TcdSendup *ns1__TcdSendup)
{
	struct __ns1__TcdSendup *_p = ::soap_new___ns1__TcdSendup(soap);
	if (_p)
	{	::soap_default___ns1__TcdSendup(soap, _p);
		_p->ns1__TcdSendup = ns1__TcdSendup;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__TcdSendup(struct soap*, const struct __ns1__TcdSendup *, const char*, const char*);

inline int soap_write___ns1__TcdSendup(struct soap *soap, struct __ns1__TcdSendup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__TcdSendup(soap, p), 0) || ::soap_put___ns1__TcdSendup(soap, p, "-ns1:TcdSendup", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__TcdSendup(struct soap *soap, const char *URL, struct __ns1__TcdSendup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdSendup(soap, p), 0) || ::soap_put___ns1__TcdSendup(soap, p, "-ns1:TcdSendup", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__TcdSendup(struct soap *soap, const char *URL, struct __ns1__TcdSendup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdSendup(soap, p), 0) || ::soap_put___ns1__TcdSendup(soap, p, "-ns1:TcdSendup", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__TcdSendup * SOAP_FMAC4 soap_get___ns1__TcdSendup(struct soap*, struct __ns1__TcdSendup *, const char*, const char*);

inline int soap_read___ns1__TcdSendup(struct soap *soap, struct __ns1__TcdSendup *p)
{
	if (p)
	{	::soap_default___ns1__TcdSendup(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__TcdSendup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__TcdSendup(struct soap *soap, const char *URL, struct __ns1__TcdSendup *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__TcdSendup(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__TcdSendup(struct soap *soap, struct __ns1__TcdSendup *p)
{
	if (::soap_read___ns1__TcdSendup(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__TcdQuery_DEFINED
#define SOAP_TYPE___ns1__TcdQuery_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__TcdQuery(struct soap*, struct __ns1__TcdQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__TcdQuery(struct soap*, const struct __ns1__TcdQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__TcdQuery(struct soap*, const char*, int, const struct __ns1__TcdQuery *, const char*);
SOAP_FMAC3 struct __ns1__TcdQuery * SOAP_FMAC4 soap_in___ns1__TcdQuery(struct soap*, const char*, struct __ns1__TcdQuery *, const char*);
SOAP_FMAC1 struct __ns1__TcdQuery * SOAP_FMAC2 soap_instantiate___ns1__TcdQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__TcdQuery * soap_new___ns1__TcdQuery(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__TcdQuery(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__TcdQuery * soap_new_req___ns1__TcdQuery(
	struct soap *soap)
{
	struct __ns1__TcdQuery *_p = ::soap_new___ns1__TcdQuery(soap);
	if (_p)
	{	::soap_default___ns1__TcdQuery(soap, _p);
	}
	return _p;
}

inline struct __ns1__TcdQuery * soap_new_set___ns1__TcdQuery(
	struct soap *soap,
	_ns1__TcdQuery *ns1__TcdQuery)
{
	struct __ns1__TcdQuery *_p = ::soap_new___ns1__TcdQuery(soap);
	if (_p)
	{	::soap_default___ns1__TcdQuery(soap, _p);
		_p->ns1__TcdQuery = ns1__TcdQuery;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__TcdQuery(struct soap*, const struct __ns1__TcdQuery *, const char*, const char*);

inline int soap_write___ns1__TcdQuery(struct soap *soap, struct __ns1__TcdQuery const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__TcdQuery(soap, p), 0) || ::soap_put___ns1__TcdQuery(soap, p, "-ns1:TcdQuery", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__TcdQuery(struct soap *soap, const char *URL, struct __ns1__TcdQuery const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdQuery(soap, p), 0) || ::soap_put___ns1__TcdQuery(soap, p, "-ns1:TcdQuery", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__TcdQuery(struct soap *soap, const char *URL, struct __ns1__TcdQuery const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__TcdQuery(soap, p), 0) || ::soap_put___ns1__TcdQuery(soap, p, "-ns1:TcdQuery", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__TcdQuery * SOAP_FMAC4 soap_get___ns1__TcdQuery(struct soap*, struct __ns1__TcdQuery *, const char*, const char*);

inline int soap_read___ns1__TcdQuery(struct soap *soap, struct __ns1__TcdQuery *p)
{
	if (p)
	{	::soap_default___ns1__TcdQuery(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__TcdQuery(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__TcdQuery(struct soap *soap, const char *URL, struct __ns1__TcdQuery *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__TcdQuery(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__TcdQuery(struct soap *soap, struct __ns1__TcdQuery *p)
{
	if (::soap_read___ns1__TcdQuery(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__QueryPhotobw_DEFINED
#define SOAP_TYPE___ns1__QueryPhotobw_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryPhotobw(struct soap*, struct __ns1__QueryPhotobw *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryPhotobw(struct soap*, const struct __ns1__QueryPhotobw *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryPhotobw(struct soap*, const char*, int, const struct __ns1__QueryPhotobw *, const char*);
SOAP_FMAC3 struct __ns1__QueryPhotobw * SOAP_FMAC4 soap_in___ns1__QueryPhotobw(struct soap*, const char*, struct __ns1__QueryPhotobw *, const char*);
SOAP_FMAC1 struct __ns1__QueryPhotobw * SOAP_FMAC2 soap_instantiate___ns1__QueryPhotobw(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryPhotobw * soap_new___ns1__QueryPhotobw(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__QueryPhotobw(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__QueryPhotobw * soap_new_req___ns1__QueryPhotobw(
	struct soap *soap)
{
	struct __ns1__QueryPhotobw *_p = ::soap_new___ns1__QueryPhotobw(soap);
	if (_p)
	{	::soap_default___ns1__QueryPhotobw(soap, _p);
	}
	return _p;
}

inline struct __ns1__QueryPhotobw * soap_new_set___ns1__QueryPhotobw(
	struct soap *soap,
	_ns1__QueryPhotobw *ns1__QueryPhotobw)
{
	struct __ns1__QueryPhotobw *_p = ::soap_new___ns1__QueryPhotobw(soap);
	if (_p)
	{	::soap_default___ns1__QueryPhotobw(soap, _p);
		_p->ns1__QueryPhotobw = ns1__QueryPhotobw;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryPhotobw(struct soap*, const struct __ns1__QueryPhotobw *, const char*, const char*);

inline int soap_write___ns1__QueryPhotobw(struct soap *soap, struct __ns1__QueryPhotobw const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__QueryPhotobw(soap, p), 0) || ::soap_put___ns1__QueryPhotobw(soap, p, "-ns1:QueryPhotobw", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__QueryPhotobw(struct soap *soap, const char *URL, struct __ns1__QueryPhotobw const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryPhotobw(soap, p), 0) || ::soap_put___ns1__QueryPhotobw(soap, p, "-ns1:QueryPhotobw", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__QueryPhotobw(struct soap *soap, const char *URL, struct __ns1__QueryPhotobw const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryPhotobw(soap, p), 0) || ::soap_put___ns1__QueryPhotobw(soap, p, "-ns1:QueryPhotobw", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__QueryPhotobw * SOAP_FMAC4 soap_get___ns1__QueryPhotobw(struct soap*, struct __ns1__QueryPhotobw *, const char*, const char*);

inline int soap_read___ns1__QueryPhotobw(struct soap *soap, struct __ns1__QueryPhotobw *p)
{
	if (p)
	{	::soap_default___ns1__QueryPhotobw(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__QueryPhotobw(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__QueryPhotobw(struct soap *soap, const char *URL, struct __ns1__QueryPhotobw *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__QueryPhotobw(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__QueryPhotobw(struct soap *soap, struct __ns1__QueryPhotobw *p)
{
	if (::soap_read___ns1__QueryPhotobw(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetOsDateTime_DEFINED
#define SOAP_TYPE___ns1__GetOsDateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetOsDateTime(struct soap*, struct __ns1__GetOsDateTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetOsDateTime(struct soap*, const struct __ns1__GetOsDateTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetOsDateTime(struct soap*, const char*, int, const struct __ns1__GetOsDateTime *, const char*);
SOAP_FMAC3 struct __ns1__GetOsDateTime * SOAP_FMAC4 soap_in___ns1__GetOsDateTime(struct soap*, const char*, struct __ns1__GetOsDateTime *, const char*);
SOAP_FMAC1 struct __ns1__GetOsDateTime * SOAP_FMAC2 soap_instantiate___ns1__GetOsDateTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetOsDateTime * soap_new___ns1__GetOsDateTime(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetOsDateTime(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetOsDateTime * soap_new_req___ns1__GetOsDateTime(
	struct soap *soap)
{
	struct __ns1__GetOsDateTime *_p = ::soap_new___ns1__GetOsDateTime(soap);
	if (_p)
	{	::soap_default___ns1__GetOsDateTime(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetOsDateTime * soap_new_set___ns1__GetOsDateTime(
	struct soap *soap,
	_ns1__GetOsDateTime *ns1__GetOsDateTime)
{
	struct __ns1__GetOsDateTime *_p = ::soap_new___ns1__GetOsDateTime(soap);
	if (_p)
	{	::soap_default___ns1__GetOsDateTime(soap, _p);
		_p->ns1__GetOsDateTime = ns1__GetOsDateTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetOsDateTime(struct soap*, const struct __ns1__GetOsDateTime *, const char*, const char*);

inline int soap_write___ns1__GetOsDateTime(struct soap *soap, struct __ns1__GetOsDateTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetOsDateTime(soap, p), 0) || ::soap_put___ns1__GetOsDateTime(soap, p, "-ns1:GetOsDateTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetOsDateTime(struct soap *soap, const char *URL, struct __ns1__GetOsDateTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOsDateTime(soap, p), 0) || ::soap_put___ns1__GetOsDateTime(soap, p, "-ns1:GetOsDateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetOsDateTime(struct soap *soap, const char *URL, struct __ns1__GetOsDateTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetOsDateTime(soap, p), 0) || ::soap_put___ns1__GetOsDateTime(soap, p, "-ns1:GetOsDateTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetOsDateTime * SOAP_FMAC4 soap_get___ns1__GetOsDateTime(struct soap*, struct __ns1__GetOsDateTime *, const char*, const char*);

inline int soap_read___ns1__GetOsDateTime(struct soap *soap, struct __ns1__GetOsDateTime *p)
{
	if (p)
	{	::soap_default___ns1__GetOsDateTime(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetOsDateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetOsDateTime(struct soap *soap, const char *URL, struct __ns1__GetOsDateTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetOsDateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetOsDateTime(struct soap *soap, struct __ns1__GetOsDateTime *p)
{
	if (::soap_read___ns1__GetOsDateTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__signedUserInfo_DEFINED
#define SOAP_TYPE___ns1__signedUserInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__signedUserInfo(struct soap*, struct __ns1__signedUserInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__signedUserInfo(struct soap*, const struct __ns1__signedUserInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__signedUserInfo(struct soap*, const char*, int, const struct __ns1__signedUserInfo *, const char*);
SOAP_FMAC3 struct __ns1__signedUserInfo * SOAP_FMAC4 soap_in___ns1__signedUserInfo(struct soap*, const char*, struct __ns1__signedUserInfo *, const char*);
SOAP_FMAC1 struct __ns1__signedUserInfo * SOAP_FMAC2 soap_instantiate___ns1__signedUserInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__signedUserInfo * soap_new___ns1__signedUserInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__signedUserInfo(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__signedUserInfo * soap_new_req___ns1__signedUserInfo(
	struct soap *soap)
{
	struct __ns1__signedUserInfo *_p = ::soap_new___ns1__signedUserInfo(soap);
	if (_p)
	{	::soap_default___ns1__signedUserInfo(soap, _p);
	}
	return _p;
}

inline struct __ns1__signedUserInfo * soap_new_set___ns1__signedUserInfo(
	struct soap *soap,
	_ns1__signedUserInfo *ns1__signedUserInfo)
{
	struct __ns1__signedUserInfo *_p = ::soap_new___ns1__signedUserInfo(soap);
	if (_p)
	{	::soap_default___ns1__signedUserInfo(soap, _p);
		_p->ns1__signedUserInfo = ns1__signedUserInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__signedUserInfo(struct soap*, const struct __ns1__signedUserInfo *, const char*, const char*);

inline int soap_write___ns1__signedUserInfo(struct soap *soap, struct __ns1__signedUserInfo const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__signedUserInfo(soap, p), 0) || ::soap_put___ns1__signedUserInfo(soap, p, "-ns1:signedUserInfo", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__signedUserInfo(struct soap *soap, const char *URL, struct __ns1__signedUserInfo const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__signedUserInfo(soap, p), 0) || ::soap_put___ns1__signedUserInfo(soap, p, "-ns1:signedUserInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__signedUserInfo(struct soap *soap, const char *URL, struct __ns1__signedUserInfo const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__signedUserInfo(soap, p), 0) || ::soap_put___ns1__signedUserInfo(soap, p, "-ns1:signedUserInfo", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__signedUserInfo * SOAP_FMAC4 soap_get___ns1__signedUserInfo(struct soap*, struct __ns1__signedUserInfo *, const char*, const char*);

inline int soap_read___ns1__signedUserInfo(struct soap *soap, struct __ns1__signedUserInfo *p)
{
	if (p)
	{	::soap_default___ns1__signedUserInfo(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__signedUserInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__signedUserInfo(struct soap *soap, const char *URL, struct __ns1__signedUserInfo *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__signedUserInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__signedUserInfo(struct soap *soap, struct __ns1__signedUserInfo *p)
{
	if (::soap_read___ns1__signedUserInfo(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetGxdataUpTime_DEFINED
#define SOAP_TYPE___ns1__GetGxdataUpTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetGxdataUpTime(struct soap*, struct __ns1__GetGxdataUpTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetGxdataUpTime(struct soap*, const struct __ns1__GetGxdataUpTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetGxdataUpTime(struct soap*, const char*, int, const struct __ns1__GetGxdataUpTime *, const char*);
SOAP_FMAC3 struct __ns1__GetGxdataUpTime * SOAP_FMAC4 soap_in___ns1__GetGxdataUpTime(struct soap*, const char*, struct __ns1__GetGxdataUpTime *, const char*);
SOAP_FMAC1 struct __ns1__GetGxdataUpTime * SOAP_FMAC2 soap_instantiate___ns1__GetGxdataUpTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetGxdataUpTime * soap_new___ns1__GetGxdataUpTime(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetGxdataUpTime(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetGxdataUpTime * soap_new_req___ns1__GetGxdataUpTime(
	struct soap *soap)
{
	struct __ns1__GetGxdataUpTime *_p = ::soap_new___ns1__GetGxdataUpTime(soap);
	if (_p)
	{	::soap_default___ns1__GetGxdataUpTime(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetGxdataUpTime * soap_new_set___ns1__GetGxdataUpTime(
	struct soap *soap,
	_ns1__GetGxdataUpTime *ns1__GetGxdataUpTime)
{
	struct __ns1__GetGxdataUpTime *_p = ::soap_new___ns1__GetGxdataUpTime(soap);
	if (_p)
	{	::soap_default___ns1__GetGxdataUpTime(soap, _p);
		_p->ns1__GetGxdataUpTime = ns1__GetGxdataUpTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetGxdataUpTime(struct soap*, const struct __ns1__GetGxdataUpTime *, const char*, const char*);

inline int soap_write___ns1__GetGxdataUpTime(struct soap *soap, struct __ns1__GetGxdataUpTime const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetGxdataUpTime(soap, p), 0) || ::soap_put___ns1__GetGxdataUpTime(soap, p, "-ns1:GetGxdataUpTime", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetGxdataUpTime(struct soap *soap, const char *URL, struct __ns1__GetGxdataUpTime const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxdataUpTime(soap, p), 0) || ::soap_put___ns1__GetGxdataUpTime(soap, p, "-ns1:GetGxdataUpTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetGxdataUpTime(struct soap *soap, const char *URL, struct __ns1__GetGxdataUpTime const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetGxdataUpTime(soap, p), 0) || ::soap_put___ns1__GetGxdataUpTime(soap, p, "-ns1:GetGxdataUpTime", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetGxdataUpTime * SOAP_FMAC4 soap_get___ns1__GetGxdataUpTime(struct soap*, struct __ns1__GetGxdataUpTime *, const char*, const char*);

inline int soap_read___ns1__GetGxdataUpTime(struct soap *soap, struct __ns1__GetGxdataUpTime *p)
{
	if (p)
	{	::soap_default___ns1__GetGxdataUpTime(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetGxdataUpTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetGxdataUpTime(struct soap *soap, const char *URL, struct __ns1__GetGxdataUpTime *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetGxdataUpTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetGxdataUpTime(struct soap *soap, struct __ns1__GetGxdataUpTime *p)
{
	if (::soap_read___ns1__GetGxdataUpTime(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownAllPic_DEFINED
#define SOAP_TYPE___ns1__DownAllPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownAllPic(struct soap*, struct __ns1__DownAllPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownAllPic(struct soap*, const struct __ns1__DownAllPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownAllPic(struct soap*, const char*, int, const struct __ns1__DownAllPic *, const char*);
SOAP_FMAC3 struct __ns1__DownAllPic * SOAP_FMAC4 soap_in___ns1__DownAllPic(struct soap*, const char*, struct __ns1__DownAllPic *, const char*);
SOAP_FMAC1 struct __ns1__DownAllPic * SOAP_FMAC2 soap_instantiate___ns1__DownAllPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownAllPic * soap_new___ns1__DownAllPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownAllPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownAllPic * soap_new_req___ns1__DownAllPic(
	struct soap *soap)
{
	struct __ns1__DownAllPic *_p = ::soap_new___ns1__DownAllPic(soap);
	if (_p)
	{	::soap_default___ns1__DownAllPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownAllPic * soap_new_set___ns1__DownAllPic(
	struct soap *soap,
	_ns1__DownAllPic *ns1__DownAllPic)
{
	struct __ns1__DownAllPic *_p = ::soap_new___ns1__DownAllPic(soap);
	if (_p)
	{	::soap_default___ns1__DownAllPic(soap, _p);
		_p->ns1__DownAllPic = ns1__DownAllPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownAllPic(struct soap*, const struct __ns1__DownAllPic *, const char*, const char*);

inline int soap_write___ns1__DownAllPic(struct soap *soap, struct __ns1__DownAllPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownAllPic(soap, p), 0) || ::soap_put___ns1__DownAllPic(soap, p, "-ns1:DownAllPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownAllPic(struct soap *soap, const char *URL, struct __ns1__DownAllPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownAllPic(soap, p), 0) || ::soap_put___ns1__DownAllPic(soap, p, "-ns1:DownAllPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownAllPic(struct soap *soap, const char *URL, struct __ns1__DownAllPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownAllPic(soap, p), 0) || ::soap_put___ns1__DownAllPic(soap, p, "-ns1:DownAllPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownAllPic * SOAP_FMAC4 soap_get___ns1__DownAllPic(struct soap*, struct __ns1__DownAllPic *, const char*, const char*);

inline int soap_read___ns1__DownAllPic(struct soap *soap, struct __ns1__DownAllPic *p)
{
	if (p)
	{	::soap_default___ns1__DownAllPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownAllPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownAllPic(struct soap *soap, const char *URL, struct __ns1__DownAllPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownAllPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownAllPic(struct soap *soap, struct __ns1__DownAllPic *p)
{
	if (::soap_read___ns1__DownAllPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__DownPic_DEFINED
#define SOAP_TYPE___ns1__DownPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownPic(struct soap*, struct __ns1__DownPic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownPic(struct soap*, const struct __ns1__DownPic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownPic(struct soap*, const char*, int, const struct __ns1__DownPic *, const char*);
SOAP_FMAC3 struct __ns1__DownPic * SOAP_FMAC4 soap_in___ns1__DownPic(struct soap*, const char*, struct __ns1__DownPic *, const char*);
SOAP_FMAC1 struct __ns1__DownPic * SOAP_FMAC2 soap_instantiate___ns1__DownPic(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownPic * soap_new___ns1__DownPic(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__DownPic(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__DownPic * soap_new_req___ns1__DownPic(
	struct soap *soap)
{
	struct __ns1__DownPic *_p = ::soap_new___ns1__DownPic(soap);
	if (_p)
	{	::soap_default___ns1__DownPic(soap, _p);
	}
	return _p;
}

inline struct __ns1__DownPic * soap_new_set___ns1__DownPic(
	struct soap *soap,
	_ns1__DownPic *ns1__DownPic)
{
	struct __ns1__DownPic *_p = ::soap_new___ns1__DownPic(soap);
	if (_p)
	{	::soap_default___ns1__DownPic(soap, _p);
		_p->ns1__DownPic = ns1__DownPic;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownPic(struct soap*, const struct __ns1__DownPic *, const char*, const char*);

inline int soap_write___ns1__DownPic(struct soap *soap, struct __ns1__DownPic const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__DownPic(soap, p), 0) || ::soap_put___ns1__DownPic(soap, p, "-ns1:DownPic", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__DownPic(struct soap *soap, const char *URL, struct __ns1__DownPic const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownPic(soap, p), 0) || ::soap_put___ns1__DownPic(soap, p, "-ns1:DownPic", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__DownPic(struct soap *soap, const char *URL, struct __ns1__DownPic const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__DownPic(soap, p), 0) || ::soap_put___ns1__DownPic(soap, p, "-ns1:DownPic", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__DownPic * SOAP_FMAC4 soap_get___ns1__DownPic(struct soap*, struct __ns1__DownPic *, const char*, const char*);

inline int soap_read___ns1__DownPic(struct soap *soap, struct __ns1__DownPic *p)
{
	if (p)
	{	::soap_default___ns1__DownPic(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__DownPic(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__DownPic(struct soap *soap, const char *URL, struct __ns1__DownPic *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__DownPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__DownPic(struct soap *soap, struct __ns1__DownPic *p)
{
	if (::soap_read___ns1__DownPic(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SaveFileData_DEFINED
#define SOAP_TYPE___ns1__SaveFileData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveFileData(struct soap*, struct __ns1__SaveFileData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveFileData(struct soap*, const struct __ns1__SaveFileData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveFileData(struct soap*, const char*, int, const struct __ns1__SaveFileData *, const char*);
SOAP_FMAC3 struct __ns1__SaveFileData * SOAP_FMAC4 soap_in___ns1__SaveFileData(struct soap*, const char*, struct __ns1__SaveFileData *, const char*);
SOAP_FMAC1 struct __ns1__SaveFileData * SOAP_FMAC2 soap_instantiate___ns1__SaveFileData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveFileData * soap_new___ns1__SaveFileData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SaveFileData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SaveFileData * soap_new_req___ns1__SaveFileData(
	struct soap *soap)
{
	struct __ns1__SaveFileData *_p = ::soap_new___ns1__SaveFileData(soap);
	if (_p)
	{	::soap_default___ns1__SaveFileData(soap, _p);
	}
	return _p;
}

inline struct __ns1__SaveFileData * soap_new_set___ns1__SaveFileData(
	struct soap *soap,
	_ns1__SaveFileData *ns1__SaveFileData)
{
	struct __ns1__SaveFileData *_p = ::soap_new___ns1__SaveFileData(soap);
	if (_p)
	{	::soap_default___ns1__SaveFileData(soap, _p);
		_p->ns1__SaveFileData = ns1__SaveFileData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveFileData(struct soap*, const struct __ns1__SaveFileData *, const char*, const char*);

inline int soap_write___ns1__SaveFileData(struct soap *soap, struct __ns1__SaveFileData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SaveFileData(soap, p), 0) || ::soap_put___ns1__SaveFileData(soap, p, "-ns1:SaveFileData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SaveFileData(struct soap *soap, const char *URL, struct __ns1__SaveFileData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveFileData(soap, p), 0) || ::soap_put___ns1__SaveFileData(soap, p, "-ns1:SaveFileData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SaveFileData(struct soap *soap, const char *URL, struct __ns1__SaveFileData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveFileData(soap, p), 0) || ::soap_put___ns1__SaveFileData(soap, p, "-ns1:SaveFileData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SaveFileData * SOAP_FMAC4 soap_get___ns1__SaveFileData(struct soap*, struct __ns1__SaveFileData *, const char*, const char*);

inline int soap_read___ns1__SaveFileData(struct soap *soap, struct __ns1__SaveFileData *p)
{
	if (p)
	{	::soap_default___ns1__SaveFileData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SaveFileData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SaveFileData(struct soap *soap, const char *URL, struct __ns1__SaveFileData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SaveFileData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SaveFileData(struct soap *soap, struct __ns1__SaveFileData *p)
{
	if (::soap_read___ns1__SaveFileData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__SaveData_DEFINED
#define SOAP_TYPE___ns1__SaveData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveData(struct soap*, struct __ns1__SaveData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveData(struct soap*, const struct __ns1__SaveData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveData(struct soap*, const char*, int, const struct __ns1__SaveData *, const char*);
SOAP_FMAC3 struct __ns1__SaveData * SOAP_FMAC4 soap_in___ns1__SaveData(struct soap*, const char*, struct __ns1__SaveData *, const char*);
SOAP_FMAC1 struct __ns1__SaveData * SOAP_FMAC2 soap_instantiate___ns1__SaveData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveData * soap_new___ns1__SaveData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__SaveData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__SaveData * soap_new_req___ns1__SaveData(
	struct soap *soap)
{
	struct __ns1__SaveData *_p = ::soap_new___ns1__SaveData(soap);
	if (_p)
	{	::soap_default___ns1__SaveData(soap, _p);
	}
	return _p;
}

inline struct __ns1__SaveData * soap_new_set___ns1__SaveData(
	struct soap *soap,
	_ns1__SaveData *ns1__SaveData)
{
	struct __ns1__SaveData *_p = ::soap_new___ns1__SaveData(soap);
	if (_p)
	{	::soap_default___ns1__SaveData(soap, _p);
		_p->ns1__SaveData = ns1__SaveData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveData(struct soap*, const struct __ns1__SaveData *, const char*, const char*);

inline int soap_write___ns1__SaveData(struct soap *soap, struct __ns1__SaveData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__SaveData(soap, p), 0) || ::soap_put___ns1__SaveData(soap, p, "-ns1:SaveData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__SaveData(struct soap *soap, const char *URL, struct __ns1__SaveData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveData(soap, p), 0) || ::soap_put___ns1__SaveData(soap, p, "-ns1:SaveData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__SaveData(struct soap *soap, const char *URL, struct __ns1__SaveData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__SaveData(soap, p), 0) || ::soap_put___ns1__SaveData(soap, p, "-ns1:SaveData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__SaveData * SOAP_FMAC4 soap_get___ns1__SaveData(struct soap*, struct __ns1__SaveData *, const char*, const char*);

inline int soap_read___ns1__SaveData(struct soap *soap, struct __ns1__SaveData *p)
{
	if (p)
	{	::soap_default___ns1__SaveData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__SaveData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__SaveData(struct soap *soap, const char *URL, struct __ns1__SaveData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__SaveData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__SaveData(struct soap *soap, struct __ns1__SaveData *p)
{
	if (::soap_read___ns1__SaveData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__ExecuteSql_DEFINED
#define SOAP_TYPE___ns1__ExecuteSql_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteSql(struct soap*, struct __ns1__ExecuteSql *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteSql(struct soap*, const struct __ns1__ExecuteSql *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteSql(struct soap*, const char*, int, const struct __ns1__ExecuteSql *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteSql * SOAP_FMAC4 soap_in___ns1__ExecuteSql(struct soap*, const char*, struct __ns1__ExecuteSql *, const char*);
SOAP_FMAC1 struct __ns1__ExecuteSql * SOAP_FMAC2 soap_instantiate___ns1__ExecuteSql(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ExecuteSql * soap_new___ns1__ExecuteSql(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__ExecuteSql(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ExecuteSql * soap_new_req___ns1__ExecuteSql(
	struct soap *soap)
{
	struct __ns1__ExecuteSql *_p = ::soap_new___ns1__ExecuteSql(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSql(soap, _p);
	}
	return _p;
}

inline struct __ns1__ExecuteSql * soap_new_set___ns1__ExecuteSql(
	struct soap *soap,
	_ns1__ExecuteSql *ns1__ExecuteSql)
{
	struct __ns1__ExecuteSql *_p = ::soap_new___ns1__ExecuteSql(soap);
	if (_p)
	{	::soap_default___ns1__ExecuteSql(soap, _p);
		_p->ns1__ExecuteSql = ns1__ExecuteSql;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteSql(struct soap*, const struct __ns1__ExecuteSql *, const char*, const char*);

inline int soap_write___ns1__ExecuteSql(struct soap *soap, struct __ns1__ExecuteSql const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__ExecuteSql(soap, p), 0) || ::soap_put___ns1__ExecuteSql(soap, p, "-ns1:ExecuteSql", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__ExecuteSql(struct soap *soap, const char *URL, struct __ns1__ExecuteSql const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSql(soap, p), 0) || ::soap_put___ns1__ExecuteSql(soap, p, "-ns1:ExecuteSql", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__ExecuteSql(struct soap *soap, const char *URL, struct __ns1__ExecuteSql const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__ExecuteSql(soap, p), 0) || ::soap_put___ns1__ExecuteSql(soap, p, "-ns1:ExecuteSql", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__ExecuteSql * SOAP_FMAC4 soap_get___ns1__ExecuteSql(struct soap*, struct __ns1__ExecuteSql *, const char*, const char*);

inline int soap_read___ns1__ExecuteSql(struct soap *soap, struct __ns1__ExecuteSql *p)
{
	if (p)
	{	::soap_default___ns1__ExecuteSql(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__ExecuteSql(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__ExecuteSql(struct soap *soap, const char *URL, struct __ns1__ExecuteSql *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__ExecuteSql(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__ExecuteSql(struct soap *soap, struct __ns1__ExecuteSql *p)
{
	if (::soap_read___ns1__ExecuteSql(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__QueryDataCount_DEFINED
#define SOAP_TYPE___ns1__QueryDataCount_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryDataCount(struct soap*, struct __ns1__QueryDataCount *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryDataCount(struct soap*, const struct __ns1__QueryDataCount *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryDataCount(struct soap*, const char*, int, const struct __ns1__QueryDataCount *, const char*);
SOAP_FMAC3 struct __ns1__QueryDataCount * SOAP_FMAC4 soap_in___ns1__QueryDataCount(struct soap*, const char*, struct __ns1__QueryDataCount *, const char*);
SOAP_FMAC1 struct __ns1__QueryDataCount * SOAP_FMAC2 soap_instantiate___ns1__QueryDataCount(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryDataCount * soap_new___ns1__QueryDataCount(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__QueryDataCount(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__QueryDataCount * soap_new_req___ns1__QueryDataCount(
	struct soap *soap)
{
	struct __ns1__QueryDataCount *_p = ::soap_new___ns1__QueryDataCount(soap);
	if (_p)
	{	::soap_default___ns1__QueryDataCount(soap, _p);
	}
	return _p;
}

inline struct __ns1__QueryDataCount * soap_new_set___ns1__QueryDataCount(
	struct soap *soap,
	_ns1__QueryDataCount *ns1__QueryDataCount)
{
	struct __ns1__QueryDataCount *_p = ::soap_new___ns1__QueryDataCount(soap);
	if (_p)
	{	::soap_default___ns1__QueryDataCount(soap, _p);
		_p->ns1__QueryDataCount = ns1__QueryDataCount;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryDataCount(struct soap*, const struct __ns1__QueryDataCount *, const char*, const char*);

inline int soap_write___ns1__QueryDataCount(struct soap *soap, struct __ns1__QueryDataCount const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__QueryDataCount(soap, p), 0) || ::soap_put___ns1__QueryDataCount(soap, p, "-ns1:QueryDataCount", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__QueryDataCount(struct soap *soap, const char *URL, struct __ns1__QueryDataCount const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryDataCount(soap, p), 0) || ::soap_put___ns1__QueryDataCount(soap, p, "-ns1:QueryDataCount", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__QueryDataCount(struct soap *soap, const char *URL, struct __ns1__QueryDataCount const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryDataCount(soap, p), 0) || ::soap_put___ns1__QueryDataCount(soap, p, "-ns1:QueryDataCount", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__QueryDataCount * SOAP_FMAC4 soap_get___ns1__QueryDataCount(struct soap*, struct __ns1__QueryDataCount *, const char*, const char*);

inline int soap_read___ns1__QueryDataCount(struct soap *soap, struct __ns1__QueryDataCount *p)
{
	if (p)
	{	::soap_default___ns1__QueryDataCount(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__QueryDataCount(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__QueryDataCount(struct soap *soap, const char *URL, struct __ns1__QueryDataCount *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__QueryDataCount(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__QueryDataCount(struct soap *soap, struct __ns1__QueryDataCount *p)
{
	if (::soap_read___ns1__QueryDataCount(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__QueryData_DEFINED
#define SOAP_TYPE___ns1__QueryData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryData(struct soap*, struct __ns1__QueryData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryData(struct soap*, const struct __ns1__QueryData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryData(struct soap*, const char*, int, const struct __ns1__QueryData *, const char*);
SOAP_FMAC3 struct __ns1__QueryData * SOAP_FMAC4 soap_in___ns1__QueryData(struct soap*, const char*, struct __ns1__QueryData *, const char*);
SOAP_FMAC1 struct __ns1__QueryData * SOAP_FMAC2 soap_instantiate___ns1__QueryData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryData * soap_new___ns1__QueryData(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__QueryData(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__QueryData * soap_new_req___ns1__QueryData(
	struct soap *soap)
{
	struct __ns1__QueryData *_p = ::soap_new___ns1__QueryData(soap);
	if (_p)
	{	::soap_default___ns1__QueryData(soap, _p);
	}
	return _p;
}

inline struct __ns1__QueryData * soap_new_set___ns1__QueryData(
	struct soap *soap,
	_ns1__QueryData *ns1__QueryData)
{
	struct __ns1__QueryData *_p = ::soap_new___ns1__QueryData(soap);
	if (_p)
	{	::soap_default___ns1__QueryData(soap, _p);
		_p->ns1__QueryData = ns1__QueryData;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryData(struct soap*, const struct __ns1__QueryData *, const char*, const char*);

inline int soap_write___ns1__QueryData(struct soap *soap, struct __ns1__QueryData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__QueryData(soap, p), 0) || ::soap_put___ns1__QueryData(soap, p, "-ns1:QueryData", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__QueryData(struct soap *soap, const char *URL, struct __ns1__QueryData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryData(soap, p), 0) || ::soap_put___ns1__QueryData(soap, p, "-ns1:QueryData", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__QueryData(struct soap *soap, const char *URL, struct __ns1__QueryData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__QueryData(soap, p), 0) || ::soap_put___ns1__QueryData(soap, p, "-ns1:QueryData", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__QueryData * SOAP_FMAC4 soap_get___ns1__QueryData(struct soap*, struct __ns1__QueryData *, const char*, const char*);

inline int soap_read___ns1__QueryData(struct soap *soap, struct __ns1__QueryData *p)
{
	if (p)
	{	::soap_default___ns1__QueryData(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__QueryData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__QueryData(struct soap *soap, const char *URL, struct __ns1__QueryData *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__QueryData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__QueryData(struct soap *soap, struct __ns1__QueryData *p)
{
	if (::soap_read___ns1__QueryData(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDBString_DEFINED
#define SOAP_TYPE___ns1__GetDBString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDBString(struct soap*, struct __ns1__GetDBString *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDBString(struct soap*, const struct __ns1__GetDBString *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDBString(struct soap*, const char*, int, const struct __ns1__GetDBString *, const char*);
SOAP_FMAC3 struct __ns1__GetDBString * SOAP_FMAC4 soap_in___ns1__GetDBString(struct soap*, const char*, struct __ns1__GetDBString *, const char*);
SOAP_FMAC1 struct __ns1__GetDBString * SOAP_FMAC2 soap_instantiate___ns1__GetDBString(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDBString * soap_new___ns1__GetDBString(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDBString(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDBString * soap_new_req___ns1__GetDBString(
	struct soap *soap)
{
	struct __ns1__GetDBString *_p = ::soap_new___ns1__GetDBString(soap);
	if (_p)
	{	::soap_default___ns1__GetDBString(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDBString * soap_new_set___ns1__GetDBString(
	struct soap *soap,
	_ns1__GetDBString *ns1__GetDBString)
{
	struct __ns1__GetDBString *_p = ::soap_new___ns1__GetDBString(soap);
	if (_p)
	{	::soap_default___ns1__GetDBString(soap, _p);
		_p->ns1__GetDBString = ns1__GetDBString;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDBString(struct soap*, const struct __ns1__GetDBString *, const char*, const char*);

inline int soap_write___ns1__GetDBString(struct soap *soap, struct __ns1__GetDBString const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDBString(soap, p), 0) || ::soap_put___ns1__GetDBString(soap, p, "-ns1:GetDBString", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDBString(struct soap *soap, const char *URL, struct __ns1__GetDBString const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDBString(soap, p), 0) || ::soap_put___ns1__GetDBString(soap, p, "-ns1:GetDBString", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDBString(struct soap *soap, const char *URL, struct __ns1__GetDBString const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDBString(soap, p), 0) || ::soap_put___ns1__GetDBString(soap, p, "-ns1:GetDBString", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDBString * SOAP_FMAC4 soap_get___ns1__GetDBString(struct soap*, struct __ns1__GetDBString *, const char*, const char*);

inline int soap_read___ns1__GetDBString(struct soap *soap, struct __ns1__GetDBString *p)
{
	if (p)
	{	::soap_default___ns1__GetDBString(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDBString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDBString(struct soap *soap, const char *URL, struct __ns1__GetDBString *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDBString(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDBString(struct soap *soap, struct __ns1__GetDBString *p)
{
	if (::soap_read___ns1__GetDBString(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__HelloWorld_DEFINED
#define SOAP_TYPE___ns1__HelloWorld_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorld(struct soap*, struct __ns1__HelloWorld *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorld(struct soap*, const struct __ns1__HelloWorld *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorld(struct soap*, const char*, int, const struct __ns1__HelloWorld *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorld * SOAP_FMAC4 soap_in___ns1__HelloWorld(struct soap*, const char*, struct __ns1__HelloWorld *, const char*);
SOAP_FMAC1 struct __ns1__HelloWorld * SOAP_FMAC2 soap_instantiate___ns1__HelloWorld(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__HelloWorld * soap_new___ns1__HelloWorld(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__HelloWorld(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__HelloWorld * soap_new_req___ns1__HelloWorld(
	struct soap *soap)
{
	struct __ns1__HelloWorld *_p = ::soap_new___ns1__HelloWorld(soap);
	if (_p)
	{	::soap_default___ns1__HelloWorld(soap, _p);
	}
	return _p;
}

inline struct __ns1__HelloWorld * soap_new_set___ns1__HelloWorld(
	struct soap *soap,
	_ns1__HelloWorld *ns1__HelloWorld)
{
	struct __ns1__HelloWorld *_p = ::soap_new___ns1__HelloWorld(soap);
	if (_p)
	{	::soap_default___ns1__HelloWorld(soap, _p);
		_p->ns1__HelloWorld = ns1__HelloWorld;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorld(struct soap*, const struct __ns1__HelloWorld *, const char*, const char*);

inline int soap_write___ns1__HelloWorld(struct soap *soap, struct __ns1__HelloWorld const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__HelloWorld(soap, p), 0) || ::soap_put___ns1__HelloWorld(soap, p, "-ns1:HelloWorld", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__HelloWorld(struct soap *soap, const char *URL, struct __ns1__HelloWorld const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__HelloWorld(soap, p), 0) || ::soap_put___ns1__HelloWorld(soap, p, "-ns1:HelloWorld", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__HelloWorld(struct soap *soap, const char *URL, struct __ns1__HelloWorld const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__HelloWorld(soap, p), 0) || ::soap_put___ns1__HelloWorld(soap, p, "-ns1:HelloWorld", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__HelloWorld * SOAP_FMAC4 soap_get___ns1__HelloWorld(struct soap*, struct __ns1__HelloWorld *, const char*, const char*);

inline int soap_read___ns1__HelloWorld(struct soap *soap, struct __ns1__HelloWorld *p)
{
	if (p)
	{	::soap_default___ns1__HelloWorld(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__HelloWorld(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__HelloWorld(struct soap *soap, const char *URL, struct __ns1__HelloWorld *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__HelloWorld(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__HelloWorld(struct soap *soap, struct __ns1__HelloWorld *p)
{
	if (::soap_read___ns1__HelloWorld(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__CheckDevCode_DEFINED
#define SOAP_TYPE___ns1__CheckDevCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckDevCode(struct soap*, struct __ns1__CheckDevCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckDevCode(struct soap*, const struct __ns1__CheckDevCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckDevCode(struct soap*, const char*, int, const struct __ns1__CheckDevCode *, const char*);
SOAP_FMAC3 struct __ns1__CheckDevCode * SOAP_FMAC4 soap_in___ns1__CheckDevCode(struct soap*, const char*, struct __ns1__CheckDevCode *, const char*);
SOAP_FMAC1 struct __ns1__CheckDevCode * SOAP_FMAC2 soap_instantiate___ns1__CheckDevCode(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckDevCode * soap_new___ns1__CheckDevCode(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CheckDevCode(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CheckDevCode * soap_new_req___ns1__CheckDevCode(
	struct soap *soap)
{
	struct __ns1__CheckDevCode *_p = ::soap_new___ns1__CheckDevCode(soap);
	if (_p)
	{	::soap_default___ns1__CheckDevCode(soap, _p);
	}
	return _p;
}

inline struct __ns1__CheckDevCode * soap_new_set___ns1__CheckDevCode(
	struct soap *soap,
	_ns1__CheckDevCode *ns1__CheckDevCode)
{
	struct __ns1__CheckDevCode *_p = ::soap_new___ns1__CheckDevCode(soap);
	if (_p)
	{	::soap_default___ns1__CheckDevCode(soap, _p);
		_p->ns1__CheckDevCode = ns1__CheckDevCode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckDevCode(struct soap*, const struct __ns1__CheckDevCode *, const char*, const char*);

inline int soap_write___ns1__CheckDevCode(struct soap *soap, struct __ns1__CheckDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CheckDevCode(soap, p), 0) || ::soap_put___ns1__CheckDevCode(soap, p, "-ns1:CheckDevCode", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CheckDevCode(struct soap *soap, const char *URL, struct __ns1__CheckDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckDevCode(soap, p), 0) || ::soap_put___ns1__CheckDevCode(soap, p, "-ns1:CheckDevCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CheckDevCode(struct soap *soap, const char *URL, struct __ns1__CheckDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckDevCode(soap, p), 0) || ::soap_put___ns1__CheckDevCode(soap, p, "-ns1:CheckDevCode", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CheckDevCode * SOAP_FMAC4 soap_get___ns1__CheckDevCode(struct soap*, struct __ns1__CheckDevCode *, const char*, const char*);

inline int soap_read___ns1__CheckDevCode(struct soap *soap, struct __ns1__CheckDevCode *p)
{
	if (p)
	{	::soap_default___ns1__CheckDevCode(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CheckDevCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CheckDevCode(struct soap *soap, const char *URL, struct __ns1__CheckDevCode *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CheckDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__CheckDevCode(struct soap *soap, struct __ns1__CheckDevCode *p)
{
	if (::soap_read___ns1__CheckDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetDevCode_DEFINED
#define SOAP_TYPE___ns1__GetDevCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDevCode(struct soap*, struct __ns1__GetDevCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDevCode(struct soap*, const struct __ns1__GetDevCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDevCode(struct soap*, const char*, int, const struct __ns1__GetDevCode *, const char*);
SOAP_FMAC3 struct __ns1__GetDevCode * SOAP_FMAC4 soap_in___ns1__GetDevCode(struct soap*, const char*, struct __ns1__GetDevCode *, const char*);
SOAP_FMAC1 struct __ns1__GetDevCode * SOAP_FMAC2 soap_instantiate___ns1__GetDevCode(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDevCode * soap_new___ns1__GetDevCode(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetDevCode(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetDevCode * soap_new_req___ns1__GetDevCode(
	struct soap *soap)
{
	struct __ns1__GetDevCode *_p = ::soap_new___ns1__GetDevCode(soap);
	if (_p)
	{	::soap_default___ns1__GetDevCode(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetDevCode * soap_new_set___ns1__GetDevCode(
	struct soap *soap,
	_ns1__GetDevCode *ns1__GetDevCode)
{
	struct __ns1__GetDevCode *_p = ::soap_new___ns1__GetDevCode(soap);
	if (_p)
	{	::soap_default___ns1__GetDevCode(soap, _p);
		_p->ns1__GetDevCode = ns1__GetDevCode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDevCode(struct soap*, const struct __ns1__GetDevCode *, const char*, const char*);

inline int soap_write___ns1__GetDevCode(struct soap *soap, struct __ns1__GetDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetDevCode(soap, p), 0) || ::soap_put___ns1__GetDevCode(soap, p, "-ns1:GetDevCode", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetDevCode(struct soap *soap, const char *URL, struct __ns1__GetDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevCode(soap, p), 0) || ::soap_put___ns1__GetDevCode(soap, p, "-ns1:GetDevCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetDevCode(struct soap *soap, const char *URL, struct __ns1__GetDevCode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetDevCode(soap, p), 0) || ::soap_put___ns1__GetDevCode(soap, p, "-ns1:GetDevCode", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetDevCode * SOAP_FMAC4 soap_get___ns1__GetDevCode(struct soap*, struct __ns1__GetDevCode *, const char*, const char*);

inline int soap_read___ns1__GetDevCode(struct soap *soap, struct __ns1__GetDevCode *p)
{
	if (p)
	{	::soap_default___ns1__GetDevCode(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetDevCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetDevCode(struct soap *soap, const char *URL, struct __ns1__GetDevCode *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetDevCode(struct soap *soap, struct __ns1__GetDevCode *p)
{
	if (::soap_read___ns1__GetDevCode(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetRyUnit_DEFINED
#define SOAP_TYPE___ns1__GetRyUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetRyUnit(struct soap*, struct __ns1__GetRyUnit *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetRyUnit(struct soap*, const struct __ns1__GetRyUnit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetRyUnit(struct soap*, const char*, int, const struct __ns1__GetRyUnit *, const char*);
SOAP_FMAC3 struct __ns1__GetRyUnit * SOAP_FMAC4 soap_in___ns1__GetRyUnit(struct soap*, const char*, struct __ns1__GetRyUnit *, const char*);
SOAP_FMAC1 struct __ns1__GetRyUnit * SOAP_FMAC2 soap_instantiate___ns1__GetRyUnit(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetRyUnit * soap_new___ns1__GetRyUnit(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetRyUnit(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetRyUnit * soap_new_req___ns1__GetRyUnit(
	struct soap *soap)
{
	struct __ns1__GetRyUnit *_p = ::soap_new___ns1__GetRyUnit(soap);
	if (_p)
	{	::soap_default___ns1__GetRyUnit(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetRyUnit * soap_new_set___ns1__GetRyUnit(
	struct soap *soap,
	_ns1__GetRyUnit *ns1__GetRyUnit)
{
	struct __ns1__GetRyUnit *_p = ::soap_new___ns1__GetRyUnit(soap);
	if (_p)
	{	::soap_default___ns1__GetRyUnit(soap, _p);
		_p->ns1__GetRyUnit = ns1__GetRyUnit;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetRyUnit(struct soap*, const struct __ns1__GetRyUnit *, const char*, const char*);

inline int soap_write___ns1__GetRyUnit(struct soap *soap, struct __ns1__GetRyUnit const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetRyUnit(soap, p), 0) || ::soap_put___ns1__GetRyUnit(soap, p, "-ns1:GetRyUnit", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetRyUnit(struct soap *soap, const char *URL, struct __ns1__GetRyUnit const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetRyUnit(soap, p), 0) || ::soap_put___ns1__GetRyUnit(soap, p, "-ns1:GetRyUnit", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetRyUnit(struct soap *soap, const char *URL, struct __ns1__GetRyUnit const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetRyUnit(soap, p), 0) || ::soap_put___ns1__GetRyUnit(soap, p, "-ns1:GetRyUnit", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetRyUnit * SOAP_FMAC4 soap_get___ns1__GetRyUnit(struct soap*, struct __ns1__GetRyUnit *, const char*, const char*);

inline int soap_read___ns1__GetRyUnit(struct soap *soap, struct __ns1__GetRyUnit *p)
{
	if (p)
	{	::soap_default___ns1__GetRyUnit(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetRyUnit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetRyUnit(struct soap *soap, const char *URL, struct __ns1__GetRyUnit *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetRyUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetRyUnit(struct soap *soap, struct __ns1__GetRyUnit *p)
{
	if (::soap_read___ns1__GetRyUnit(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__CheckLoginUser_DEFINED
#define SOAP_TYPE___ns1__CheckLoginUser_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckLoginUser(struct soap*, struct __ns1__CheckLoginUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckLoginUser(struct soap*, const struct __ns1__CheckLoginUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckLoginUser(struct soap*, const char*, int, const struct __ns1__CheckLoginUser *, const char*);
SOAP_FMAC3 struct __ns1__CheckLoginUser * SOAP_FMAC4 soap_in___ns1__CheckLoginUser(struct soap*, const char*, struct __ns1__CheckLoginUser *, const char*);
SOAP_FMAC1 struct __ns1__CheckLoginUser * SOAP_FMAC2 soap_instantiate___ns1__CheckLoginUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CheckLoginUser * soap_new___ns1__CheckLoginUser(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__CheckLoginUser(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__CheckLoginUser * soap_new_req___ns1__CheckLoginUser(
	struct soap *soap)
{
	struct __ns1__CheckLoginUser *_p = ::soap_new___ns1__CheckLoginUser(soap);
	if (_p)
	{	::soap_default___ns1__CheckLoginUser(soap, _p);
	}
	return _p;
}

inline struct __ns1__CheckLoginUser * soap_new_set___ns1__CheckLoginUser(
	struct soap *soap,
	_ns1__CheckLoginUser *ns1__CheckLoginUser)
{
	struct __ns1__CheckLoginUser *_p = ::soap_new___ns1__CheckLoginUser(soap);
	if (_p)
	{	::soap_default___ns1__CheckLoginUser(soap, _p);
		_p->ns1__CheckLoginUser = ns1__CheckLoginUser;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckLoginUser(struct soap*, const struct __ns1__CheckLoginUser *, const char*, const char*);

inline int soap_write___ns1__CheckLoginUser(struct soap *soap, struct __ns1__CheckLoginUser const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__CheckLoginUser(soap, p), 0) || ::soap_put___ns1__CheckLoginUser(soap, p, "-ns1:CheckLoginUser", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__CheckLoginUser(struct soap *soap, const char *URL, struct __ns1__CheckLoginUser const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckLoginUser(soap, p), 0) || ::soap_put___ns1__CheckLoginUser(soap, p, "-ns1:CheckLoginUser", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__CheckLoginUser(struct soap *soap, const char *URL, struct __ns1__CheckLoginUser const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__CheckLoginUser(soap, p), 0) || ::soap_put___ns1__CheckLoginUser(soap, p, "-ns1:CheckLoginUser", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__CheckLoginUser * SOAP_FMAC4 soap_get___ns1__CheckLoginUser(struct soap*, struct __ns1__CheckLoginUser *, const char*, const char*);

inline int soap_read___ns1__CheckLoginUser(struct soap *soap, struct __ns1__CheckLoginUser *p)
{
	if (p)
	{	::soap_default___ns1__CheckLoginUser(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__CheckLoginUser(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__CheckLoginUser(struct soap *soap, const char *URL, struct __ns1__CheckLoginUser *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__CheckLoginUser(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__CheckLoginUser(struct soap *soap, struct __ns1__CheckLoginUser *p)
{
	if (::soap_read___ns1__CheckLoginUser(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetPropName_DEFINED
#define SOAP_TYPE___ns1__GetPropName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPropName(struct soap*, struct __ns1__GetPropName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPropName(struct soap*, const struct __ns1__GetPropName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPropName(struct soap*, const char*, int, const struct __ns1__GetPropName *, const char*);
SOAP_FMAC3 struct __ns1__GetPropName * SOAP_FMAC4 soap_in___ns1__GetPropName(struct soap*, const char*, struct __ns1__GetPropName *, const char*);
SOAP_FMAC1 struct __ns1__GetPropName * SOAP_FMAC2 soap_instantiate___ns1__GetPropName(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPropName * soap_new___ns1__GetPropName(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetPropName(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetPropName * soap_new_req___ns1__GetPropName(
	struct soap *soap)
{
	struct __ns1__GetPropName *_p = ::soap_new___ns1__GetPropName(soap);
	if (_p)
	{	::soap_default___ns1__GetPropName(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetPropName * soap_new_set___ns1__GetPropName(
	struct soap *soap,
	_ns1__GetPropName *ns1__GetPropName)
{
	struct __ns1__GetPropName *_p = ::soap_new___ns1__GetPropName(soap);
	if (_p)
	{	::soap_default___ns1__GetPropName(soap, _p);
		_p->ns1__GetPropName = ns1__GetPropName;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPropName(struct soap*, const struct __ns1__GetPropName *, const char*, const char*);

inline int soap_write___ns1__GetPropName(struct soap *soap, struct __ns1__GetPropName const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetPropName(soap, p), 0) || ::soap_put___ns1__GetPropName(soap, p, "-ns1:GetPropName", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetPropName(struct soap *soap, const char *URL, struct __ns1__GetPropName const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropName(soap, p), 0) || ::soap_put___ns1__GetPropName(soap, p, "-ns1:GetPropName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetPropName(struct soap *soap, const char *URL, struct __ns1__GetPropName const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropName(soap, p), 0) || ::soap_put___ns1__GetPropName(soap, p, "-ns1:GetPropName", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetPropName * SOAP_FMAC4 soap_get___ns1__GetPropName(struct soap*, struct __ns1__GetPropName *, const char*, const char*);

inline int soap_read___ns1__GetPropName(struct soap *soap, struct __ns1__GetPropName *p)
{
	if (p)
	{	::soap_default___ns1__GetPropName(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetPropName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetPropName(struct soap *soap, const char *URL, struct __ns1__GetPropName *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetPropName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetPropName(struct soap *soap, struct __ns1__GetPropName *p)
{
	if (::soap_read___ns1__GetPropName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetPropList_DEFINED
#define SOAP_TYPE___ns1__GetPropList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetPropList(struct soap*, struct __ns1__GetPropList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetPropList(struct soap*, const struct __ns1__GetPropList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetPropList(struct soap*, const char*, int, const struct __ns1__GetPropList *, const char*);
SOAP_FMAC3 struct __ns1__GetPropList * SOAP_FMAC4 soap_in___ns1__GetPropList(struct soap*, const char*, struct __ns1__GetPropList *, const char*);
SOAP_FMAC1 struct __ns1__GetPropList * SOAP_FMAC2 soap_instantiate___ns1__GetPropList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetPropList * soap_new___ns1__GetPropList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetPropList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetPropList * soap_new_req___ns1__GetPropList(
	struct soap *soap)
{
	struct __ns1__GetPropList *_p = ::soap_new___ns1__GetPropList(soap);
	if (_p)
	{	::soap_default___ns1__GetPropList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetPropList * soap_new_set___ns1__GetPropList(
	struct soap *soap,
	_ns1__GetPropList *ns1__GetPropList)
{
	struct __ns1__GetPropList *_p = ::soap_new___ns1__GetPropList(soap);
	if (_p)
	{	::soap_default___ns1__GetPropList(soap, _p);
		_p->ns1__GetPropList = ns1__GetPropList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetPropList(struct soap*, const struct __ns1__GetPropList *, const char*, const char*);

inline int soap_write___ns1__GetPropList(struct soap *soap, struct __ns1__GetPropList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetPropList(soap, p), 0) || ::soap_put___ns1__GetPropList(soap, p, "-ns1:GetPropList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetPropList(struct soap *soap, const char *URL, struct __ns1__GetPropList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropList(soap, p), 0) || ::soap_put___ns1__GetPropList(soap, p, "-ns1:GetPropList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetPropList(struct soap *soap, const char *URL, struct __ns1__GetPropList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetPropList(soap, p), 0) || ::soap_put___ns1__GetPropList(soap, p, "-ns1:GetPropList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetPropList * SOAP_FMAC4 soap_get___ns1__GetPropList(struct soap*, struct __ns1__GetPropList *, const char*, const char*);

inline int soap_read___ns1__GetPropList(struct soap *soap, struct __ns1__GetPropList *p)
{
	if (p)
	{	::soap_default___ns1__GetPropList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetPropList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetPropList(struct soap *soap, const char *URL, struct __ns1__GetPropList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetPropList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetPropList(struct soap *soap, struct __ns1__GetPropList *p)
{
	if (::soap_read___ns1__GetPropList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskDevFlowChartList_DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskDevFlowChartList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskDevFlowChartList(struct soap*, struct __ns1__GetYjzhZskDevFlowChartList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskDevFlowChartList(struct soap*, const struct __ns1__GetYjzhZskDevFlowChartList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskDevFlowChartList(struct soap*, const char*, int, const struct __ns1__GetYjzhZskDevFlowChartList *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskDevFlowChartList * SOAP_FMAC4 soap_in___ns1__GetYjzhZskDevFlowChartList(struct soap*, const char*, struct __ns1__GetYjzhZskDevFlowChartList *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskDevFlowChartList * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskDevFlowChartList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskDevFlowChartList * soap_new___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskDevFlowChartList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskDevFlowChartList * soap_new_req___ns1__GetYjzhZskDevFlowChartList(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskDevFlowChartList *_p = ::soap_new___ns1__GetYjzhZskDevFlowChartList(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskDevFlowChartList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskDevFlowChartList * soap_new_set___ns1__GetYjzhZskDevFlowChartList(
	struct soap *soap,
	_ns1__GetYjzhZskDevFlowChartList *ns1__GetYjzhZskDevFlowChartList)
{
	struct __ns1__GetYjzhZskDevFlowChartList *_p = ::soap_new___ns1__GetYjzhZskDevFlowChartList(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskDevFlowChartList(soap, _p);
		_p->ns1__GetYjzhZskDevFlowChartList = ns1__GetYjzhZskDevFlowChartList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskDevFlowChartList(struct soap*, const struct __ns1__GetYjzhZskDevFlowChartList *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, struct __ns1__GetYjzhZskDevFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskDevFlowChartList(soap, p), 0) || ::soap_put___ns1__GetYjzhZskDevFlowChartList(soap, p, "-ns1:GetYjzhZskDevFlowChartList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskDevFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskDevFlowChartList(soap, p), 0) || ::soap_put___ns1__GetYjzhZskDevFlowChartList(soap, p, "-ns1:GetYjzhZskDevFlowChartList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskDevFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskDevFlowChartList(soap, p), 0) || ::soap_put___ns1__GetYjzhZskDevFlowChartList(soap, p, "-ns1:GetYjzhZskDevFlowChartList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskDevFlowChartList * SOAP_FMAC4 soap_get___ns1__GetYjzhZskDevFlowChartList(struct soap*, struct __ns1__GetYjzhZskDevFlowChartList *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, struct __ns1__GetYjzhZskDevFlowChartList *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskDevFlowChartList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskDevFlowChartList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskDevFlowChartList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskDevFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, struct __ns1__GetYjzhZskDevFlowChartList *p)
{
	if (::soap_read___ns1__GetYjzhZskDevFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskOtherFlowChartList_DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskOtherFlowChartList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskOtherFlowChartList(struct soap*, struct __ns1__GetYjzhZskOtherFlowChartList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskOtherFlowChartList(struct soap*, const struct __ns1__GetYjzhZskOtherFlowChartList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskOtherFlowChartList(struct soap*, const char*, int, const struct __ns1__GetYjzhZskOtherFlowChartList *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskOtherFlowChartList * SOAP_FMAC4 soap_in___ns1__GetYjzhZskOtherFlowChartList(struct soap*, const char*, struct __ns1__GetYjzhZskOtherFlowChartList *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskOtherFlowChartList * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskOtherFlowChartList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskOtherFlowChartList * soap_new___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskOtherFlowChartList(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskOtherFlowChartList * soap_new_req___ns1__GetYjzhZskOtherFlowChartList(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskOtherFlowChartList *_p = ::soap_new___ns1__GetYjzhZskOtherFlowChartList(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskOtherFlowChartList(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskOtherFlowChartList * soap_new_set___ns1__GetYjzhZskOtherFlowChartList(
	struct soap *soap,
	_ns1__GetYjzhZskOtherFlowChartList *ns1__GetYjzhZskOtherFlowChartList)
{
	struct __ns1__GetYjzhZskOtherFlowChartList *_p = ::soap_new___ns1__GetYjzhZskOtherFlowChartList(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskOtherFlowChartList(soap, _p);
		_p->ns1__GetYjzhZskOtherFlowChartList = ns1__GetYjzhZskOtherFlowChartList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskOtherFlowChartList(struct soap*, const struct __ns1__GetYjzhZskOtherFlowChartList *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, struct __ns1__GetYjzhZskOtherFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskOtherFlowChartList(soap, p), 0) || ::soap_put___ns1__GetYjzhZskOtherFlowChartList(soap, p, "-ns1:GetYjzhZskOtherFlowChartList", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskOtherFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskOtherFlowChartList(soap, p), 0) || ::soap_put___ns1__GetYjzhZskOtherFlowChartList(soap, p, "-ns1:GetYjzhZskOtherFlowChartList", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskOtherFlowChartList const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskOtherFlowChartList(soap, p), 0) || ::soap_put___ns1__GetYjzhZskOtherFlowChartList(soap, p, "-ns1:GetYjzhZskOtherFlowChartList", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskOtherFlowChartList * SOAP_FMAC4 soap_get___ns1__GetYjzhZskOtherFlowChartList(struct soap*, struct __ns1__GetYjzhZskOtherFlowChartList *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, struct __ns1__GetYjzhZskOtherFlowChartList *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskOtherFlowChartList(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskOtherFlowChartList(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskOtherFlowChartList *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskOtherFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, struct __ns1__GetYjzhZskOtherFlowChartList *p)
{
	if (::soap_read___ns1__GetYjzhZskOtherFlowChartList(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__GetYjzhZskGzFlow_DEFINED
#define SOAP_TYPE___ns1__GetYjzhZskGzFlow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYjzhZskGzFlow(struct soap*, struct __ns1__GetYjzhZskGzFlow *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYjzhZskGzFlow(struct soap*, const struct __ns1__GetYjzhZskGzFlow *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYjzhZskGzFlow(struct soap*, const char*, int, const struct __ns1__GetYjzhZskGzFlow *, const char*);
SOAP_FMAC3 struct __ns1__GetYjzhZskGzFlow * SOAP_FMAC4 soap_in___ns1__GetYjzhZskGzFlow(struct soap*, const char*, struct __ns1__GetYjzhZskGzFlow *, const char*);
SOAP_FMAC1 struct __ns1__GetYjzhZskGzFlow * SOAP_FMAC2 soap_instantiate___ns1__GetYjzhZskGzFlow(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYjzhZskGzFlow * soap_new___ns1__GetYjzhZskGzFlow(struct soap *soap, int n = -1)
{
	return soap_instantiate___ns1__GetYjzhZskGzFlow(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__GetYjzhZskGzFlow * soap_new_req___ns1__GetYjzhZskGzFlow(
	struct soap *soap)
{
	struct __ns1__GetYjzhZskGzFlow *_p = ::soap_new___ns1__GetYjzhZskGzFlow(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskGzFlow(soap, _p);
	}
	return _p;
}

inline struct __ns1__GetYjzhZskGzFlow * soap_new_set___ns1__GetYjzhZskGzFlow(
	struct soap *soap,
	_ns1__GetYjzhZskGzFlow *ns1__GetYjzhZskGzFlow)
{
	struct __ns1__GetYjzhZskGzFlow *_p = ::soap_new___ns1__GetYjzhZskGzFlow(soap);
	if (_p)
	{	::soap_default___ns1__GetYjzhZskGzFlow(soap, _p);
		_p->ns1__GetYjzhZskGzFlow = ns1__GetYjzhZskGzFlow;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYjzhZskGzFlow(struct soap*, const struct __ns1__GetYjzhZskGzFlow *, const char*, const char*);

inline int soap_write___ns1__GetYjzhZskGzFlow(struct soap *soap, struct __ns1__GetYjzhZskGzFlow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (::soap_serialize___ns1__GetYjzhZskGzFlow(soap, p), 0) || ::soap_put___ns1__GetYjzhZskGzFlow(soap, p, "-ns1:GetYjzhZskGzFlow", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___ns1__GetYjzhZskGzFlow(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskGzFlow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskGzFlow(soap, p), 0) || ::soap_put___ns1__GetYjzhZskGzFlow(soap, p, "-ns1:GetYjzhZskGzFlow", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___ns1__GetYjzhZskGzFlow(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskGzFlow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (::soap_serialize___ns1__GetYjzhZskGzFlow(soap, p), 0) || ::soap_put___ns1__GetYjzhZskGzFlow(soap, p, "-ns1:GetYjzhZskGzFlow", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__GetYjzhZskGzFlow * SOAP_FMAC4 soap_get___ns1__GetYjzhZskGzFlow(struct soap*, struct __ns1__GetYjzhZskGzFlow *, const char*, const char*);

inline int soap_read___ns1__GetYjzhZskGzFlow(struct soap *soap, struct __ns1__GetYjzhZskGzFlow *p)
{
	if (p)
	{	::soap_default___ns1__GetYjzhZskGzFlow(soap, p);
		if (soap_begin_recv(soap) || ::soap_get___ns1__GetYjzhZskGzFlow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___ns1__GetYjzhZskGzFlow(struct soap *soap, const char *URL, struct __ns1__GetYjzhZskGzFlow *p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read___ns1__GetYjzhZskGzFlow(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv___ns1__GetYjzhZskGzFlow(struct soap *soap, struct __ns1__GetYjzhZskGzFlow *p)
{
	if (::soap_read___ns1__GetYjzhZskGzFlow(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetYjzhZskAlarmTypes_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetYjzhZskAlarmTypes_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetYjzhZskAlarmTypes(struct soap*, _ns1__GetYjzhZskAlarmTypes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetYjzhZskAlarmTypes(struct soap*, const char *, int, _ns1__GetYjzhZskAlarmTypes *const*, const char *);
SOAP_FMAC3 _ns1__GetYjzhZskAlarmTypes ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetYjzhZskAlarmTypes(struct soap*, const char*, _ns1__GetYjzhZskAlarmTypes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetYjzhZskAlarmTypes(struct soap*, _ns1__GetYjzhZskAlarmTypes *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskAlarmTypes ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetYjzhZskAlarmTypes(struct soap*, _ns1__GetYjzhZskAlarmTypes **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SelectYjzhDevice_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SelectYjzhDevice_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectYjzhDevice(struct soap*, _ns1__SelectYjzhDevice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectYjzhDevice(struct soap*, const char *, int, _ns1__SelectYjzhDevice *const*, const char *);
SOAP_FMAC3 _ns1__SelectYjzhDevice ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectYjzhDevice(struct soap*, const char*, _ns1__SelectYjzhDevice **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectYjzhDevice(struct soap*, _ns1__SelectYjzhDevice *const*, const char*, const char*);
SOAP_FMAC3 _ns1__SelectYjzhDevice ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectYjzhDevice(struct soap*, _ns1__SelectYjzhDevice **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SelectYjzhStation_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SelectYjzhStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SelectYjzhStation(struct soap*, _ns1__SelectYjzhStation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SelectYjzhStation(struct soap*, const char *, int, _ns1__SelectYjzhStation *const*, const char *);
SOAP_FMAC3 _ns1__SelectYjzhStation ** SOAP_FMAC4 soap_in_PointerTo_ns1__SelectYjzhStation(struct soap*, const char*, _ns1__SelectYjzhStation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SelectYjzhStation(struct soap*, _ns1__SelectYjzhStation *const*, const char*, const char*);
SOAP_FMAC3 _ns1__SelectYjzhStation ** SOAP_FMAC4 soap_get_PointerTo_ns1__SelectYjzhStation(struct soap*, _ns1__SelectYjzhStation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SaveMapFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SaveMapFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SaveMapFile(struct soap*, _ns1__SaveMapFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SaveMapFile(struct soap*, const char *, int, _ns1__SaveMapFile *const*, const char *);
SOAP_FMAC3 _ns1__SaveMapFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__SaveMapFile(struct soap*, const char*, _ns1__SaveMapFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SaveMapFile(struct soap*, _ns1__SaveMapFile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__SaveMapFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__SaveMapFile(struct soap*, _ns1__SaveMapFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GzGetDeviceStruct_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GzGetDeviceStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GzGetDeviceStruct(struct soap*, _ns1__GzGetDeviceStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GzGetDeviceStruct(struct soap*, const char *, int, _ns1__GzGetDeviceStruct *const*, const char *);
SOAP_FMAC3 _ns1__GzGetDeviceStruct ** SOAP_FMAC4 soap_in_PointerTo_ns1__GzGetDeviceStruct(struct soap*, const char*, _ns1__GzGetDeviceStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GzGetDeviceStruct(struct soap*, _ns1__GzGetDeviceStruct *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GzGetDeviceStruct ** SOAP_FMAC4 soap_get_PointerTo_ns1__GzGetDeviceStruct(struct soap*, _ns1__GzGetDeviceStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GzGetTypeList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GzGetTypeList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GzGetTypeList(struct soap*, _ns1__GzGetTypeList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GzGetTypeList(struct soap*, const char *, int, _ns1__GzGetTypeList *const*, const char *);
SOAP_FMAC3 _ns1__GzGetTypeList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GzGetTypeList(struct soap*, const char*, _ns1__GzGetTypeList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GzGetTypeList(struct soap*, _ns1__GzGetTypeList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GzGetTypeList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GzGetTypeList(struct soap*, _ns1__GzGetTypeList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SGCDrawEmf_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SGCDrawEmf_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SGCDrawEmf(struct soap*, _ns1__SGCDrawEmf *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SGCDrawEmf(struct soap*, const char *, int, _ns1__SGCDrawEmf *const*, const char *);
SOAP_FMAC3 _ns1__SGCDrawEmf ** SOAP_FMAC4 soap_in_PointerTo_ns1__SGCDrawEmf(struct soap*, const char*, _ns1__SGCDrawEmf **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SGCDrawEmf(struct soap*, _ns1__SGCDrawEmf *const*, const char*, const char*);
SOAP_FMAC3 _ns1__SGCDrawEmf ** SOAP_FMAC4 soap_get_PointerTo_ns1__SGCDrawEmf(struct soap*, _ns1__SGCDrawEmf **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__FlowChartEmf_DEFINED
#define SOAP_TYPE_PointerTo_ns1__FlowChartEmf_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__FlowChartEmf(struct soap*, _ns1__FlowChartEmf *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__FlowChartEmf(struct soap*, const char *, int, _ns1__FlowChartEmf *const*, const char *);
SOAP_FMAC3 _ns1__FlowChartEmf ** SOAP_FMAC4 soap_in_PointerTo_ns1__FlowChartEmf(struct soap*, const char*, _ns1__FlowChartEmf **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__FlowChartEmf(struct soap*, _ns1__FlowChartEmf *const*, const char*, const char*);
SOAP_FMAC3 _ns1__FlowChartEmf ** SOAP_FMAC4 soap_get_PointerTo_ns1__FlowChartEmf(struct soap*, _ns1__FlowChartEmf **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetZhouQi_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetZhouQi_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetZhouQi(struct soap*, _ns1__GetZhouQi *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetZhouQi(struct soap*, const char *, int, _ns1__GetZhouQi *const*, const char *);
SOAP_FMAC3 _ns1__GetZhouQi ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetZhouQi(struct soap*, const char*, _ns1__GetZhouQi **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetZhouQi(struct soap*, _ns1__GetZhouQi *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetZhouQi ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetZhouQi(struct soap*, _ns1__GetZhouQi **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__JiChaoQi_DEFINED
#define SOAP_TYPE_PointerTo_ns1__JiChaoQi_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__JiChaoQi(struct soap*, _ns1__JiChaoQi *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__JiChaoQi(struct soap*, const char *, int, _ns1__JiChaoQi *const*, const char *);
SOAP_FMAC3 _ns1__JiChaoQi ** SOAP_FMAC4 soap_in_PointerTo_ns1__JiChaoQi(struct soap*, const char*, _ns1__JiChaoQi **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__JiChaoQi(struct soap*, _ns1__JiChaoQi *const*, const char*, const char*);
SOAP_FMAC3 _ns1__JiChaoQi ** SOAP_FMAC4 soap_get_PointerTo_ns1__JiChaoQi(struct soap*, _ns1__JiChaoQi **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ChaoQi_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ChaoQi_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ChaoQi(struct soap*, _ns1__ChaoQi *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ChaoQi(struct soap*, const char *, int, _ns1__ChaoQi *const*, const char *);
SOAP_FMAC3 _ns1__ChaoQi ** SOAP_FMAC4 soap_in_PointerTo_ns1__ChaoQi(struct soap*, const char*, _ns1__ChaoQi **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ChaoQi(struct soap*, _ns1__ChaoQi *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ChaoQi ** SOAP_FMAC4 soap_get_PointerTo_ns1__ChaoQi(struct soap*, _ns1__ChaoQi **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__OpenMapExe_DEFINED
#define SOAP_TYPE_PointerTo_ns1__OpenMapExe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__OpenMapExe(struct soap*, _ns1__OpenMapExe *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__OpenMapExe(struct soap*, const char *, int, _ns1__OpenMapExe *const*, const char *);
SOAP_FMAC3 _ns1__OpenMapExe ** SOAP_FMAC4 soap_in_PointerTo_ns1__OpenMapExe(struct soap*, const char*, _ns1__OpenMapExe **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__OpenMapExe(struct soap*, _ns1__OpenMapExe *const*, const char*, const char*);
SOAP_FMAC3 _ns1__OpenMapExe ** SOAP_FMAC4 soap_get_PointerTo_ns1__OpenMapExe(struct soap*, _ns1__OpenMapExe **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetEmfPngFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetEmfPngFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetEmfPngFile(struct soap*, _ns1__GetEmfPngFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetEmfPngFile(struct soap*, const char *, int, _ns1__GetEmfPngFile *const*, const char *);
SOAP_FMAC3 _ns1__GetEmfPngFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetEmfPngFile(struct soap*, const char*, _ns1__GetEmfPngFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetEmfPngFile(struct soap*, _ns1__GetEmfPngFile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetEmfPngFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetEmfPngFile(struct soap*, _ns1__GetEmfPngFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetEmfPngVer_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetEmfPngVer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetEmfPngVer(struct soap*, _ns1__GetEmfPngVer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetEmfPngVer(struct soap*, const char *, int, _ns1__GetEmfPngVer *const*, const char *);
SOAP_FMAC3 _ns1__GetEmfPngVer ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetEmfPngVer(struct soap*, const char*, _ns1__GetEmfPngVer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetEmfPngVer(struct soap*, _ns1__GetEmfPngVer *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetEmfPngVer ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetEmfPngVer(struct soap*, _ns1__GetEmfPngVer **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__OpenProcess_DEFINED
#define SOAP_TYPE_PointerTo_ns1__OpenProcess_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__OpenProcess(struct soap*, _ns1__OpenProcess *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__OpenProcess(struct soap*, const char *, int, _ns1__OpenProcess *const*, const char *);
SOAP_FMAC3 _ns1__OpenProcess ** SOAP_FMAC4 soap_in_PointerTo_ns1__OpenProcess(struct soap*, const char*, _ns1__OpenProcess **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__OpenProcess(struct soap*, _ns1__OpenProcess *const*, const char*, const char*);
SOAP_FMAC3 _ns1__OpenProcess ** SOAP_FMAC4 soap_get_PointerTo_ns1__OpenProcess(struct soap*, _ns1__OpenProcess **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMangeMapUpdate_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMangeMapUpdate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMangeMapUpdate(struct soap*, _ns1__GetMangeMapUpdate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMangeMapUpdate(struct soap*, const char *, int, _ns1__GetMangeMapUpdate *const*, const char *);
SOAP_FMAC3 _ns1__GetMangeMapUpdate ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMangeMapUpdate(struct soap*, const char*, _ns1__GetMangeMapUpdate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMangeMapUpdate(struct soap*, _ns1__GetMangeMapUpdate *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMangeMapUpdate ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMangeMapUpdate(struct soap*, _ns1__GetMangeMapUpdate **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetUnitMapVer_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetUnitMapVer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUnitMapVer(struct soap*, _ns1__GetUnitMapVer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUnitMapVer(struct soap*, const char *, int, _ns1__GetUnitMapVer *const*, const char *);
SOAP_FMAC3 _ns1__GetUnitMapVer ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUnitMapVer(struct soap*, const char*, _ns1__GetUnitMapVer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUnitMapVer(struct soap*, _ns1__GetUnitMapVer *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetUnitMapVer ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUnitMapVer(struct soap*, _ns1__GetUnitMapVer **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UpdateGzclMap_DEFINED
#define SOAP_TYPE_PointerTo_ns1__UpdateGzclMap_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpdateGzclMap(struct soap*, _ns1__UpdateGzclMap *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpdateGzclMap(struct soap*, const char *, int, _ns1__UpdateGzclMap *const*, const char *);
SOAP_FMAC3 _ns1__UpdateGzclMap ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpdateGzclMap(struct soap*, const char*, _ns1__UpdateGzclMap **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpdateGzclMap(struct soap*, _ns1__UpdateGzclMap *const*, const char*, const char*);
SOAP_FMAC3 _ns1__UpdateGzclMap ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpdateGzclMap(struct soap*, _ns1__UpdateGzclMap **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMapListTime_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMapListTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMapListTime(struct soap*, _ns1__GetMapListTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMapListTime(struct soap*, const char *, int, _ns1__GetMapListTime *const*, const char *);
SOAP_FMAC3 _ns1__GetMapListTime ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMapListTime(struct soap*, const char*, _ns1__GetMapListTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMapListTime(struct soap*, _ns1__GetMapListTime *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMapListTime ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMapListTime(struct soap*, _ns1__GetMapListTime **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ServerLevel_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ServerLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ServerLevel(struct soap*, _ns1__ServerLevel *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ServerLevel(struct soap*, const char *, int, _ns1__ServerLevel *const*, const char *);
SOAP_FMAC3 _ns1__ServerLevel ** SOAP_FMAC4 soap_in_PointerTo_ns1__ServerLevel(struct soap*, const char*, _ns1__ServerLevel **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ServerLevel(struct soap*, _ns1__ServerLevel *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ServerLevel ** SOAP_FMAC4 soap_get_PointerTo_ns1__ServerLevel(struct soap*, _ns1__ServerLevel **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetTableData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetTableData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetTableData(struct soap*, _ns1__GetTableData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetTableData(struct soap*, const char *, int, _ns1__GetTableData *const*, const char *);
SOAP_FMAC3 _ns1__GetTableData ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetTableData(struct soap*, const char*, _ns1__GetTableData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetTableData(struct soap*, _ns1__GetTableData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetTableData ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetTableData(struct soap*, _ns1__GetTableData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMap_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMap_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMap(struct soap*, _ns1__GetMap *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMap(struct soap*, const char *, int, _ns1__GetMap *const*, const char *);
SOAP_FMAC3 _ns1__GetMap ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMap(struct soap*, const char*, _ns1__GetMap **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMap(struct soap*, _ns1__GetMap *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMap ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMap(struct soap*, _ns1__GetMap **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CheckMapVer_DEFINED
#define SOAP_TYPE_PointerTo_ns1__CheckMapVer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckMapVer(struct soap*, _ns1__CheckMapVer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckMapVer(struct soap*, const char *, int, _ns1__CheckMapVer *const*, const char *);
SOAP_FMAC3 _ns1__CheckMapVer ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckMapVer(struct soap*, const char*, _ns1__CheckMapVer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckMapVer(struct soap*, _ns1__CheckMapVer *const*, const char*, const char*);
SOAP_FMAC3 _ns1__CheckMapVer ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckMapVer(struct soap*, _ns1__CheckMapVer **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMangeXb_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMangeXb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMangeXb(struct soap*, _ns1__GetMangeXb *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMangeXb(struct soap*, const char *, int, _ns1__GetMangeXb *const*, const char *);
SOAP_FMAC3 _ns1__GetMangeXb ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMangeXb(struct soap*, const char*, _ns1__GetMangeXb **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMangeXb(struct soap*, _ns1__GetMangeXb *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMangeXb ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMangeXb(struct soap*, _ns1__GetMangeXb **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMangeUnit_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMangeUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMangeUnit(struct soap*, _ns1__GetMangeUnit *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMangeUnit(struct soap*, const char *, int, _ns1__GetMangeUnit *const*, const char *);
SOAP_FMAC3 _ns1__GetMangeUnit ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMangeUnit(struct soap*, const char*, _ns1__GetMangeUnit **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMangeUnit(struct soap*, _ns1__GetMangeUnit *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMangeUnit ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMangeUnit(struct soap*, _ns1__GetMangeUnit **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMaList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMaList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMaList(struct soap*, _ns1__GetMaList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMaList(struct soap*, const char *, int, _ns1__GetMaList *const*, const char *);
SOAP_FMAC3 _ns1__GetMaList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMaList(struct soap*, const char*, _ns1__GetMaList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMaList(struct soap*, _ns1__GetMaList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMaList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMaList(struct soap*, _ns1__GetMaList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMapDeviceData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMapDeviceData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMapDeviceData(struct soap*, _ns1__GetMapDeviceData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMapDeviceData(struct soap*, const char *, int, _ns1__GetMapDeviceData *const*, const char *);
SOAP_FMAC3 _ns1__GetMapDeviceData ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMapDeviceData(struct soap*, const char*, _ns1__GetMapDeviceData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMapDeviceData(struct soap*, _ns1__GetMapDeviceData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMapDeviceData ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMapDeviceData(struct soap*, _ns1__GetMapDeviceData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMapTabName_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMapTabName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMapTabName(struct soap*, _ns1__GetMapTabName *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMapTabName(struct soap*, const char *, int, _ns1__GetMapTabName *const*, const char *);
SOAP_FMAC3 _ns1__GetMapTabName ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMapTabName(struct soap*, const char*, _ns1__GetMapTabName **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMapTabName(struct soap*, _ns1__GetMapTabName *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMapTabName ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMapTabName(struct soap*, _ns1__GetMapTabName **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMapUpdateTime_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMapUpdateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMapUpdateTime(struct soap*, _ns1__GetMapUpdateTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMapUpdateTime(struct soap*, const char *, int, _ns1__GetMapUpdateTime *const*, const char *);
SOAP_FMAC3 _ns1__GetMapUpdateTime ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMapUpdateTime(struct soap*, const char*, _ns1__GetMapUpdateTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMapUpdateTime(struct soap*, _ns1__GetMapUpdateTime *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMapUpdateTime ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMapUpdateTime(struct soap*, _ns1__GetMapUpdateTime **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__WriteFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__WriteFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__WriteFile(struct soap*, _ns1__WriteFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__WriteFile(struct soap*, const char *, int, _ns1__WriteFile *const*, const char *);
SOAP_FMAC3 _ns1__WriteFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__WriteFile(struct soap*, const char*, _ns1__WriteFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__WriteFile(struct soap*, _ns1__WriteFile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__WriteFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__WriteFile(struct soap*, _ns1__WriteFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownLoadFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownLoadFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownLoadFile(struct soap*, _ns1__DownLoadFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownLoadFile(struct soap*, const char *, int, _ns1__DownLoadFile *const*, const char *);
SOAP_FMAC3 _ns1__DownLoadFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownLoadFile(struct soap*, const char*, _ns1__DownLoadFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownLoadFile(struct soap*, _ns1__DownLoadFile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownLoadFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownLoadFile(struct soap*, _ns1__DownLoadFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteSqlForFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ExecuteSqlForFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ExecuteSqlForFile(struct soap*, _ns1__ExecuteSqlForFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ExecuteSqlForFile(struct soap*, const char *, int, _ns1__ExecuteSqlForFile *const*, const char *);
SOAP_FMAC3 _ns1__ExecuteSqlForFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__ExecuteSqlForFile(struct soap*, const char*, _ns1__ExecuteSqlForFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ExecuteSqlForFile(struct soap*, _ns1__ExecuteSqlForFile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlForFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__ExecuteSqlForFile(struct soap*, _ns1__ExecuteSqlForFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetFieldInfo_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetFieldInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetFieldInfo(struct soap*, _ns1__GetFieldInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetFieldInfo(struct soap*, const char *, int, _ns1__GetFieldInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetFieldInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetFieldInfo(struct soap*, const char*, _ns1__GetFieldInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetFieldInfo(struct soap*, _ns1__GetFieldInfo *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetFieldInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetFieldInfo(struct soap*, _ns1__GetFieldInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__IsOracleTable_DEFINED
#define SOAP_TYPE_PointerTo_ns1__IsOracleTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__IsOracleTable(struct soap*, _ns1__IsOracleTable *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__IsOracleTable(struct soap*, const char *, int, _ns1__IsOracleTable *const*, const char *);
SOAP_FMAC3 _ns1__IsOracleTable ** SOAP_FMAC4 soap_in_PointerTo_ns1__IsOracleTable(struct soap*, const char*, _ns1__IsOracleTable **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__IsOracleTable(struct soap*, _ns1__IsOracleTable *const*, const char*, const char*);
SOAP_FMAC3 _ns1__IsOracleTable ** SOAP_FMAC4 soap_get_PointerTo_ns1__IsOracleTable(struct soap*, _ns1__IsOracleTable **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetTabList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetTabList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetTabList(struct soap*, _ns1__GetTabList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetTabList(struct soap*, const char *, int, _ns1__GetTabList *const*, const char *);
SOAP_FMAC3 _ns1__GetTabList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetTabList(struct soap*, const char*, _ns1__GetTabList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetTabList(struct soap*, _ns1__GetTabList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetTabList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetTabList(struct soap*, _ns1__GetTabList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownCQData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownCQData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownCQData(struct soap*, _ns1__DownCQData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownCQData(struct soap*, const char *, int, _ns1__DownCQData *const*, const char *);
SOAP_FMAC3 _ns1__DownCQData ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownCQData(struct soap*, const char*, _ns1__DownCQData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownCQData(struct soap*, _ns1__DownCQData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownCQData ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownCQData(struct soap*, _ns1__DownCQData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__AlterTable_DEFINED
#define SOAP_TYPE_PointerTo_ns1__AlterTable_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AlterTable(struct soap*, _ns1__AlterTable *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AlterTable(struct soap*, const char *, int, _ns1__AlterTable *const*, const char *);
SOAP_FMAC3 _ns1__AlterTable ** SOAP_FMAC4 soap_in_PointerTo_ns1__AlterTable(struct soap*, const char*, _ns1__AlterTable **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AlterTable(struct soap*, _ns1__AlterTable *const*, const char*, const char*);
SOAP_FMAC3 _ns1__AlterTable ** SOAP_FMAC4 soap_get_PointerTo_ns1__AlterTable(struct soap*, _ns1__AlterTable **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetFileNew_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetFileNew_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetFileNew(struct soap*, _ns1__GetFileNew *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetFileNew(struct soap*, const char *, int, _ns1__GetFileNew *const*, const char *);
SOAP_FMAC3 _ns1__GetFileNew ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetFileNew(struct soap*, const char*, _ns1__GetFileNew **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetFileNew(struct soap*, _ns1__GetFileNew *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetFileNew ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetFileNew(struct soap*, _ns1__GetFileNew **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownMapfile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownMapfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownMapfile(struct soap*, _ns1__DownMapfile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownMapfile(struct soap*, const char *, int, _ns1__DownMapfile *const*, const char *);
SOAP_FMAC3 _ns1__DownMapfile ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownMapfile(struct soap*, const char*, _ns1__DownMapfile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownMapfile(struct soap*, _ns1__DownMapfile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownMapfile ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownMapfile(struct soap*, _ns1__DownMapfile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDownFileInfo_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDownFileInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDownFileInfo(struct soap*, _ns1__GetDownFileInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDownFileInfo(struct soap*, const char *, int, _ns1__GetDownFileInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetDownFileInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDownFileInfo(struct soap*, const char*, _ns1__GetDownFileInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDownFileInfo(struct soap*, _ns1__GetDownFileInfo *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDownFileInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDownFileInfo(struct soap*, _ns1__GetDownFileInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetGxDeviceData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetGxDeviceData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetGxDeviceData(struct soap*, _ns1__GetGxDeviceData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetGxDeviceData(struct soap*, const char *, int, _ns1__GetGxDeviceData *const*, const char *);
SOAP_FMAC3 _ns1__GetGxDeviceData ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetGxDeviceData(struct soap*, const char*, _ns1__GetGxDeviceData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetGxDeviceData(struct soap*, _ns1__GetGxDeviceData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetGxDeviceData ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetGxDeviceData(struct soap*, _ns1__GetGxDeviceData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetMapDeviceType_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetMapDeviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetMapDeviceType(struct soap*, _ns1__GetMapDeviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetMapDeviceType(struct soap*, const char *, int, _ns1__GetMapDeviceType *const*, const char *);
SOAP_FMAC3 _ns1__GetMapDeviceType ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetMapDeviceType(struct soap*, const char*, _ns1__GetMapDeviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetMapDeviceType(struct soap*, _ns1__GetMapDeviceType *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetMapDeviceType ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetMapDeviceType(struct soap*, _ns1__GetMapDeviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetXbStationList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetXbStationList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetXbStationList(struct soap*, _ns1__GetXbStationList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetXbStationList(struct soap*, const char *, int, _ns1__GetXbStationList *const*, const char *);
SOAP_FMAC3 _ns1__GetXbStationList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetXbStationList(struct soap*, const char*, _ns1__GetXbStationList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetXbStationList(struct soap*, _ns1__GetXbStationList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetXbStationList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetXbStationList(struct soap*, _ns1__GetXbStationList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetXbList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetXbList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetXbList(struct soap*, _ns1__GetXbList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetXbList(struct soap*, const char *, int, _ns1__GetXbList *const*, const char *);
SOAP_FMAC3 _ns1__GetXbList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetXbList(struct soap*, const char*, _ns1__GetXbList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetXbList(struct soap*, _ns1__GetXbList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetXbList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetXbList(struct soap*, _ns1__GetXbList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetFileSize_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetFileSize_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetFileSize(struct soap*, _ns1__GetFileSize *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetFileSize(struct soap*, const char *, int, _ns1__GetFileSize *const*, const char *);
SOAP_FMAC3 _ns1__GetFileSize ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetFileSize(struct soap*, const char*, _ns1__GetFileSize **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetFileSize(struct soap*, _ns1__GetFileSize *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetFileSize ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetFileSize(struct soap*, _ns1__GetFileSize **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetUnitPersonInfo_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetUnitPersonInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUnitPersonInfo(struct soap*, _ns1__GetUnitPersonInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUnitPersonInfo(struct soap*, const char *, int, _ns1__GetUnitPersonInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetUnitPersonInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUnitPersonInfo(struct soap*, const char*, _ns1__GetUnitPersonInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUnitPersonInfo(struct soap*, _ns1__GetUnitPersonInfo *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetUnitPersonInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUnitPersonInfo(struct soap*, _ns1__GetUnitPersonInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetUnitStruct_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetUnitStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUnitStruct(struct soap*, _ns1__GetUnitStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUnitStruct(struct soap*, const char *, int, _ns1__GetUnitStruct *const*, const char *);
SOAP_FMAC3 _ns1__GetUnitStruct ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUnitStruct(struct soap*, const char*, _ns1__GetUnitStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUnitStruct(struct soap*, _ns1__GetUnitStruct *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetUnitStruct ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUnitStruct(struct soap*, _ns1__GetUnitStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetUnitStation_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetUnitStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUnitStation(struct soap*, _ns1__GetUnitStation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUnitStation(struct soap*, const char *, int, _ns1__GetUnitStation *const*, const char *);
SOAP_FMAC3 _ns1__GetUnitStation ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUnitStation(struct soap*, const char*, _ns1__GetUnitStation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUnitStation(struct soap*, _ns1__GetUnitStation *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetUnitStation ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUnitStation(struct soap*, _ns1__GetUnitStation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDwList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDwList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDwList(struct soap*, _ns1__GetDwList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDwList(struct soap*, const char *, int, _ns1__GetDwList *const*, const char *);
SOAP_FMAC3 _ns1__GetDwList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDwList(struct soap*, const char*, _ns1__GetDwList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDwList(struct soap*, _ns1__GetDwList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDwList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDwList(struct soap*, _ns1__GetDwList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetOpenFireInfo_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetOpenFireInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetOpenFireInfo(struct soap*, _ns1__GetOpenFireInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetOpenFireInfo(struct soap*, const char *, int, _ns1__GetOpenFireInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetOpenFireInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetOpenFireInfo(struct soap*, const char*, _ns1__GetOpenFireInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetOpenFireInfo(struct soap*, _ns1__GetOpenFireInfo *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetOpenFireInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetOpenFireInfo(struct soap*, _ns1__GetOpenFireInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__MobDownLoadData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__MobDownLoadData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__MobDownLoadData(struct soap*, _ns1__MobDownLoadData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__MobDownLoadData(struct soap*, const char *, int, _ns1__MobDownLoadData *const*, const char *);
SOAP_FMAC3 _ns1__MobDownLoadData ** SOAP_FMAC4 soap_in_PointerTo_ns1__MobDownLoadData(struct soap*, const char*, _ns1__MobDownLoadData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__MobDownLoadData(struct soap*, _ns1__MobDownLoadData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__MobDownLoadData ** SOAP_FMAC4 soap_get_PointerTo_ns1__MobDownLoadData(struct soap*, _ns1__MobDownLoadData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownLoadMobGPSData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownLoadMobGPSData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownLoadMobGPSData(struct soap*, _ns1__DownLoadMobGPSData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownLoadMobGPSData(struct soap*, const char *, int, _ns1__DownLoadMobGPSData *const*, const char *);
SOAP_FMAC3 _ns1__DownLoadMobGPSData ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownLoadMobGPSData(struct soap*, const char*, _ns1__DownLoadMobGPSData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownLoadMobGPSData(struct soap*, _ns1__DownLoadMobGPSData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownLoadMobGPSData ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownLoadMobGPSData(struct soap*, _ns1__DownLoadMobGPSData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDcsData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDcsData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDcsData(struct soap*, _ns1__GetDcsData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDcsData(struct soap*, const char *, int, _ns1__GetDcsData *const*, const char *);
SOAP_FMAC3 _ns1__GetDcsData ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDcsData(struct soap*, const char*, _ns1__GetDcsData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDcsData(struct soap*, _ns1__GetDcsData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDcsData ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDcsData(struct soap*, _ns1__GetDcsData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetBgImg_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetBgImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetBgImg(struct soap*, _ns1__GetBgImg *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetBgImg(struct soap*, const char *, int, _ns1__GetBgImg *const*, const char *);
SOAP_FMAC3 _ns1__GetBgImg ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetBgImg(struct soap*, const char*, _ns1__GetBgImg **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetBgImg(struct soap*, _ns1__GetBgImg *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetBgImg ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetBgImg(struct soap*, _ns1__GetBgImg **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDevPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDevPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDevPic(struct soap*, _ns1__GetDevPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDevPic(struct soap*, const char *, int, _ns1__GetDevPic *const*, const char *);
SOAP_FMAC3 _ns1__GetDevPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDevPic(struct soap*, const char*, _ns1__GetDevPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDevPic(struct soap*, _ns1__GetDevPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDevPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDevPic(struct soap*, _ns1__GetDevPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetJxPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetJxPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetJxPic(struct soap*, _ns1__GetJxPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetJxPic(struct soap*, const char *, int, _ns1__GetJxPic *const*, const char *);
SOAP_FMAC3 _ns1__GetJxPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetJxPic(struct soap*, const char*, _ns1__GetJxPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetJxPic(struct soap*, _ns1__GetJxPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetJxPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetJxPic(struct soap*, _ns1__GetJxPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetStationJxData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetStationJxData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetStationJxData(struct soap*, _ns1__GetStationJxData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetStationJxData(struct soap*, const char *, int, _ns1__GetStationJxData *const*, const char *);
SOAP_FMAC3 _ns1__GetStationJxData ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetStationJxData(struct soap*, const char*, _ns1__GetStationJxData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetStationJxData(struct soap*, _ns1__GetStationJxData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetStationJxData ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetStationJxData(struct soap*, _ns1__GetStationJxData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetJxData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetJxData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetJxData(struct soap*, _ns1__GetJxData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetJxData(struct soap*, const char *, int, _ns1__GetJxData *const*, const char *);
SOAP_FMAC3 _ns1__GetJxData ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetJxData(struct soap*, const char*, _ns1__GetJxData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetJxData(struct soap*, _ns1__GetJxData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetJxData ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetJxData(struct soap*, _ns1__GetJxData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDeviceXj_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDeviceXj_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDeviceXj(struct soap*, _ns1__GetDeviceXj *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDeviceXj(struct soap*, const char *, int, _ns1__GetDeviceXj *const*, const char *);
SOAP_FMAC3 _ns1__GetDeviceXj ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDeviceXj(struct soap*, const char*, _ns1__GetDeviceXj **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDeviceXj(struct soap*, _ns1__GetDeviceXj *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDeviceXj ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDeviceXj(struct soap*, _ns1__GetDeviceXj **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDwPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDwPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDwPic(struct soap*, _ns1__GetDwPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDwPic(struct soap*, const char *, int, _ns1__GetDwPic *const*, const char *);
SOAP_FMAC3 _ns1__GetDwPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDwPic(struct soap*, const char*, _ns1__GetDwPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDwPic(struct soap*, _ns1__GetDwPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDwPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDwPic(struct soap*, _ns1__GetDwPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDwInfo_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDwInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDwInfo(struct soap*, _ns1__GetDwInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDwInfo(struct soap*, const char *, int, _ns1__GetDwInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetDwInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDwInfo(struct soap*, const char*, _ns1__GetDwInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDwInfo(struct soap*, _ns1__GetDwInfo *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDwInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDwInfo(struct soap*, _ns1__GetDwInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetPicNames_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetPicNames_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPicNames(struct soap*, _ns1__GetPicNames *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPicNames(struct soap*, const char *, int, _ns1__GetPicNames *const*, const char *);
SOAP_FMAC3 _ns1__GetPicNames ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPicNames(struct soap*, const char*, _ns1__GetPicNames **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPicNames(struct soap*, _ns1__GetPicNames *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetPicNames ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPicNames(struct soap*, _ns1__GetPicNames **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownloadPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownloadPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownloadPic(struct soap*, _ns1__DownloadPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownloadPic(struct soap*, const char *, int, _ns1__DownloadPic *const*, const char *);
SOAP_FMAC3 _ns1__DownloadPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownloadPic(struct soap*, const char*, _ns1__DownloadPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownloadPic(struct soap*, _ns1__DownloadPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownloadPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownloadPic(struct soap*, _ns1__DownloadPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__upPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__upPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__upPic(struct soap*, _ns1__upPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__upPic(struct soap*, const char *, int, _ns1__upPic *const*, const char *);
SOAP_FMAC3 _ns1__upPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__upPic(struct soap*, const char*, _ns1__upPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__upPic(struct soap*, _ns1__upPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__upPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__upPic(struct soap*, _ns1__upPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UpLoadFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__UpLoadFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpLoadFile(struct soap*, _ns1__UpLoadFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpLoadFile(struct soap*, const char *, int, _ns1__UpLoadFile *const*, const char *);
SOAP_FMAC3 _ns1__UpLoadFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpLoadFile(struct soap*, const char*, _ns1__UpLoadFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpLoadFile(struct soap*, _ns1__UpLoadFile *const*, const char*, const char*);
SOAP_FMAC3 _ns1__UpLoadFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpLoadFile(struct soap*, _ns1__UpLoadFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetAPVupdater_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetAPVupdater_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAPVupdater(struct soap*, _ns1__GetAPVupdater *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAPVupdater(struct soap*, const char *, int, _ns1__GetAPVupdater *const*, const char *);
SOAP_FMAC3 _ns1__GetAPVupdater ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAPVupdater(struct soap*, const char*, _ns1__GetAPVupdater **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAPVupdater(struct soap*, _ns1__GetAPVupdater *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetAPVupdater ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAPVupdater(struct soap*, _ns1__GetAPVupdater **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetXHYDGLXTupdater_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetXHYDGLXTupdater_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetXHYDGLXTupdater(struct soap*, _ns1__GetXHYDGLXTupdater *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetXHYDGLXTupdater(struct soap*, const char *, int, _ns1__GetXHYDGLXTupdater *const*, const char *);
SOAP_FMAC3 _ns1__GetXHYDGLXTupdater ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetXHYDGLXTupdater(struct soap*, const char*, _ns1__GetXHYDGLXTupdater **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetXHYDGLXTupdater(struct soap*, _ns1__GetXHYDGLXTupdater *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetXHYDGLXTupdater ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetXHYDGLXTupdater(struct soap*, _ns1__GetXHYDGLXTupdater **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteSqlForColb_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ExecuteSqlForColb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ExecuteSqlForColb(struct soap*, _ns1__ExecuteSqlForColb *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ExecuteSqlForColb(struct soap*, const char *, int, _ns1__ExecuteSqlForColb *const*, const char *);
SOAP_FMAC3 _ns1__ExecuteSqlForColb ** SOAP_FMAC4 soap_in_PointerTo_ns1__ExecuteSqlForColb(struct soap*, const char*, _ns1__ExecuteSqlForColb **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ExecuteSqlForColb(struct soap*, _ns1__ExecuteSqlForColb *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ExecuteSqlForColb ** SOAP_FMAC4 soap_get_PointerTo_ns1__ExecuteSqlForColb(struct soap*, _ns1__ExecuteSqlForColb **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UpLoadData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__UpLoadData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpLoadData(struct soap*, _ns1__UpLoadData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpLoadData(struct soap*, const char *, int, _ns1__UpLoadData *const*, const char *);
SOAP_FMAC3 _ns1__UpLoadData ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpLoadData(struct soap*, const char*, _ns1__UpLoadData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpLoadData(struct soap*, _ns1__UpLoadData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__UpLoadData ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpLoadData(struct soap*, _ns1__UpLoadData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__TcdSendup_DEFINED
#define SOAP_TYPE_PointerTo_ns1__TcdSendup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__TcdSendup(struct soap*, _ns1__TcdSendup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__TcdSendup(struct soap*, const char *, int, _ns1__TcdSendup *const*, const char *);
SOAP_FMAC3 _ns1__TcdSendup ** SOAP_FMAC4 soap_in_PointerTo_ns1__TcdSendup(struct soap*, const char*, _ns1__TcdSendup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__TcdSendup(struct soap*, _ns1__TcdSendup *const*, const char*, const char*);
SOAP_FMAC3 _ns1__TcdSendup ** SOAP_FMAC4 soap_get_PointerTo_ns1__TcdSendup(struct soap*, _ns1__TcdSendup **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__TcdQuery_DEFINED
#define SOAP_TYPE_PointerTo_ns1__TcdQuery_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__TcdQuery(struct soap*, _ns1__TcdQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__TcdQuery(struct soap*, const char *, int, _ns1__TcdQuery *const*, const char *);
SOAP_FMAC3 _ns1__TcdQuery ** SOAP_FMAC4 soap_in_PointerTo_ns1__TcdQuery(struct soap*, const char*, _ns1__TcdQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__TcdQuery(struct soap*, _ns1__TcdQuery *const*, const char*, const char*);
SOAP_FMAC3 _ns1__TcdQuery ** SOAP_FMAC4 soap_get_PointerTo_ns1__TcdQuery(struct soap*, _ns1__TcdQuery **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__QueryPhotobw_DEFINED
#define SOAP_TYPE_PointerTo_ns1__QueryPhotobw_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryPhotobw(struct soap*, _ns1__QueryPhotobw *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryPhotobw(struct soap*, const char *, int, _ns1__QueryPhotobw *const*, const char *);
SOAP_FMAC3 _ns1__QueryPhotobw ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryPhotobw(struct soap*, const char*, _ns1__QueryPhotobw **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryPhotobw(struct soap*, _ns1__QueryPhotobw *const*, const char*, const char*);
SOAP_FMAC3 _ns1__QueryPhotobw ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryPhotobw(struct soap*, _ns1__QueryPhotobw **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetOsDateTime_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetOsDateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetOsDateTime(struct soap*, _ns1__GetOsDateTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetOsDateTime(struct soap*, const char *, int, _ns1__GetOsDateTime *const*, const char *);
SOAP_FMAC3 _ns1__GetOsDateTime ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetOsDateTime(struct soap*, const char*, _ns1__GetOsDateTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetOsDateTime(struct soap*, _ns1__GetOsDateTime *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetOsDateTime ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetOsDateTime(struct soap*, _ns1__GetOsDateTime **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__signedUserInfo_DEFINED
#define SOAP_TYPE_PointerTo_ns1__signedUserInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__signedUserInfo(struct soap*, _ns1__signedUserInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__signedUserInfo(struct soap*, const char *, int, _ns1__signedUserInfo *const*, const char *);
SOAP_FMAC3 _ns1__signedUserInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__signedUserInfo(struct soap*, const char*, _ns1__signedUserInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__signedUserInfo(struct soap*, _ns1__signedUserInfo *const*, const char*, const char*);
SOAP_FMAC3 _ns1__signedUserInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__signedUserInfo(struct soap*, _ns1__signedUserInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetGxdataUpTime_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetGxdataUpTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetGxdataUpTime(struct soap*, _ns1__GetGxdataUpTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetGxdataUpTime(struct soap*, const char *, int, _ns1__GetGxdataUpTime *const*, const char *);
SOAP_FMAC3 _ns1__GetGxdataUpTime ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetGxdataUpTime(struct soap*, const char*, _ns1__GetGxdataUpTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetGxdataUpTime(struct soap*, _ns1__GetGxdataUpTime *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetGxdataUpTime ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetGxdataUpTime(struct soap*, _ns1__GetGxdataUpTime **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownAllPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownAllPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownAllPic(struct soap*, _ns1__DownAllPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownAllPic(struct soap*, const char *, int, _ns1__DownAllPic *const*, const char *);
SOAP_FMAC3 _ns1__DownAllPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownAllPic(struct soap*, const char*, _ns1__DownAllPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownAllPic(struct soap*, _ns1__DownAllPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownAllPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownAllPic(struct soap*, _ns1__DownAllPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__DownPic_DEFINED
#define SOAP_TYPE_PointerTo_ns1__DownPic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownPic(struct soap*, _ns1__DownPic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownPic(struct soap*, const char *, int, _ns1__DownPic *const*, const char *);
SOAP_FMAC3 _ns1__DownPic ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownPic(struct soap*, const char*, _ns1__DownPic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownPic(struct soap*, _ns1__DownPic *const*, const char*, const char*);
SOAP_FMAC3 _ns1__DownPic ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownPic(struct soap*, _ns1__DownPic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SaveFileData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SaveFileData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SaveFileData(struct soap*, _ns1__SaveFileData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SaveFileData(struct soap*, const char *, int, _ns1__SaveFileData *const*, const char *);
SOAP_FMAC3 _ns1__SaveFileData ** SOAP_FMAC4 soap_in_PointerTo_ns1__SaveFileData(struct soap*, const char*, _ns1__SaveFileData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SaveFileData(struct soap*, _ns1__SaveFileData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__SaveFileData ** SOAP_FMAC4 soap_get_PointerTo_ns1__SaveFileData(struct soap*, _ns1__SaveFileData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SaveData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SaveData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SaveData(struct soap*, _ns1__SaveData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SaveData(struct soap*, const char *, int, _ns1__SaveData *const*, const char *);
SOAP_FMAC3 _ns1__SaveData ** SOAP_FMAC4 soap_in_PointerTo_ns1__SaveData(struct soap*, const char*, _ns1__SaveData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SaveData(struct soap*, _ns1__SaveData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__SaveData ** SOAP_FMAC4 soap_get_PointerTo_ns1__SaveData(struct soap*, _ns1__SaveData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteSql_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ExecuteSql_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ExecuteSql(struct soap*, _ns1__ExecuteSql *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ExecuteSql(struct soap*, const char *, int, _ns1__ExecuteSql *const*, const char *);
SOAP_FMAC3 _ns1__ExecuteSql ** SOAP_FMAC4 soap_in_PointerTo_ns1__ExecuteSql(struct soap*, const char*, _ns1__ExecuteSql **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ExecuteSql(struct soap*, _ns1__ExecuteSql *const*, const char*, const char*);
SOAP_FMAC3 _ns1__ExecuteSql ** SOAP_FMAC4 soap_get_PointerTo_ns1__ExecuteSql(struct soap*, _ns1__ExecuteSql **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__QueryDataCount_DEFINED
#define SOAP_TYPE_PointerTo_ns1__QueryDataCount_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryDataCount(struct soap*, _ns1__QueryDataCount *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryDataCount(struct soap*, const char *, int, _ns1__QueryDataCount *const*, const char *);
SOAP_FMAC3 _ns1__QueryDataCount ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryDataCount(struct soap*, const char*, _ns1__QueryDataCount **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryDataCount(struct soap*, _ns1__QueryDataCount *const*, const char*, const char*);
SOAP_FMAC3 _ns1__QueryDataCount ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryDataCount(struct soap*, _ns1__QueryDataCount **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__QueryData_DEFINED
#define SOAP_TYPE_PointerTo_ns1__QueryData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryData(struct soap*, _ns1__QueryData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryData(struct soap*, const char *, int, _ns1__QueryData *const*, const char *);
SOAP_FMAC3 _ns1__QueryData ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryData(struct soap*, const char*, _ns1__QueryData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryData(struct soap*, _ns1__QueryData *const*, const char*, const char*);
SOAP_FMAC3 _ns1__QueryData ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryData(struct soap*, _ns1__QueryData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDBString_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDBString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDBString(struct soap*, _ns1__GetDBString *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDBString(struct soap*, const char *, int, _ns1__GetDBString *const*, const char *);
SOAP_FMAC3 _ns1__GetDBString ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDBString(struct soap*, const char*, _ns1__GetDBString **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDBString(struct soap*, _ns1__GetDBString *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDBString ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDBString(struct soap*, _ns1__GetDBString **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__HelloWorld_DEFINED
#define SOAP_TYPE_PointerTo_ns1__HelloWorld_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__HelloWorld(struct soap*, _ns1__HelloWorld *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__HelloWorld(struct soap*, const char *, int, _ns1__HelloWorld *const*, const char *);
SOAP_FMAC3 _ns1__HelloWorld ** SOAP_FMAC4 soap_in_PointerTo_ns1__HelloWorld(struct soap*, const char*, _ns1__HelloWorld **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__HelloWorld(struct soap*, _ns1__HelloWorld *const*, const char*, const char*);
SOAP_FMAC3 _ns1__HelloWorld ** SOAP_FMAC4 soap_get_PointerTo_ns1__HelloWorld(struct soap*, _ns1__HelloWorld **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CheckDevCode_DEFINED
#define SOAP_TYPE_PointerTo_ns1__CheckDevCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckDevCode(struct soap*, _ns1__CheckDevCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckDevCode(struct soap*, const char *, int, _ns1__CheckDevCode *const*, const char *);
SOAP_FMAC3 _ns1__CheckDevCode ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckDevCode(struct soap*, const char*, _ns1__CheckDevCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckDevCode(struct soap*, _ns1__CheckDevCode *const*, const char*, const char*);
SOAP_FMAC3 _ns1__CheckDevCode ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckDevCode(struct soap*, _ns1__CheckDevCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetDevCode_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetDevCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDevCode(struct soap*, _ns1__GetDevCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDevCode(struct soap*, const char *, int, _ns1__GetDevCode *const*, const char *);
SOAP_FMAC3 _ns1__GetDevCode ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDevCode(struct soap*, const char*, _ns1__GetDevCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDevCode(struct soap*, _ns1__GetDevCode *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetDevCode ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDevCode(struct soap*, _ns1__GetDevCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetRyUnit_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetRyUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetRyUnit(struct soap*, _ns1__GetRyUnit *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetRyUnit(struct soap*, const char *, int, _ns1__GetRyUnit *const*, const char *);
SOAP_FMAC3 _ns1__GetRyUnit ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetRyUnit(struct soap*, const char*, _ns1__GetRyUnit **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetRyUnit(struct soap*, _ns1__GetRyUnit *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetRyUnit ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetRyUnit(struct soap*, _ns1__GetRyUnit **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CheckLoginUser_DEFINED
#define SOAP_TYPE_PointerTo_ns1__CheckLoginUser_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckLoginUser(struct soap*, _ns1__CheckLoginUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckLoginUser(struct soap*, const char *, int, _ns1__CheckLoginUser *const*, const char *);
SOAP_FMAC3 _ns1__CheckLoginUser ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckLoginUser(struct soap*, const char*, _ns1__CheckLoginUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckLoginUser(struct soap*, _ns1__CheckLoginUser *const*, const char*, const char*);
SOAP_FMAC3 _ns1__CheckLoginUser ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckLoginUser(struct soap*, _ns1__CheckLoginUser **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetPropName_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetPropName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPropName(struct soap*, _ns1__GetPropName *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPropName(struct soap*, const char *, int, _ns1__GetPropName *const*, const char *);
SOAP_FMAC3 _ns1__GetPropName ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPropName(struct soap*, const char*, _ns1__GetPropName **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPropName(struct soap*, _ns1__GetPropName *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetPropName ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPropName(struct soap*, _ns1__GetPropName **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetPropList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetPropList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetPropList(struct soap*, _ns1__GetPropList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetPropList(struct soap*, const char *, int, _ns1__GetPropList *const*, const char *);
SOAP_FMAC3 _ns1__GetPropList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetPropList(struct soap*, const char*, _ns1__GetPropList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetPropList(struct soap*, _ns1__GetPropList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetPropList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetPropList(struct soap*, _ns1__GetPropList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetYjzhZskDevFlowChartList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetYjzhZskDevFlowChartList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetYjzhZskDevFlowChartList(struct soap*, _ns1__GetYjzhZskDevFlowChartList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetYjzhZskDevFlowChartList(struct soap*, const char *, int, _ns1__GetYjzhZskDevFlowChartList *const*, const char *);
SOAP_FMAC3 _ns1__GetYjzhZskDevFlowChartList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetYjzhZskDevFlowChartList(struct soap*, const char*, _ns1__GetYjzhZskDevFlowChartList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetYjzhZskDevFlowChartList(struct soap*, _ns1__GetYjzhZskDevFlowChartList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskDevFlowChartList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetYjzhZskDevFlowChartList(struct soap*, _ns1__GetYjzhZskDevFlowChartList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetYjzhZskOtherFlowChartList_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetYjzhZskOtherFlowChartList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetYjzhZskOtherFlowChartList(struct soap*, _ns1__GetYjzhZskOtherFlowChartList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetYjzhZskOtherFlowChartList(struct soap*, const char *, int, _ns1__GetYjzhZskOtherFlowChartList *const*, const char *);
SOAP_FMAC3 _ns1__GetYjzhZskOtherFlowChartList ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetYjzhZskOtherFlowChartList(struct soap*, const char*, _ns1__GetYjzhZskOtherFlowChartList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetYjzhZskOtherFlowChartList(struct soap*, _ns1__GetYjzhZskOtherFlowChartList *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskOtherFlowChartList ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetYjzhZskOtherFlowChartList(struct soap*, _ns1__GetYjzhZskOtherFlowChartList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetYjzhZskGzFlow_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetYjzhZskGzFlow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetYjzhZskGzFlow(struct soap*, _ns1__GetYjzhZskGzFlow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetYjzhZskGzFlow(struct soap*, const char *, int, _ns1__GetYjzhZskGzFlow *const*, const char *);
SOAP_FMAC3 _ns1__GetYjzhZskGzFlow ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetYjzhZskGzFlow(struct soap*, const char*, _ns1__GetYjzhZskGzFlow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetYjzhZskGzFlow(struct soap*, _ns1__GetYjzhZskGzFlow *const*, const char*, const char*);
SOAP_FMAC3 _ns1__GetYjzhZskGzFlow ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetYjzhZskGzFlow(struct soap*, _ns1__GetYjzhZskGzFlow **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ArrayOfBase64Binary_DEFINED
#define SOAP_TYPE_PointerTons1__ArrayOfBase64Binary_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfBase64Binary(struct soap*, ns1__ArrayOfBase64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfBase64Binary(struct soap*, const char *, int, ns1__ArrayOfBase64Binary *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfBase64Binary ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfBase64Binary(struct soap*, const char*, ns1__ArrayOfBase64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfBase64Binary(struct soap*, ns1__ArrayOfBase64Binary *const*, const char*, const char*);
SOAP_FMAC3 ns1__ArrayOfBase64Binary ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfBase64Binary(struct soap*, ns1__ArrayOfBase64Binary **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxsd__base64Binary_DEFINED
#define SOAP_TYPE_PointerToxsd__base64Binary_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTounsignedByte_DEFINED
#define SOAP_TYPE_PointerTounsignedByte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

inline void soap_default__QName(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT__QName
	*a = SOAP_DEFAULT__QName;
#else
	*a = (char *)0;
#endif
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_instantiate__QName soap_instantiate_string


#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put__QName(soap, p, "QName", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__QName(struct soap *soap, const char *URL, char **p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read__QName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv__QName(struct soap *soap, char **p)
{
	if (::soap_read__QName(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

inline void soap_default_string(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_string
	*a = SOAP_DEFAULT_string;
#else
	*a = (char *)0;
#endif
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || ::soap_put_string(soap, p, "string", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || ::soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_string(struct soap *soap, const char *URL, char **p)
{
	if (soap_GET(soap, URL, NULL) || ::soap_read_string(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_recv_string(struct soap *soap, char **p)
{
	if (::soap_read_string(soap, p) || soap_closesock(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
#endif

#endif

/* End of soapH.h */
