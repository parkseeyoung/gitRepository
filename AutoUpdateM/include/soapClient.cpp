/* soapClient.cpp
   Generated by gSOAP 2.8.63 for zbxhwbservice.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.63 2018-02-24 02:08:37 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskGzFlow(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskGzFlow *ns1__GetYjzhZskGzFlow, _ns1__GetYjzhZskGzFlowResponse &ns1__GetYjzhZskGzFlowResponse)
{	struct __ns1__GetYjzhZskGzFlow soap_tmp___ns1__GetYjzhZskGzFlow;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskGzFlow";
	soap_tmp___ns1__GetYjzhZskGzFlow.ns1__GetYjzhZskGzFlow = ns1__GetYjzhZskGzFlow;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskGzFlow(soap, &soap_tmp___ns1__GetYjzhZskGzFlow);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskGzFlow(soap, &soap_tmp___ns1__GetYjzhZskGzFlow, "-ns1:GetYjzhZskGzFlow", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskGzFlow(soap, &soap_tmp___ns1__GetYjzhZskGzFlow, "-ns1:GetYjzhZskGzFlow", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskGzFlowResponse*>(&ns1__GetYjzhZskGzFlowResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskGzFlowResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskGzFlowResponse.soap_get(soap, "ns1:GetYjzhZskGzFlowResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskOtherFlowChartList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskOtherFlowChartList *ns1__GetYjzhZskOtherFlowChartList, _ns1__GetYjzhZskOtherFlowChartListResponse &ns1__GetYjzhZskOtherFlowChartListResponse)
{	struct __ns1__GetYjzhZskOtherFlowChartList soap_tmp___ns1__GetYjzhZskOtherFlowChartList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskOtherFlowChartList";
	soap_tmp___ns1__GetYjzhZskOtherFlowChartList.ns1__GetYjzhZskOtherFlowChartList = ns1__GetYjzhZskOtherFlowChartList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskOtherFlowChartList(soap, &soap_tmp___ns1__GetYjzhZskOtherFlowChartList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskOtherFlowChartList(soap, &soap_tmp___ns1__GetYjzhZskOtherFlowChartList, "-ns1:GetYjzhZskOtherFlowChartList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskOtherFlowChartList(soap, &soap_tmp___ns1__GetYjzhZskOtherFlowChartList, "-ns1:GetYjzhZskOtherFlowChartList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskOtherFlowChartListResponse*>(&ns1__GetYjzhZskOtherFlowChartListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskOtherFlowChartListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskOtherFlowChartListResponse.soap_get(soap, "ns1:GetYjzhZskOtherFlowChartListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskDevFlowChartList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskDevFlowChartList *ns1__GetYjzhZskDevFlowChartList, _ns1__GetYjzhZskDevFlowChartListResponse &ns1__GetYjzhZskDevFlowChartListResponse)
{	struct __ns1__GetYjzhZskDevFlowChartList soap_tmp___ns1__GetYjzhZskDevFlowChartList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskDevFlowChartList";
	soap_tmp___ns1__GetYjzhZskDevFlowChartList.ns1__GetYjzhZskDevFlowChartList = ns1__GetYjzhZskDevFlowChartList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskDevFlowChartList(soap, &soap_tmp___ns1__GetYjzhZskDevFlowChartList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskDevFlowChartList(soap, &soap_tmp___ns1__GetYjzhZskDevFlowChartList, "-ns1:GetYjzhZskDevFlowChartList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskDevFlowChartList(soap, &soap_tmp___ns1__GetYjzhZskDevFlowChartList, "-ns1:GetYjzhZskDevFlowChartList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskDevFlowChartListResponse*>(&ns1__GetYjzhZskDevFlowChartListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskDevFlowChartListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskDevFlowChartListResponse.soap_get(soap, "ns1:GetYjzhZskDevFlowChartListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPropList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPropList *ns1__GetPropList, _ns1__GetPropListResponse &ns1__GetPropListResponse)
{	struct __ns1__GetPropList soap_tmp___ns1__GetPropList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetPropList";
	soap_tmp___ns1__GetPropList.ns1__GetPropList = ns1__GetPropList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPropList(soap, &soap_tmp___ns1__GetPropList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPropList(soap, &soap_tmp___ns1__GetPropList, "-ns1:GetPropList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPropList(soap, &soap_tmp___ns1__GetPropList, "-ns1:GetPropList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPropListResponse*>(&ns1__GetPropListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPropListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPropListResponse.soap_get(soap, "ns1:GetPropListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPropName(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPropName *ns1__GetPropName, _ns1__GetPropNameResponse &ns1__GetPropNameResponse)
{	struct __ns1__GetPropName soap_tmp___ns1__GetPropName;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetPropName";
	soap_tmp___ns1__GetPropName.ns1__GetPropName = ns1__GetPropName;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPropName(soap, &soap_tmp___ns1__GetPropName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPropName(soap, &soap_tmp___ns1__GetPropName, "-ns1:GetPropName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPropName(soap, &soap_tmp___ns1__GetPropName, "-ns1:GetPropName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPropNameResponse*>(&ns1__GetPropNameResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPropNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPropNameResponse.soap_get(soap, "ns1:GetPropNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckLoginUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckLoginUser *ns1__CheckLoginUser, _ns1__CheckLoginUserResponse &ns1__CheckLoginUserResponse)
{	struct __ns1__CheckLoginUser soap_tmp___ns1__CheckLoginUser;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/CheckLoginUser";
	soap_tmp___ns1__CheckLoginUser.ns1__CheckLoginUser = ns1__CheckLoginUser;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckLoginUser(soap, &soap_tmp___ns1__CheckLoginUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckLoginUser(soap, &soap_tmp___ns1__CheckLoginUser, "-ns1:CheckLoginUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckLoginUser(soap, &soap_tmp___ns1__CheckLoginUser, "-ns1:CheckLoginUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CheckLoginUserResponse*>(&ns1__CheckLoginUserResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CheckLoginUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckLoginUserResponse.soap_get(soap, "ns1:CheckLoginUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetRyUnit(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetRyUnit *ns1__GetRyUnit, _ns1__GetRyUnitResponse &ns1__GetRyUnitResponse)
{	struct __ns1__GetRyUnit soap_tmp___ns1__GetRyUnit;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetRyUnit";
	soap_tmp___ns1__GetRyUnit.ns1__GetRyUnit = ns1__GetRyUnit;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRyUnit(soap, &soap_tmp___ns1__GetRyUnit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRyUnit(soap, &soap_tmp___ns1__GetRyUnit, "-ns1:GetRyUnit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRyUnit(soap, &soap_tmp___ns1__GetRyUnit, "-ns1:GetRyUnit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetRyUnitResponse*>(&ns1__GetRyUnitResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetRyUnitResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRyUnitResponse.soap_get(soap, "ns1:GetRyUnitResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDevCode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDevCode *ns1__GetDevCode, _ns1__GetDevCodeResponse &ns1__GetDevCodeResponse)
{	struct __ns1__GetDevCode soap_tmp___ns1__GetDevCode;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDevCode";
	soap_tmp___ns1__GetDevCode.ns1__GetDevCode = ns1__GetDevCode;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDevCode(soap, &soap_tmp___ns1__GetDevCode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDevCode(soap, &soap_tmp___ns1__GetDevCode, "-ns1:GetDevCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDevCode(soap, &soap_tmp___ns1__GetDevCode, "-ns1:GetDevCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDevCodeResponse*>(&ns1__GetDevCodeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDevCodeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDevCodeResponse.soap_get(soap, "ns1:GetDevCodeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckDevCode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckDevCode *ns1__CheckDevCode, _ns1__CheckDevCodeResponse &ns1__CheckDevCodeResponse)
{	struct __ns1__CheckDevCode soap_tmp___ns1__CheckDevCode;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/CheckDevCode";
	soap_tmp___ns1__CheckDevCode.ns1__CheckDevCode = ns1__CheckDevCode;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckDevCode(soap, &soap_tmp___ns1__CheckDevCode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckDevCode(soap, &soap_tmp___ns1__CheckDevCode, "-ns1:CheckDevCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckDevCode(soap, &soap_tmp___ns1__CheckDevCode, "-ns1:CheckDevCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CheckDevCodeResponse*>(&ns1__CheckDevCodeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CheckDevCodeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckDevCodeResponse.soap_get(soap, "ns1:CheckDevCodeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__HelloWorld(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__HelloWorld *ns1__HelloWorld, _ns1__HelloWorldResponse &ns1__HelloWorldResponse)
{	struct __ns1__HelloWorld soap_tmp___ns1__HelloWorld;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/HelloWorld";
	soap_tmp___ns1__HelloWorld.ns1__HelloWorld = ns1__HelloWorld;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__HelloWorldResponse*>(&ns1__HelloWorldResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__HelloWorldResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorldResponse.soap_get(soap, "ns1:HelloWorldResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDBString(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDBString *ns1__GetDBString, _ns1__GetDBStringResponse &ns1__GetDBStringResponse)
{	struct __ns1__GetDBString soap_tmp___ns1__GetDBString;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDBString";
	soap_tmp___ns1__GetDBString.ns1__GetDBString = ns1__GetDBString;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDBString(soap, &soap_tmp___ns1__GetDBString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDBString(soap, &soap_tmp___ns1__GetDBString, "-ns1:GetDBString", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDBString(soap, &soap_tmp___ns1__GetDBString, "-ns1:GetDBString", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDBStringResponse*>(&ns1__GetDBStringResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDBStringResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDBStringResponse.soap_get(soap, "ns1:GetDBStringResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QueryData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QueryData *ns1__QueryData, _ns1__QueryDataResponse &ns1__QueryDataResponse)
{	struct __ns1__QueryData soap_tmp___ns1__QueryData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/QueryData";
	soap_tmp___ns1__QueryData.ns1__QueryData = ns1__QueryData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryData(soap, &soap_tmp___ns1__QueryData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryData(soap, &soap_tmp___ns1__QueryData, "-ns1:QueryData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryData(soap, &soap_tmp___ns1__QueryData, "-ns1:QueryData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__QueryDataResponse*>(&ns1__QueryDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__QueryDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryDataResponse.soap_get(soap, "ns1:QueryDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QueryDataCount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QueryDataCount *ns1__QueryDataCount, _ns1__QueryDataCountResponse &ns1__QueryDataCountResponse)
{	struct __ns1__QueryDataCount soap_tmp___ns1__QueryDataCount;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/QueryDataCount";
	soap_tmp___ns1__QueryDataCount.ns1__QueryDataCount = ns1__QueryDataCount;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryDataCount(soap, &soap_tmp___ns1__QueryDataCount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryDataCount(soap, &soap_tmp___ns1__QueryDataCount, "-ns1:QueryDataCount", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryDataCount(soap, &soap_tmp___ns1__QueryDataCount, "-ns1:QueryDataCount", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__QueryDataCountResponse*>(&ns1__QueryDataCountResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__QueryDataCountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryDataCountResponse.soap_get(soap, "ns1:QueryDataCountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExecuteSql *ns1__ExecuteSql, _ns1__ExecuteSqlResponse &ns1__ExecuteSqlResponse)
{	struct __ns1__ExecuteSql soap_tmp___ns1__ExecuteSql;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ExecuteSql";
	soap_tmp___ns1__ExecuteSql.ns1__ExecuteSql = ns1__ExecuteSql;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteSql(soap, &soap_tmp___ns1__ExecuteSql);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteSql(soap, &soap_tmp___ns1__ExecuteSql, "-ns1:ExecuteSql", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteSql(soap, &soap_tmp___ns1__ExecuteSql, "-ns1:ExecuteSql", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ExecuteSqlResponse*>(&ns1__ExecuteSqlResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteSqlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteSqlResponse.soap_get(soap, "ns1:ExecuteSqlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SaveData *ns1__SaveData, _ns1__SaveDataResponse &ns1__SaveDataResponse)
{	struct __ns1__SaveData soap_tmp___ns1__SaveData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SaveData";
	soap_tmp___ns1__SaveData.ns1__SaveData = ns1__SaveData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveData(soap, &soap_tmp___ns1__SaveData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveData(soap, &soap_tmp___ns1__SaveData, "-ns1:SaveData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveData(soap, &soap_tmp___ns1__SaveData, "-ns1:SaveData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SaveDataResponse*>(&ns1__SaveDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SaveDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveDataResponse.soap_get(soap, "ns1:SaveDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveFileData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SaveFileData *ns1__SaveFileData, _ns1__SaveFileDataResponse &ns1__SaveFileDataResponse)
{	struct __ns1__SaveFileData soap_tmp___ns1__SaveFileData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SaveFileData";
	soap_tmp___ns1__SaveFileData.ns1__SaveFileData = ns1__SaveFileData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveFileData(soap, &soap_tmp___ns1__SaveFileData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveFileData(soap, &soap_tmp___ns1__SaveFileData, "-ns1:SaveFileData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveFileData(soap, &soap_tmp___ns1__SaveFileData, "-ns1:SaveFileData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SaveFileDataResponse*>(&ns1__SaveFileDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SaveFileDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveFileDataResponse.soap_get(soap, "ns1:SaveFileDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownPic *ns1__DownPic, _ns1__DownPicResponse &ns1__DownPicResponse)
{	struct __ns1__DownPic soap_tmp___ns1__DownPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownPic";
	soap_tmp___ns1__DownPic.ns1__DownPic = ns1__DownPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownPic(soap, &soap_tmp___ns1__DownPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownPic(soap, &soap_tmp___ns1__DownPic, "-ns1:DownPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownPic(soap, &soap_tmp___ns1__DownPic, "-ns1:DownPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownPicResponse*>(&ns1__DownPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownPicResponse.soap_get(soap, "ns1:DownPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownAllPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownAllPic *ns1__DownAllPic, _ns1__DownAllPicResponse &ns1__DownAllPicResponse)
{	struct __ns1__DownAllPic soap_tmp___ns1__DownAllPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownAllPic";
	soap_tmp___ns1__DownAllPic.ns1__DownAllPic = ns1__DownAllPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownAllPic(soap, &soap_tmp___ns1__DownAllPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownAllPic(soap, &soap_tmp___ns1__DownAllPic, "-ns1:DownAllPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownAllPic(soap, &soap_tmp___ns1__DownAllPic, "-ns1:DownAllPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownAllPicResponse*>(&ns1__DownAllPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownAllPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownAllPicResponse.soap_get(soap, "ns1:DownAllPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGxdataUpTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetGxdataUpTime *ns1__GetGxdataUpTime, _ns1__GetGxdataUpTimeResponse &ns1__GetGxdataUpTimeResponse)
{	struct __ns1__GetGxdataUpTime soap_tmp___ns1__GetGxdataUpTime;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetGxdataUpTime";
	soap_tmp___ns1__GetGxdataUpTime.ns1__GetGxdataUpTime = ns1__GetGxdataUpTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetGxdataUpTime(soap, &soap_tmp___ns1__GetGxdataUpTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetGxdataUpTime(soap, &soap_tmp___ns1__GetGxdataUpTime, "-ns1:GetGxdataUpTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetGxdataUpTime(soap, &soap_tmp___ns1__GetGxdataUpTime, "-ns1:GetGxdataUpTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetGxdataUpTimeResponse*>(&ns1__GetGxdataUpTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetGxdataUpTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetGxdataUpTimeResponse.soap_get(soap, "ns1:GetGxdataUpTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__signedUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__signedUserInfo *ns1__signedUserInfo, _ns1__signedUserInfoResponse &ns1__signedUserInfoResponse)
{	struct __ns1__signedUserInfo soap_tmp___ns1__signedUserInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/signedUserInfo";
	soap_tmp___ns1__signedUserInfo.ns1__signedUserInfo = ns1__signedUserInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__signedUserInfo(soap, &soap_tmp___ns1__signedUserInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__signedUserInfo(soap, &soap_tmp___ns1__signedUserInfo, "-ns1:signedUserInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__signedUserInfo(soap, &soap_tmp___ns1__signedUserInfo, "-ns1:signedUserInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__signedUserInfoResponse*>(&ns1__signedUserInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__signedUserInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__signedUserInfoResponse.soap_get(soap, "ns1:signedUserInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetOsDateTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetOsDateTime *ns1__GetOsDateTime, _ns1__GetOsDateTimeResponse &ns1__GetOsDateTimeResponse)
{	struct __ns1__GetOsDateTime soap_tmp___ns1__GetOsDateTime;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetOsDateTime";
	soap_tmp___ns1__GetOsDateTime.ns1__GetOsDateTime = ns1__GetOsDateTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOsDateTime(soap, &soap_tmp___ns1__GetOsDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOsDateTime(soap, &soap_tmp___ns1__GetOsDateTime, "-ns1:GetOsDateTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOsDateTime(soap, &soap_tmp___ns1__GetOsDateTime, "-ns1:GetOsDateTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetOsDateTimeResponse*>(&ns1__GetOsDateTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetOsDateTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOsDateTimeResponse.soap_get(soap, "ns1:GetOsDateTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QueryPhotobw(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QueryPhotobw *ns1__QueryPhotobw, _ns1__QueryPhotobwResponse &ns1__QueryPhotobwResponse)
{	struct __ns1__QueryPhotobw soap_tmp___ns1__QueryPhotobw;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/QueryPhotobw";
	soap_tmp___ns1__QueryPhotobw.ns1__QueryPhotobw = ns1__QueryPhotobw;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryPhotobw(soap, &soap_tmp___ns1__QueryPhotobw);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryPhotobw(soap, &soap_tmp___ns1__QueryPhotobw, "-ns1:QueryPhotobw", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryPhotobw(soap, &soap_tmp___ns1__QueryPhotobw, "-ns1:QueryPhotobw", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__QueryPhotobwResponse*>(&ns1__QueryPhotobwResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__QueryPhotobwResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryPhotobwResponse.soap_get(soap, "ns1:QueryPhotobwResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TcdQuery(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TcdQuery *ns1__TcdQuery, _ns1__TcdQueryResponse &ns1__TcdQueryResponse)
{	struct __ns1__TcdQuery soap_tmp___ns1__TcdQuery;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/TcdQuery";
	soap_tmp___ns1__TcdQuery.ns1__TcdQuery = ns1__TcdQuery;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TcdQuery(soap, &soap_tmp___ns1__TcdQuery);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TcdQuery(soap, &soap_tmp___ns1__TcdQuery, "-ns1:TcdQuery", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TcdQuery(soap, &soap_tmp___ns1__TcdQuery, "-ns1:TcdQuery", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__TcdQueryResponse*>(&ns1__TcdQueryResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__TcdQueryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TcdQueryResponse.soap_get(soap, "ns1:TcdQueryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TcdSendup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TcdSendup *ns1__TcdSendup, _ns1__TcdSendupResponse &ns1__TcdSendupResponse)
{	struct __ns1__TcdSendup soap_tmp___ns1__TcdSendup;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/TcdSendup";
	soap_tmp___ns1__TcdSendup.ns1__TcdSendup = ns1__TcdSendup;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TcdSendup(soap, &soap_tmp___ns1__TcdSendup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TcdSendup(soap, &soap_tmp___ns1__TcdSendup, "-ns1:TcdSendup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TcdSendup(soap, &soap_tmp___ns1__TcdSendup, "-ns1:TcdSendup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__TcdSendupResponse*>(&ns1__TcdSendupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__TcdSendupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TcdSendupResponse.soap_get(soap, "ns1:TcdSendupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpLoadData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpLoadData *ns1__UpLoadData, _ns1__UpLoadDataResponse &ns1__UpLoadDataResponse)
{	struct __ns1__UpLoadData soap_tmp___ns1__UpLoadData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/UpLoadData";
	soap_tmp___ns1__UpLoadData.ns1__UpLoadData = ns1__UpLoadData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpLoadData(soap, &soap_tmp___ns1__UpLoadData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpLoadData(soap, &soap_tmp___ns1__UpLoadData, "-ns1:UpLoadData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpLoadData(soap, &soap_tmp___ns1__UpLoadData, "-ns1:UpLoadData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpLoadDataResponse*>(&ns1__UpLoadDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpLoadDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpLoadDataResponse.soap_get(soap, "ns1:UpLoadDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteSqlForColb(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExecuteSqlForColb *ns1__ExecuteSqlForColb, _ns1__ExecuteSqlForColbResponse &ns1__ExecuteSqlForColbResponse)
{	struct __ns1__ExecuteSqlForColb soap_tmp___ns1__ExecuteSqlForColb;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ExecuteSqlForColb";
	soap_tmp___ns1__ExecuteSqlForColb.ns1__ExecuteSqlForColb = ns1__ExecuteSqlForColb;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteSqlForColb(soap, &soap_tmp___ns1__ExecuteSqlForColb);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteSqlForColb(soap, &soap_tmp___ns1__ExecuteSqlForColb, "-ns1:ExecuteSqlForColb", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteSqlForColb(soap, &soap_tmp___ns1__ExecuteSqlForColb, "-ns1:ExecuteSqlForColb", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ExecuteSqlForColbResponse*>(&ns1__ExecuteSqlForColbResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteSqlForColbResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteSqlForColbResponse.soap_get(soap, "ns1:ExecuteSqlForColbResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXHYDGLXTupdater(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXHYDGLXTupdater *ns1__GetXHYDGLXTupdater, _ns1__GetXHYDGLXTupdaterResponse &ns1__GetXHYDGLXTupdaterResponse)
{	struct __ns1__GetXHYDGLXTupdater soap_tmp___ns1__GetXHYDGLXTupdater;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetXHYDGLXTupdater";
	soap_tmp___ns1__GetXHYDGLXTupdater.ns1__GetXHYDGLXTupdater = ns1__GetXHYDGLXTupdater;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXHYDGLXTupdater(soap, &soap_tmp___ns1__GetXHYDGLXTupdater);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXHYDGLXTupdater(soap, &soap_tmp___ns1__GetXHYDGLXTupdater, "-ns1:GetXHYDGLXTupdater", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXHYDGLXTupdater(soap, &soap_tmp___ns1__GetXHYDGLXTupdater, "-ns1:GetXHYDGLXTupdater", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetXHYDGLXTupdaterResponse*>(&ns1__GetXHYDGLXTupdaterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetXHYDGLXTupdaterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXHYDGLXTupdaterResponse.soap_get(soap, "ns1:GetXHYDGLXTupdaterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAPVupdater(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAPVupdater *ns1__GetAPVupdater, _ns1__GetAPVupdaterResponse &ns1__GetAPVupdaterResponse)
{	struct __ns1__GetAPVupdater soap_tmp___ns1__GetAPVupdater;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetAPVupdater";
	soap_tmp___ns1__GetAPVupdater.ns1__GetAPVupdater = ns1__GetAPVupdater;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAPVupdater(soap, &soap_tmp___ns1__GetAPVupdater);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAPVupdater(soap, &soap_tmp___ns1__GetAPVupdater, "-ns1:GetAPVupdater", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAPVupdater(soap, &soap_tmp___ns1__GetAPVupdater, "-ns1:GetAPVupdater", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetAPVupdaterResponse*>(&ns1__GetAPVupdaterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetAPVupdaterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAPVupdaterResponse.soap_get(soap, "ns1:GetAPVupdaterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpLoadFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpLoadFile *ns1__UpLoadFile, _ns1__UpLoadFileResponse &ns1__UpLoadFileResponse)
{	struct __ns1__UpLoadFile soap_tmp___ns1__UpLoadFile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/UpLoadFile";
	soap_tmp___ns1__UpLoadFile.ns1__UpLoadFile = ns1__UpLoadFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpLoadFile(soap, &soap_tmp___ns1__UpLoadFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpLoadFile(soap, &soap_tmp___ns1__UpLoadFile, "-ns1:UpLoadFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpLoadFile(soap, &soap_tmp___ns1__UpLoadFile, "-ns1:UpLoadFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpLoadFileResponse*>(&ns1__UpLoadFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpLoadFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpLoadFileResponse.soap_get(soap, "ns1:UpLoadFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__upPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__upPic *ns1__upPic, _ns1__upPicResponse &ns1__upPicResponse)
{	struct __ns1__upPic soap_tmp___ns1__upPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/upPic";
	soap_tmp___ns1__upPic.ns1__upPic = ns1__upPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__upPic(soap, &soap_tmp___ns1__upPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__upPic(soap, &soap_tmp___ns1__upPic, "-ns1:upPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__upPic(soap, &soap_tmp___ns1__upPic, "-ns1:upPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__upPicResponse*>(&ns1__upPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__upPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__upPicResponse.soap_get(soap, "ns1:upPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownloadPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownloadPic *ns1__DownloadPic, _ns1__DownloadPicResponse &ns1__DownloadPicResponse)
{	struct __ns1__DownloadPic soap_tmp___ns1__DownloadPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownloadPic";
	soap_tmp___ns1__DownloadPic.ns1__DownloadPic = ns1__DownloadPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadPic(soap, &soap_tmp___ns1__DownloadPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadPic(soap, &soap_tmp___ns1__DownloadPic, "-ns1:DownloadPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadPic(soap, &soap_tmp___ns1__DownloadPic, "-ns1:DownloadPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownloadPicResponse*>(&ns1__DownloadPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownloadPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadPicResponse.soap_get(soap, "ns1:DownloadPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPicNames(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPicNames *ns1__GetPicNames, _ns1__GetPicNamesResponse &ns1__GetPicNamesResponse)
{	struct __ns1__GetPicNames soap_tmp___ns1__GetPicNames;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetPicNames";
	soap_tmp___ns1__GetPicNames.ns1__GetPicNames = ns1__GetPicNames;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPicNames(soap, &soap_tmp___ns1__GetPicNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPicNames(soap, &soap_tmp___ns1__GetPicNames, "-ns1:GetPicNames", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPicNames(soap, &soap_tmp___ns1__GetPicNames, "-ns1:GetPicNames", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPicNamesResponse*>(&ns1__GetPicNamesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPicNamesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPicNamesResponse.soap_get(soap, "ns1:GetPicNamesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDwInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDwInfo *ns1__GetDwInfo, _ns1__GetDwInfoResponse &ns1__GetDwInfoResponse)
{	struct __ns1__GetDwInfo soap_tmp___ns1__GetDwInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDwInfo";
	soap_tmp___ns1__GetDwInfo.ns1__GetDwInfo = ns1__GetDwInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDwInfo(soap, &soap_tmp___ns1__GetDwInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDwInfo(soap, &soap_tmp___ns1__GetDwInfo, "-ns1:GetDwInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDwInfo(soap, &soap_tmp___ns1__GetDwInfo, "-ns1:GetDwInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDwInfoResponse*>(&ns1__GetDwInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDwInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDwInfoResponse.soap_get(soap, "ns1:GetDwInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDwPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDwPic *ns1__GetDwPic, _ns1__GetDwPicResponse &ns1__GetDwPicResponse)
{	struct __ns1__GetDwPic soap_tmp___ns1__GetDwPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDwPic";
	soap_tmp___ns1__GetDwPic.ns1__GetDwPic = ns1__GetDwPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDwPic(soap, &soap_tmp___ns1__GetDwPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDwPic(soap, &soap_tmp___ns1__GetDwPic, "-ns1:GetDwPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDwPic(soap, &soap_tmp___ns1__GetDwPic, "-ns1:GetDwPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDwPicResponse*>(&ns1__GetDwPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDwPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDwPicResponse.soap_get(soap, "ns1:GetDwPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDeviceXj(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDeviceXj *ns1__GetDeviceXj, _ns1__GetDeviceXjResponse &ns1__GetDeviceXjResponse)
{	struct __ns1__GetDeviceXj soap_tmp___ns1__GetDeviceXj;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDeviceXj";
	soap_tmp___ns1__GetDeviceXj.ns1__GetDeviceXj = ns1__GetDeviceXj;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDeviceXj(soap, &soap_tmp___ns1__GetDeviceXj);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDeviceXj(soap, &soap_tmp___ns1__GetDeviceXj, "-ns1:GetDeviceXj", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDeviceXj(soap, &soap_tmp___ns1__GetDeviceXj, "-ns1:GetDeviceXj", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDeviceXjResponse*>(&ns1__GetDeviceXjResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDeviceXjResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDeviceXjResponse.soap_get(soap, "ns1:GetDeviceXjResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJxData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJxData *ns1__GetJxData, _ns1__GetJxDataResponse &ns1__GetJxDataResponse)
{	struct __ns1__GetJxData soap_tmp___ns1__GetJxData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetJxData";
	soap_tmp___ns1__GetJxData.ns1__GetJxData = ns1__GetJxData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJxData(soap, &soap_tmp___ns1__GetJxData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJxData(soap, &soap_tmp___ns1__GetJxData, "-ns1:GetJxData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJxData(soap, &soap_tmp___ns1__GetJxData, "-ns1:GetJxData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetJxDataResponse*>(&ns1__GetJxDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetJxDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJxDataResponse.soap_get(soap, "ns1:GetJxDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetStationJxData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetStationJxData *ns1__GetStationJxData, _ns1__GetStationJxDataResponse &ns1__GetStationJxDataResponse)
{	struct __ns1__GetStationJxData soap_tmp___ns1__GetStationJxData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetStationJxData";
	soap_tmp___ns1__GetStationJxData.ns1__GetStationJxData = ns1__GetStationJxData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStationJxData(soap, &soap_tmp___ns1__GetStationJxData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStationJxData(soap, &soap_tmp___ns1__GetStationJxData, "-ns1:GetStationJxData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStationJxData(soap, &soap_tmp___ns1__GetStationJxData, "-ns1:GetStationJxData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetStationJxDataResponse*>(&ns1__GetStationJxDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetStationJxDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStationJxDataResponse.soap_get(soap, "ns1:GetStationJxDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJxPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJxPic *ns1__GetJxPic, _ns1__GetJxPicResponse &ns1__GetJxPicResponse)
{	struct __ns1__GetJxPic soap_tmp___ns1__GetJxPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetJxPic";
	soap_tmp___ns1__GetJxPic.ns1__GetJxPic = ns1__GetJxPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJxPic(soap, &soap_tmp___ns1__GetJxPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJxPic(soap, &soap_tmp___ns1__GetJxPic, "-ns1:GetJxPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJxPic(soap, &soap_tmp___ns1__GetJxPic, "-ns1:GetJxPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetJxPicResponse*>(&ns1__GetJxPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetJxPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJxPicResponse.soap_get(soap, "ns1:GetJxPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDevPic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDevPic *ns1__GetDevPic, _ns1__GetDevPicResponse &ns1__GetDevPicResponse)
{	struct __ns1__GetDevPic soap_tmp___ns1__GetDevPic;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDevPic";
	soap_tmp___ns1__GetDevPic.ns1__GetDevPic = ns1__GetDevPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDevPic(soap, &soap_tmp___ns1__GetDevPic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDevPic(soap, &soap_tmp___ns1__GetDevPic, "-ns1:GetDevPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDevPic(soap, &soap_tmp___ns1__GetDevPic, "-ns1:GetDevPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDevPicResponse*>(&ns1__GetDevPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDevPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDevPicResponse.soap_get(soap, "ns1:GetDevPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetBgImg(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetBgImg *ns1__GetBgImg, _ns1__GetBgImgResponse &ns1__GetBgImgResponse)
{	struct __ns1__GetBgImg soap_tmp___ns1__GetBgImg;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetBgImg";
	soap_tmp___ns1__GetBgImg.ns1__GetBgImg = ns1__GetBgImg;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBgImg(soap, &soap_tmp___ns1__GetBgImg);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBgImg(soap, &soap_tmp___ns1__GetBgImg, "-ns1:GetBgImg", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBgImg(soap, &soap_tmp___ns1__GetBgImg, "-ns1:GetBgImg", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetBgImgResponse*>(&ns1__GetBgImgResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetBgImgResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBgImgResponse.soap_get(soap, "ns1:GetBgImgResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDcsData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDcsData *ns1__GetDcsData, _ns1__GetDcsDataResponse &ns1__GetDcsDataResponse)
{	struct __ns1__GetDcsData soap_tmp___ns1__GetDcsData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDcsData";
	soap_tmp___ns1__GetDcsData.ns1__GetDcsData = ns1__GetDcsData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDcsData(soap, &soap_tmp___ns1__GetDcsData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDcsData(soap, &soap_tmp___ns1__GetDcsData, "-ns1:GetDcsData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDcsData(soap, &soap_tmp___ns1__GetDcsData, "-ns1:GetDcsData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDcsDataResponse*>(&ns1__GetDcsDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDcsDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDcsDataResponse.soap_get(soap, "ns1:GetDcsDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownLoadMobGPSData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownLoadMobGPSData *ns1__DownLoadMobGPSData, _ns1__DownLoadMobGPSDataResponse &ns1__DownLoadMobGPSDataResponse)
{	struct __ns1__DownLoadMobGPSData soap_tmp___ns1__DownLoadMobGPSData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownLoadMobGPSData";
	soap_tmp___ns1__DownLoadMobGPSData.ns1__DownLoadMobGPSData = ns1__DownLoadMobGPSData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownLoadMobGPSData(soap, &soap_tmp___ns1__DownLoadMobGPSData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownLoadMobGPSData(soap, &soap_tmp___ns1__DownLoadMobGPSData, "-ns1:DownLoadMobGPSData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownLoadMobGPSData(soap, &soap_tmp___ns1__DownLoadMobGPSData, "-ns1:DownLoadMobGPSData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownLoadMobGPSDataResponse*>(&ns1__DownLoadMobGPSDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownLoadMobGPSDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownLoadMobGPSDataResponse.soap_get(soap, "ns1:DownLoadMobGPSDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MobDownLoadData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__MobDownLoadData *ns1__MobDownLoadData, _ns1__MobDownLoadDataResponse &ns1__MobDownLoadDataResponse)
{	struct __ns1__MobDownLoadData soap_tmp___ns1__MobDownLoadData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/MobDownLoadData";
	soap_tmp___ns1__MobDownLoadData.ns1__MobDownLoadData = ns1__MobDownLoadData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__MobDownLoadData(soap, &soap_tmp___ns1__MobDownLoadData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MobDownLoadData(soap, &soap_tmp___ns1__MobDownLoadData, "-ns1:MobDownLoadData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MobDownLoadData(soap, &soap_tmp___ns1__MobDownLoadData, "-ns1:MobDownLoadData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__MobDownLoadDataResponse*>(&ns1__MobDownLoadDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__MobDownLoadDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MobDownLoadDataResponse.soap_get(soap, "ns1:MobDownLoadDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetOpenFireInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetOpenFireInfo *ns1__GetOpenFireInfo, _ns1__GetOpenFireInfoResponse &ns1__GetOpenFireInfoResponse)
{	struct __ns1__GetOpenFireInfo soap_tmp___ns1__GetOpenFireInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetOpenFireInfo";
	soap_tmp___ns1__GetOpenFireInfo.ns1__GetOpenFireInfo = ns1__GetOpenFireInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOpenFireInfo(soap, &soap_tmp___ns1__GetOpenFireInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOpenFireInfo(soap, &soap_tmp___ns1__GetOpenFireInfo, "-ns1:GetOpenFireInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOpenFireInfo(soap, &soap_tmp___ns1__GetOpenFireInfo, "-ns1:GetOpenFireInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetOpenFireInfoResponse*>(&ns1__GetOpenFireInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetOpenFireInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOpenFireInfoResponse.soap_get(soap, "ns1:GetOpenFireInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDwList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDwList *ns1__GetDwList, _ns1__GetDwListResponse &ns1__GetDwListResponse)
{	struct __ns1__GetDwList soap_tmp___ns1__GetDwList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDwList";
	soap_tmp___ns1__GetDwList.ns1__GetDwList = ns1__GetDwList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDwList(soap, &soap_tmp___ns1__GetDwList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDwList(soap, &soap_tmp___ns1__GetDwList, "-ns1:GetDwList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDwList(soap, &soap_tmp___ns1__GetDwList, "-ns1:GetDwList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDwListResponse*>(&ns1__GetDwListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDwListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDwListResponse.soap_get(soap, "ns1:GetDwListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitStation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitStation *ns1__GetUnitStation, _ns1__GetUnitStationResponse &ns1__GetUnitStationResponse)
{	struct __ns1__GetUnitStation soap_tmp___ns1__GetUnitStation;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitStation";
	soap_tmp___ns1__GetUnitStation.ns1__GetUnitStation = ns1__GetUnitStation;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitStation(soap, &soap_tmp___ns1__GetUnitStation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitStation(soap, &soap_tmp___ns1__GetUnitStation, "-ns1:GetUnitStation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitStation(soap, &soap_tmp___ns1__GetUnitStation, "-ns1:GetUnitStation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitStationResponse*>(&ns1__GetUnitStationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitStationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitStationResponse.soap_get(soap, "ns1:GetUnitStationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitStruct(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitStruct *ns1__GetUnitStruct, _ns1__GetUnitStructResponse &ns1__GetUnitStructResponse)
{	struct __ns1__GetUnitStruct soap_tmp___ns1__GetUnitStruct;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitStruct";
	soap_tmp___ns1__GetUnitStruct.ns1__GetUnitStruct = ns1__GetUnitStruct;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitStruct(soap, &soap_tmp___ns1__GetUnitStruct);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitStruct(soap, &soap_tmp___ns1__GetUnitStruct, "-ns1:GetUnitStruct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitStruct(soap, &soap_tmp___ns1__GetUnitStruct, "-ns1:GetUnitStruct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitStructResponse*>(&ns1__GetUnitStructResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitStructResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitStructResponse.soap_get(soap, "ns1:GetUnitStructResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitPersonInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitPersonInfo *ns1__GetUnitPersonInfo, _ns1__GetUnitPersonInfoResponse &ns1__GetUnitPersonInfoResponse)
{	struct __ns1__GetUnitPersonInfo soap_tmp___ns1__GetUnitPersonInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitPersonInfo";
	soap_tmp___ns1__GetUnitPersonInfo.ns1__GetUnitPersonInfo = ns1__GetUnitPersonInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitPersonInfo(soap, &soap_tmp___ns1__GetUnitPersonInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitPersonInfo(soap, &soap_tmp___ns1__GetUnitPersonInfo, "-ns1:GetUnitPersonInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitPersonInfo(soap, &soap_tmp___ns1__GetUnitPersonInfo, "-ns1:GetUnitPersonInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitPersonInfoResponse*>(&ns1__GetUnitPersonInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitPersonInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitPersonInfoResponse.soap_get(soap, "ns1:GetUnitPersonInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFileSize(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFileSize *ns1__GetFileSize, _ns1__GetFileSizeResponse &ns1__GetFileSizeResponse)
{	struct __ns1__GetFileSize soap_tmp___ns1__GetFileSize;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetFileSize";
	soap_tmp___ns1__GetFileSize.ns1__GetFileSize = ns1__GetFileSize;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFileSize(soap, &soap_tmp___ns1__GetFileSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFileSize(soap, &soap_tmp___ns1__GetFileSize, "-ns1:GetFileSize", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFileSize(soap, &soap_tmp___ns1__GetFileSize, "-ns1:GetFileSize", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFileSizeResponse*>(&ns1__GetFileSizeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFileSizeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFileSizeResponse.soap_get(soap, "ns1:GetFileSizeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXbList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXbList *ns1__GetXbList, _ns1__GetXbListResponse &ns1__GetXbListResponse)
{	struct __ns1__GetXbList soap_tmp___ns1__GetXbList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetXbList";
	soap_tmp___ns1__GetXbList.ns1__GetXbList = ns1__GetXbList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXbList(soap, &soap_tmp___ns1__GetXbList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXbList(soap, &soap_tmp___ns1__GetXbList, "-ns1:GetXbList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXbList(soap, &soap_tmp___ns1__GetXbList, "-ns1:GetXbList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetXbListResponse*>(&ns1__GetXbListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetXbListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXbListResponse.soap_get(soap, "ns1:GetXbListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXbStationList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXbStationList *ns1__GetXbStationList, _ns1__GetXbStationListResponse &ns1__GetXbStationListResponse)
{	struct __ns1__GetXbStationList soap_tmp___ns1__GetXbStationList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetXbStationList";
	soap_tmp___ns1__GetXbStationList.ns1__GetXbStationList = ns1__GetXbStationList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXbStationList(soap, &soap_tmp___ns1__GetXbStationList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXbStationList(soap, &soap_tmp___ns1__GetXbStationList, "-ns1:GetXbStationList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXbStationList(soap, &soap_tmp___ns1__GetXbStationList, "-ns1:GetXbStationList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetXbStationListResponse*>(&ns1__GetXbStationListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetXbStationListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXbStationListResponse.soap_get(soap, "ns1:GetXbStationListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapDeviceType(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapDeviceType *ns1__GetMapDeviceType, _ns1__GetMapDeviceTypeResponse &ns1__GetMapDeviceTypeResponse)
{	struct __ns1__GetMapDeviceType soap_tmp___ns1__GetMapDeviceType;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapDeviceType";
	soap_tmp___ns1__GetMapDeviceType.ns1__GetMapDeviceType = ns1__GetMapDeviceType;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapDeviceType(soap, &soap_tmp___ns1__GetMapDeviceType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapDeviceType(soap, &soap_tmp___ns1__GetMapDeviceType, "-ns1:GetMapDeviceType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapDeviceType(soap, &soap_tmp___ns1__GetMapDeviceType, "-ns1:GetMapDeviceType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapDeviceTypeResponse*>(&ns1__GetMapDeviceTypeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapDeviceTypeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapDeviceTypeResponse.soap_get(soap, "ns1:GetMapDeviceTypeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGxDeviceData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetGxDeviceData *ns1__GetGxDeviceData, _ns1__GetGxDeviceDataResponse &ns1__GetGxDeviceDataResponse)
{	struct __ns1__GetGxDeviceData soap_tmp___ns1__GetGxDeviceData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetGxDeviceData";
	soap_tmp___ns1__GetGxDeviceData.ns1__GetGxDeviceData = ns1__GetGxDeviceData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetGxDeviceData(soap, &soap_tmp___ns1__GetGxDeviceData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetGxDeviceData(soap, &soap_tmp___ns1__GetGxDeviceData, "-ns1:GetGxDeviceData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetGxDeviceData(soap, &soap_tmp___ns1__GetGxDeviceData, "-ns1:GetGxDeviceData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetGxDeviceDataResponse*>(&ns1__GetGxDeviceDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetGxDeviceDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetGxDeviceDataResponse.soap_get(soap, "ns1:GetGxDeviceDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDownFileInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDownFileInfo *ns1__GetDownFileInfo, _ns1__GetDownFileInfoResponse &ns1__GetDownFileInfoResponse)
{	struct __ns1__GetDownFileInfo soap_tmp___ns1__GetDownFileInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDownFileInfo";
	soap_tmp___ns1__GetDownFileInfo.ns1__GetDownFileInfo = ns1__GetDownFileInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDownFileInfo(soap, &soap_tmp___ns1__GetDownFileInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDownFileInfo(soap, &soap_tmp___ns1__GetDownFileInfo, "-ns1:GetDownFileInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDownFileInfo(soap, &soap_tmp___ns1__GetDownFileInfo, "-ns1:GetDownFileInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDownFileInfoResponse*>(&ns1__GetDownFileInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDownFileInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDownFileInfoResponse.soap_get(soap, "ns1:GetDownFileInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownMapfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownMapfile *ns1__DownMapfile, _ns1__DownMapfileResponse &ns1__DownMapfileResponse)
{	struct __ns1__DownMapfile soap_tmp___ns1__DownMapfile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownMapfile";
	soap_tmp___ns1__DownMapfile.ns1__DownMapfile = ns1__DownMapfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownMapfile(soap, &soap_tmp___ns1__DownMapfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownMapfile(soap, &soap_tmp___ns1__DownMapfile, "-ns1:DownMapfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownMapfile(soap, &soap_tmp___ns1__DownMapfile, "-ns1:DownMapfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownMapfileResponse*>(&ns1__DownMapfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownMapfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownMapfileResponse.soap_get(soap, "ns1:DownMapfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFileNew(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFileNew *ns1__GetFileNew, _ns1__GetFileNewResponse &ns1__GetFileNewResponse)
{	struct __ns1__GetFileNew soap_tmp___ns1__GetFileNew;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetFileNew";
	soap_tmp___ns1__GetFileNew.ns1__GetFileNew = ns1__GetFileNew;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFileNew(soap, &soap_tmp___ns1__GetFileNew);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFileNew(soap, &soap_tmp___ns1__GetFileNew, "-ns1:GetFileNew", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFileNew(soap, &soap_tmp___ns1__GetFileNew, "-ns1:GetFileNew", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFileNewResponse*>(&ns1__GetFileNewResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFileNewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFileNewResponse.soap_get(soap, "ns1:GetFileNewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AlterTable(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AlterTable *ns1__AlterTable, _ns1__AlterTableResponse &ns1__AlterTableResponse)
{	struct __ns1__AlterTable soap_tmp___ns1__AlterTable;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/AlterTable";
	soap_tmp___ns1__AlterTable.ns1__AlterTable = ns1__AlterTable;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__AlterTable(soap, &soap_tmp___ns1__AlterTable);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AlterTable(soap, &soap_tmp___ns1__AlterTable, "-ns1:AlterTable", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AlterTable(soap, &soap_tmp___ns1__AlterTable, "-ns1:AlterTable", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__AlterTableResponse*>(&ns1__AlterTableResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__AlterTableResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AlterTableResponse.soap_get(soap, "ns1:AlterTableResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownCQData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownCQData *ns1__DownCQData, _ns1__DownCQDataResponse &ns1__DownCQDataResponse)
{	struct __ns1__DownCQData soap_tmp___ns1__DownCQData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownCQData";
	soap_tmp___ns1__DownCQData.ns1__DownCQData = ns1__DownCQData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownCQData(soap, &soap_tmp___ns1__DownCQData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownCQData(soap, &soap_tmp___ns1__DownCQData, "-ns1:DownCQData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownCQData(soap, &soap_tmp___ns1__DownCQData, "-ns1:DownCQData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownCQDataResponse*>(&ns1__DownCQDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownCQDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownCQDataResponse.soap_get(soap, "ns1:DownCQDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTabList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTabList *ns1__GetTabList, _ns1__GetTabListResponse &ns1__GetTabListResponse)
{	struct __ns1__GetTabList soap_tmp___ns1__GetTabList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetTabList";
	soap_tmp___ns1__GetTabList.ns1__GetTabList = ns1__GetTabList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTabList(soap, &soap_tmp___ns1__GetTabList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTabList(soap, &soap_tmp___ns1__GetTabList, "-ns1:GetTabList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTabList(soap, &soap_tmp___ns1__GetTabList, "-ns1:GetTabList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetTabListResponse*>(&ns1__GetTabListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTabListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTabListResponse.soap_get(soap, "ns1:GetTabListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IsOracleTable(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IsOracleTable *ns1__IsOracleTable, _ns1__IsOracleTableResponse &ns1__IsOracleTableResponse)
{	struct __ns1__IsOracleTable soap_tmp___ns1__IsOracleTable;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/IsOracleTable";
	soap_tmp___ns1__IsOracleTable.ns1__IsOracleTable = ns1__IsOracleTable;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__IsOracleTable(soap, &soap_tmp___ns1__IsOracleTable);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IsOracleTable(soap, &soap_tmp___ns1__IsOracleTable, "-ns1:IsOracleTable", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IsOracleTable(soap, &soap_tmp___ns1__IsOracleTable, "-ns1:IsOracleTable", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__IsOracleTableResponse*>(&ns1__IsOracleTableResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__IsOracleTableResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IsOracleTableResponse.soap_get(soap, "ns1:IsOracleTableResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFieldInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFieldInfo *ns1__GetFieldInfo, _ns1__GetFieldInfoResponse &ns1__GetFieldInfoResponse)
{	struct __ns1__GetFieldInfo soap_tmp___ns1__GetFieldInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetFieldInfo";
	soap_tmp___ns1__GetFieldInfo.ns1__GetFieldInfo = ns1__GetFieldInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFieldInfo(soap, &soap_tmp___ns1__GetFieldInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFieldInfo(soap, &soap_tmp___ns1__GetFieldInfo, "-ns1:GetFieldInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFieldInfo(soap, &soap_tmp___ns1__GetFieldInfo, "-ns1:GetFieldInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFieldInfoResponse*>(&ns1__GetFieldInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFieldInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFieldInfoResponse.soap_get(soap, "ns1:GetFieldInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteSqlForFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExecuteSqlForFile *ns1__ExecuteSqlForFile, _ns1__ExecuteSqlForFileResponse &ns1__ExecuteSqlForFileResponse)
{	struct __ns1__ExecuteSqlForFile soap_tmp___ns1__ExecuteSqlForFile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ExecuteSqlForFile";
	soap_tmp___ns1__ExecuteSqlForFile.ns1__ExecuteSqlForFile = ns1__ExecuteSqlForFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteSqlForFile(soap, &soap_tmp___ns1__ExecuteSqlForFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteSqlForFile(soap, &soap_tmp___ns1__ExecuteSqlForFile, "-ns1:ExecuteSqlForFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteSqlForFile(soap, &soap_tmp___ns1__ExecuteSqlForFile, "-ns1:ExecuteSqlForFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ExecuteSqlForFileResponse*>(&ns1__ExecuteSqlForFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteSqlForFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteSqlForFileResponse.soap_get(soap, "ns1:ExecuteSqlForFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownLoadFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownLoadFile *ns1__DownLoadFile, _ns1__DownLoadFileResponse &ns1__DownLoadFileResponse)
{	struct __ns1__DownLoadFile soap_tmp___ns1__DownLoadFile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownLoadFile";
	soap_tmp___ns1__DownLoadFile.ns1__DownLoadFile = ns1__DownLoadFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownLoadFile(soap, &soap_tmp___ns1__DownLoadFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownLoadFile(soap, &soap_tmp___ns1__DownLoadFile, "-ns1:DownLoadFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownLoadFile(soap, &soap_tmp___ns1__DownLoadFile, "-ns1:DownLoadFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownLoadFileResponse*>(&ns1__DownLoadFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownLoadFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownLoadFileResponse.soap_get(soap, "ns1:DownLoadFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__WriteFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__WriteFile *ns1__WriteFile, _ns1__WriteFileResponse &ns1__WriteFileResponse)
{	struct __ns1__WriteFile soap_tmp___ns1__WriteFile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/WriteFile";
	soap_tmp___ns1__WriteFile.ns1__WriteFile = ns1__WriteFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__WriteFile(soap, &soap_tmp___ns1__WriteFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WriteFile(soap, &soap_tmp___ns1__WriteFile, "-ns1:WriteFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WriteFile(soap, &soap_tmp___ns1__WriteFile, "-ns1:WriteFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__WriteFileResponse*>(&ns1__WriteFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__WriteFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WriteFileResponse.soap_get(soap, "ns1:WriteFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapUpdateTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapUpdateTime *ns1__GetMapUpdateTime, _ns1__GetMapUpdateTimeResponse &ns1__GetMapUpdateTimeResponse)
{	struct __ns1__GetMapUpdateTime soap_tmp___ns1__GetMapUpdateTime;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapUpdateTime";
	soap_tmp___ns1__GetMapUpdateTime.ns1__GetMapUpdateTime = ns1__GetMapUpdateTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapUpdateTime(soap, &soap_tmp___ns1__GetMapUpdateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapUpdateTime(soap, &soap_tmp___ns1__GetMapUpdateTime, "-ns1:GetMapUpdateTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapUpdateTime(soap, &soap_tmp___ns1__GetMapUpdateTime, "-ns1:GetMapUpdateTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapUpdateTimeResponse*>(&ns1__GetMapUpdateTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapUpdateTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapUpdateTimeResponse.soap_get(soap, "ns1:GetMapUpdateTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapTabName(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapTabName *ns1__GetMapTabName, _ns1__GetMapTabNameResponse &ns1__GetMapTabNameResponse)
{	struct __ns1__GetMapTabName soap_tmp___ns1__GetMapTabName;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapTabName";
	soap_tmp___ns1__GetMapTabName.ns1__GetMapTabName = ns1__GetMapTabName;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapTabName(soap, &soap_tmp___ns1__GetMapTabName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapTabName(soap, &soap_tmp___ns1__GetMapTabName, "-ns1:GetMapTabName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapTabName(soap, &soap_tmp___ns1__GetMapTabName, "-ns1:GetMapTabName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapTabNameResponse*>(&ns1__GetMapTabNameResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapTabNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapTabNameResponse.soap_get(soap, "ns1:GetMapTabNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapDeviceData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapDeviceData *ns1__GetMapDeviceData, _ns1__GetMapDeviceDataResponse &ns1__GetMapDeviceDataResponse)
{	struct __ns1__GetMapDeviceData soap_tmp___ns1__GetMapDeviceData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapDeviceData";
	soap_tmp___ns1__GetMapDeviceData.ns1__GetMapDeviceData = ns1__GetMapDeviceData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapDeviceData(soap, &soap_tmp___ns1__GetMapDeviceData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapDeviceData(soap, &soap_tmp___ns1__GetMapDeviceData, "-ns1:GetMapDeviceData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapDeviceData(soap, &soap_tmp___ns1__GetMapDeviceData, "-ns1:GetMapDeviceData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapDeviceDataResponse*>(&ns1__GetMapDeviceDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapDeviceDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapDeviceDataResponse.soap_get(soap, "ns1:GetMapDeviceDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMaList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMaList *ns1__GetMaList, _ns1__GetMaListResponse &ns1__GetMaListResponse)
{	struct __ns1__GetMaList soap_tmp___ns1__GetMaList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMaList";
	soap_tmp___ns1__GetMaList.ns1__GetMaList = ns1__GetMaList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMaList(soap, &soap_tmp___ns1__GetMaList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMaList(soap, &soap_tmp___ns1__GetMaList, "-ns1:GetMaList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMaList(soap, &soap_tmp___ns1__GetMaList, "-ns1:GetMaList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMaListResponse*>(&ns1__GetMaListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMaListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMaListResponse.soap_get(soap, "ns1:GetMaListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMangeUnit(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMangeUnit *ns1__GetMangeUnit, _ns1__GetMangeUnitResponse &ns1__GetMangeUnitResponse)
{	struct __ns1__GetMangeUnit soap_tmp___ns1__GetMangeUnit;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMangeUnit";
	soap_tmp___ns1__GetMangeUnit.ns1__GetMangeUnit = ns1__GetMangeUnit;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMangeUnit(soap, &soap_tmp___ns1__GetMangeUnit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMangeUnit(soap, &soap_tmp___ns1__GetMangeUnit, "-ns1:GetMangeUnit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMangeUnit(soap, &soap_tmp___ns1__GetMangeUnit, "-ns1:GetMangeUnit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMangeUnitResponse*>(&ns1__GetMangeUnitResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMangeUnitResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMangeUnitResponse.soap_get(soap, "ns1:GetMangeUnitResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMangeXb(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMangeXb *ns1__GetMangeXb, _ns1__GetMangeXbResponse &ns1__GetMangeXbResponse)
{	struct __ns1__GetMangeXb soap_tmp___ns1__GetMangeXb;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMangeXb";
	soap_tmp___ns1__GetMangeXb.ns1__GetMangeXb = ns1__GetMangeXb;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMangeXb(soap, &soap_tmp___ns1__GetMangeXb);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMangeXb(soap, &soap_tmp___ns1__GetMangeXb, "-ns1:GetMangeXb", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMangeXb(soap, &soap_tmp___ns1__GetMangeXb, "-ns1:GetMangeXb", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMangeXbResponse*>(&ns1__GetMangeXbResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMangeXbResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMangeXbResponse.soap_get(soap, "ns1:GetMangeXbResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckMapVer(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckMapVer *ns1__CheckMapVer, _ns1__CheckMapVerResponse &ns1__CheckMapVerResponse)
{	struct __ns1__CheckMapVer soap_tmp___ns1__CheckMapVer;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/CheckMapVer";
	soap_tmp___ns1__CheckMapVer.ns1__CheckMapVer = ns1__CheckMapVer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckMapVer(soap, &soap_tmp___ns1__CheckMapVer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckMapVer(soap, &soap_tmp___ns1__CheckMapVer, "-ns1:CheckMapVer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckMapVer(soap, &soap_tmp___ns1__CheckMapVer, "-ns1:CheckMapVer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CheckMapVerResponse*>(&ns1__CheckMapVerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CheckMapVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckMapVerResponse.soap_get(soap, "ns1:CheckMapVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMap(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMap *ns1__GetMap, _ns1__GetMapResponse &ns1__GetMapResponse)
{	struct __ns1__GetMap soap_tmp___ns1__GetMap;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMap";
	soap_tmp___ns1__GetMap.ns1__GetMap = ns1__GetMap;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMap(soap, &soap_tmp___ns1__GetMap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMap(soap, &soap_tmp___ns1__GetMap, "-ns1:GetMap", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMap(soap, &soap_tmp___ns1__GetMap, "-ns1:GetMap", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapResponse*>(&ns1__GetMapResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapResponse.soap_get(soap, "ns1:GetMapResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTableData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTableData *ns1__GetTableData, _ns1__GetTableDataResponse &ns1__GetTableDataResponse)
{	struct __ns1__GetTableData soap_tmp___ns1__GetTableData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetTableData";
	soap_tmp___ns1__GetTableData.ns1__GetTableData = ns1__GetTableData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTableData(soap, &soap_tmp___ns1__GetTableData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTableData(soap, &soap_tmp___ns1__GetTableData, "-ns1:GetTableData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTableData(soap, &soap_tmp___ns1__GetTableData, "-ns1:GetTableData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetTableDataResponse*>(&ns1__GetTableDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTableDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTableDataResponse.soap_get(soap, "ns1:GetTableDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ServerLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ServerLevel *ns1__ServerLevel, _ns1__ServerLevelResponse &ns1__ServerLevelResponse)
{	struct __ns1__ServerLevel soap_tmp___ns1__ServerLevel;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ServerLevel";
	soap_tmp___ns1__ServerLevel.ns1__ServerLevel = ns1__ServerLevel;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ServerLevel(soap, &soap_tmp___ns1__ServerLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ServerLevel(soap, &soap_tmp___ns1__ServerLevel, "-ns1:ServerLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ServerLevel(soap, &soap_tmp___ns1__ServerLevel, "-ns1:ServerLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ServerLevelResponse*>(&ns1__ServerLevelResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ServerLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ServerLevelResponse.soap_get(soap, "ns1:ServerLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapListTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapListTime *ns1__GetMapListTime, _ns1__GetMapListTimeResponse &ns1__GetMapListTimeResponse)
{	struct __ns1__GetMapListTime soap_tmp___ns1__GetMapListTime;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapListTime";
	soap_tmp___ns1__GetMapListTime.ns1__GetMapListTime = ns1__GetMapListTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapListTime(soap, &soap_tmp___ns1__GetMapListTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapListTime(soap, &soap_tmp___ns1__GetMapListTime, "-ns1:GetMapListTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapListTime(soap, &soap_tmp___ns1__GetMapListTime, "-ns1:GetMapListTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapListTimeResponse*>(&ns1__GetMapListTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapListTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapListTimeResponse.soap_get(soap, "ns1:GetMapListTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateGzclMap(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateGzclMap *ns1__UpdateGzclMap, _ns1__UpdateGzclMapResponse &ns1__UpdateGzclMapResponse)
{	struct __ns1__UpdateGzclMap soap_tmp___ns1__UpdateGzclMap;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/UpdateGzclMap";
	soap_tmp___ns1__UpdateGzclMap.ns1__UpdateGzclMap = ns1__UpdateGzclMap;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateGzclMap(soap, &soap_tmp___ns1__UpdateGzclMap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateGzclMap(soap, &soap_tmp___ns1__UpdateGzclMap, "-ns1:UpdateGzclMap", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateGzclMap(soap, &soap_tmp___ns1__UpdateGzclMap, "-ns1:UpdateGzclMap", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpdateGzclMapResponse*>(&ns1__UpdateGzclMapResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpdateGzclMapResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateGzclMapResponse.soap_get(soap, "ns1:UpdateGzclMapResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitMapVer(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitMapVer *ns1__GetUnitMapVer, _ns1__GetUnitMapVerResponse &ns1__GetUnitMapVerResponse)
{	struct __ns1__GetUnitMapVer soap_tmp___ns1__GetUnitMapVer;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitMapVer";
	soap_tmp___ns1__GetUnitMapVer.ns1__GetUnitMapVer = ns1__GetUnitMapVer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitMapVer(soap, &soap_tmp___ns1__GetUnitMapVer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitMapVer(soap, &soap_tmp___ns1__GetUnitMapVer, "-ns1:GetUnitMapVer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitMapVer(soap, &soap_tmp___ns1__GetUnitMapVer, "-ns1:GetUnitMapVer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitMapVerResponse*>(&ns1__GetUnitMapVerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitMapVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitMapVerResponse.soap_get(soap, "ns1:GetUnitMapVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMangeMapUpdate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMangeMapUpdate *ns1__GetMangeMapUpdate, _ns1__GetMangeMapUpdateResponse &ns1__GetMangeMapUpdateResponse)
{	struct __ns1__GetMangeMapUpdate soap_tmp___ns1__GetMangeMapUpdate;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMangeMapUpdate";
	soap_tmp___ns1__GetMangeMapUpdate.ns1__GetMangeMapUpdate = ns1__GetMangeMapUpdate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMangeMapUpdate(soap, &soap_tmp___ns1__GetMangeMapUpdate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMangeMapUpdate(soap, &soap_tmp___ns1__GetMangeMapUpdate, "-ns1:GetMangeMapUpdate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMangeMapUpdate(soap, &soap_tmp___ns1__GetMangeMapUpdate, "-ns1:GetMangeMapUpdate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMangeMapUpdateResponse*>(&ns1__GetMangeMapUpdateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMangeMapUpdateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMangeMapUpdateResponse.soap_get(soap, "ns1:GetMangeMapUpdateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__OpenProcess(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__OpenProcess *ns1__OpenProcess, _ns1__OpenProcessResponse &ns1__OpenProcessResponse)
{	struct __ns1__OpenProcess soap_tmp___ns1__OpenProcess;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/OpenProcess";
	soap_tmp___ns1__OpenProcess.ns1__OpenProcess = ns1__OpenProcess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenProcess(soap, &soap_tmp___ns1__OpenProcess);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenProcess(soap, &soap_tmp___ns1__OpenProcess, "-ns1:OpenProcess", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenProcess(soap, &soap_tmp___ns1__OpenProcess, "-ns1:OpenProcess", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__OpenProcessResponse*>(&ns1__OpenProcessResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__OpenProcessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenProcessResponse.soap_get(soap, "ns1:OpenProcessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetEmfPngVer(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetEmfPngVer *ns1__GetEmfPngVer, _ns1__GetEmfPngVerResponse &ns1__GetEmfPngVerResponse)
{	struct __ns1__GetEmfPngVer soap_tmp___ns1__GetEmfPngVer;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetEmfPngVer";
	soap_tmp___ns1__GetEmfPngVer.ns1__GetEmfPngVer = ns1__GetEmfPngVer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEmfPngVer(soap, &soap_tmp___ns1__GetEmfPngVer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEmfPngVer(soap, &soap_tmp___ns1__GetEmfPngVer, "-ns1:GetEmfPngVer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEmfPngVer(soap, &soap_tmp___ns1__GetEmfPngVer, "-ns1:GetEmfPngVer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetEmfPngVerResponse*>(&ns1__GetEmfPngVerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetEmfPngVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetEmfPngVerResponse.soap_get(soap, "ns1:GetEmfPngVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetEmfPngFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetEmfPngFile *ns1__GetEmfPngFile, _ns1__GetEmfPngFileResponse &ns1__GetEmfPngFileResponse)
{	struct __ns1__GetEmfPngFile soap_tmp___ns1__GetEmfPngFile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetEmfPngFile";
	soap_tmp___ns1__GetEmfPngFile.ns1__GetEmfPngFile = ns1__GetEmfPngFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEmfPngFile(soap, &soap_tmp___ns1__GetEmfPngFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEmfPngFile(soap, &soap_tmp___ns1__GetEmfPngFile, "-ns1:GetEmfPngFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEmfPngFile(soap, &soap_tmp___ns1__GetEmfPngFile, "-ns1:GetEmfPngFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetEmfPngFileResponse*>(&ns1__GetEmfPngFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetEmfPngFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetEmfPngFileResponse.soap_get(soap, "ns1:GetEmfPngFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__OpenMapExe(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__OpenMapExe *ns1__OpenMapExe, _ns1__OpenMapExeResponse &ns1__OpenMapExeResponse)
{	struct __ns1__OpenMapExe soap_tmp___ns1__OpenMapExe;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/OpenMapExe";
	soap_tmp___ns1__OpenMapExe.ns1__OpenMapExe = ns1__OpenMapExe;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenMapExe(soap, &soap_tmp___ns1__OpenMapExe);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenMapExe(soap, &soap_tmp___ns1__OpenMapExe, "-ns1:OpenMapExe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenMapExe(soap, &soap_tmp___ns1__OpenMapExe, "-ns1:OpenMapExe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__OpenMapExeResponse*>(&ns1__OpenMapExeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__OpenMapExeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenMapExeResponse.soap_get(soap, "ns1:OpenMapExeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ChaoQi(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ChaoQi *ns1__ChaoQi, _ns1__ChaoQiResponse &ns1__ChaoQiResponse)
{	struct __ns1__ChaoQi soap_tmp___ns1__ChaoQi;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ChaoQi";
	soap_tmp___ns1__ChaoQi.ns1__ChaoQi = ns1__ChaoQi;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ChaoQi(soap, &soap_tmp___ns1__ChaoQi);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ChaoQi(soap, &soap_tmp___ns1__ChaoQi, "-ns1:ChaoQi", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ChaoQi(soap, &soap_tmp___ns1__ChaoQi, "-ns1:ChaoQi", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ChaoQiResponse*>(&ns1__ChaoQiResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ChaoQiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ChaoQiResponse.soap_get(soap, "ns1:ChaoQiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__JiChaoQi(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__JiChaoQi *ns1__JiChaoQi, _ns1__JiChaoQiResponse &ns1__JiChaoQiResponse)
{	struct __ns1__JiChaoQi soap_tmp___ns1__JiChaoQi;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/JiChaoQi";
	soap_tmp___ns1__JiChaoQi.ns1__JiChaoQi = ns1__JiChaoQi;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__JiChaoQi(soap, &soap_tmp___ns1__JiChaoQi);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__JiChaoQi(soap, &soap_tmp___ns1__JiChaoQi, "-ns1:JiChaoQi", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__JiChaoQi(soap, &soap_tmp___ns1__JiChaoQi, "-ns1:JiChaoQi", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__JiChaoQiResponse*>(&ns1__JiChaoQiResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__JiChaoQiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__JiChaoQiResponse.soap_get(soap, "ns1:JiChaoQiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetZhouQi(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetZhouQi *ns1__GetZhouQi, _ns1__GetZhouQiResponse &ns1__GetZhouQiResponse)
{	struct __ns1__GetZhouQi soap_tmp___ns1__GetZhouQi;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetZhouQi";
	soap_tmp___ns1__GetZhouQi.ns1__GetZhouQi = ns1__GetZhouQi;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetZhouQi(soap, &soap_tmp___ns1__GetZhouQi);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetZhouQi(soap, &soap_tmp___ns1__GetZhouQi, "-ns1:GetZhouQi", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetZhouQi(soap, &soap_tmp___ns1__GetZhouQi, "-ns1:GetZhouQi", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetZhouQiResponse*>(&ns1__GetZhouQiResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetZhouQiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetZhouQiResponse.soap_get(soap, "ns1:GetZhouQiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__FlowChartEmf(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__FlowChartEmf *ns1__FlowChartEmf, _ns1__FlowChartEmfResponse &ns1__FlowChartEmfResponse)
{	struct __ns1__FlowChartEmf soap_tmp___ns1__FlowChartEmf;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/FlowChartEmf";
	soap_tmp___ns1__FlowChartEmf.ns1__FlowChartEmf = ns1__FlowChartEmf;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__FlowChartEmf(soap, &soap_tmp___ns1__FlowChartEmf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FlowChartEmf(soap, &soap_tmp___ns1__FlowChartEmf, "-ns1:FlowChartEmf", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FlowChartEmf(soap, &soap_tmp___ns1__FlowChartEmf, "-ns1:FlowChartEmf", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__FlowChartEmfResponse*>(&ns1__FlowChartEmfResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__FlowChartEmfResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FlowChartEmfResponse.soap_get(soap, "ns1:FlowChartEmfResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SGCDrawEmf(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SGCDrawEmf *ns1__SGCDrawEmf, _ns1__SGCDrawEmfResponse &ns1__SGCDrawEmfResponse)
{	struct __ns1__SGCDrawEmf soap_tmp___ns1__SGCDrawEmf;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SGCDrawEmf";
	soap_tmp___ns1__SGCDrawEmf.ns1__SGCDrawEmf = ns1__SGCDrawEmf;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SGCDrawEmf(soap, &soap_tmp___ns1__SGCDrawEmf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SGCDrawEmf(soap, &soap_tmp___ns1__SGCDrawEmf, "-ns1:SGCDrawEmf", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SGCDrawEmf(soap, &soap_tmp___ns1__SGCDrawEmf, "-ns1:SGCDrawEmf", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SGCDrawEmfResponse*>(&ns1__SGCDrawEmfResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SGCDrawEmfResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SGCDrawEmfResponse.soap_get(soap, "ns1:SGCDrawEmfResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GzGetTypeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GzGetTypeList *ns1__GzGetTypeList, _ns1__GzGetTypeListResponse &ns1__GzGetTypeListResponse)
{	struct __ns1__GzGetTypeList soap_tmp___ns1__GzGetTypeList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GzGetTypeList";
	soap_tmp___ns1__GzGetTypeList.ns1__GzGetTypeList = ns1__GzGetTypeList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GzGetTypeList(soap, &soap_tmp___ns1__GzGetTypeList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GzGetTypeList(soap, &soap_tmp___ns1__GzGetTypeList, "-ns1:GzGetTypeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GzGetTypeList(soap, &soap_tmp___ns1__GzGetTypeList, "-ns1:GzGetTypeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GzGetTypeListResponse*>(&ns1__GzGetTypeListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GzGetTypeListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GzGetTypeListResponse.soap_get(soap, "ns1:GzGetTypeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GzGetDeviceStruct(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GzGetDeviceStruct *ns1__GzGetDeviceStruct, _ns1__GzGetDeviceStructResponse &ns1__GzGetDeviceStructResponse)
{	struct __ns1__GzGetDeviceStruct soap_tmp___ns1__GzGetDeviceStruct;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GzGetDeviceStruct";
	soap_tmp___ns1__GzGetDeviceStruct.ns1__GzGetDeviceStruct = ns1__GzGetDeviceStruct;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GzGetDeviceStruct(soap, &soap_tmp___ns1__GzGetDeviceStruct);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GzGetDeviceStruct(soap, &soap_tmp___ns1__GzGetDeviceStruct, "-ns1:GzGetDeviceStruct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GzGetDeviceStruct(soap, &soap_tmp___ns1__GzGetDeviceStruct, "-ns1:GzGetDeviceStruct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GzGetDeviceStructResponse*>(&ns1__GzGetDeviceStructResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GzGetDeviceStructResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GzGetDeviceStructResponse.soap_get(soap, "ns1:GzGetDeviceStructResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveMapFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SaveMapFile *ns1__SaveMapFile, _ns1__SaveMapFileResponse &ns1__SaveMapFileResponse)
{	struct __ns1__SaveMapFile soap_tmp___ns1__SaveMapFile;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SaveMapFile";
	soap_tmp___ns1__SaveMapFile.ns1__SaveMapFile = ns1__SaveMapFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveMapFile(soap, &soap_tmp___ns1__SaveMapFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveMapFile(soap, &soap_tmp___ns1__SaveMapFile, "-ns1:SaveMapFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveMapFile(soap, &soap_tmp___ns1__SaveMapFile, "-ns1:SaveMapFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SaveMapFileResponse*>(&ns1__SaveMapFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SaveMapFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveMapFileResponse.soap_get(soap, "ns1:SaveMapFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SelectYjzhStation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SelectYjzhStation *ns1__SelectYjzhStation, _ns1__SelectYjzhStationResponse &ns1__SelectYjzhStationResponse)
{	struct __ns1__SelectYjzhStation soap_tmp___ns1__SelectYjzhStation;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SelectYjzhStation";
	soap_tmp___ns1__SelectYjzhStation.ns1__SelectYjzhStation = ns1__SelectYjzhStation;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SelectYjzhStation(soap, &soap_tmp___ns1__SelectYjzhStation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SelectYjzhStation(soap, &soap_tmp___ns1__SelectYjzhStation, "-ns1:SelectYjzhStation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SelectYjzhStation(soap, &soap_tmp___ns1__SelectYjzhStation, "-ns1:SelectYjzhStation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SelectYjzhStationResponse*>(&ns1__SelectYjzhStationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SelectYjzhStationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SelectYjzhStationResponse.soap_get(soap, "ns1:SelectYjzhStationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SelectYjzhDevice(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SelectYjzhDevice *ns1__SelectYjzhDevice, _ns1__SelectYjzhDeviceResponse &ns1__SelectYjzhDeviceResponse)
{	struct __ns1__SelectYjzhDevice soap_tmp___ns1__SelectYjzhDevice;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SelectYjzhDevice";
	soap_tmp___ns1__SelectYjzhDevice.ns1__SelectYjzhDevice = ns1__SelectYjzhDevice;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SelectYjzhDevice(soap, &soap_tmp___ns1__SelectYjzhDevice);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SelectYjzhDevice(soap, &soap_tmp___ns1__SelectYjzhDevice, "-ns1:SelectYjzhDevice", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SelectYjzhDevice(soap, &soap_tmp___ns1__SelectYjzhDevice, "-ns1:SelectYjzhDevice", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SelectYjzhDeviceResponse*>(&ns1__SelectYjzhDeviceResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SelectYjzhDeviceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SelectYjzhDeviceResponse.soap_get(soap, "ns1:SelectYjzhDeviceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskAlarmTypes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskAlarmTypes *ns1__GetYjzhZskAlarmTypes, _ns1__GetYjzhZskAlarmTypesResponse &ns1__GetYjzhZskAlarmTypesResponse)
{	struct __ns1__GetYjzhZskAlarmTypes soap_tmp___ns1__GetYjzhZskAlarmTypes;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskAlarmTypes";
	soap_tmp___ns1__GetYjzhZskAlarmTypes.ns1__GetYjzhZskAlarmTypes = ns1__GetYjzhZskAlarmTypes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskAlarmTypes(soap, &soap_tmp___ns1__GetYjzhZskAlarmTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskAlarmTypes(soap, &soap_tmp___ns1__GetYjzhZskAlarmTypes, "-ns1:GetYjzhZskAlarmTypes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskAlarmTypes(soap, &soap_tmp___ns1__GetYjzhZskAlarmTypes, "-ns1:GetYjzhZskAlarmTypes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskAlarmTypesResponse*>(&ns1__GetYjzhZskAlarmTypesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskAlarmTypesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskAlarmTypesResponse.soap_get(soap, "ns1:GetYjzhZskAlarmTypesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskGzFlow_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskGzFlow *ns1__GetYjzhZskGzFlow, _ns1__GetYjzhZskGzFlowResponse &ns1__GetYjzhZskGzFlowResponse)
{	struct __ns1__GetYjzhZskGzFlow_ soap_tmp___ns1__GetYjzhZskGzFlow_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskGzFlow";
	soap_tmp___ns1__GetYjzhZskGzFlow_.ns1__GetYjzhZskGzFlow = ns1__GetYjzhZskGzFlow;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskGzFlow_(soap, &soap_tmp___ns1__GetYjzhZskGzFlow_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskGzFlow_(soap, &soap_tmp___ns1__GetYjzhZskGzFlow_, "-ns1:GetYjzhZskGzFlow", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskGzFlow_(soap, &soap_tmp___ns1__GetYjzhZskGzFlow_, "-ns1:GetYjzhZskGzFlow", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskGzFlowResponse*>(&ns1__GetYjzhZskGzFlowResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskGzFlowResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskGzFlowResponse.soap_get(soap, "ns1:GetYjzhZskGzFlowResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskOtherFlowChartList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskOtherFlowChartList *ns1__GetYjzhZskOtherFlowChartList, _ns1__GetYjzhZskOtherFlowChartListResponse &ns1__GetYjzhZskOtherFlowChartListResponse)
{	struct __ns1__GetYjzhZskOtherFlowChartList_ soap_tmp___ns1__GetYjzhZskOtherFlowChartList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskOtherFlowChartList";
	soap_tmp___ns1__GetYjzhZskOtherFlowChartList_.ns1__GetYjzhZskOtherFlowChartList = ns1__GetYjzhZskOtherFlowChartList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskOtherFlowChartList_(soap, &soap_tmp___ns1__GetYjzhZskOtherFlowChartList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskOtherFlowChartList_(soap, &soap_tmp___ns1__GetYjzhZskOtherFlowChartList_, "-ns1:GetYjzhZskOtherFlowChartList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskOtherFlowChartList_(soap, &soap_tmp___ns1__GetYjzhZskOtherFlowChartList_, "-ns1:GetYjzhZskOtherFlowChartList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskOtherFlowChartListResponse*>(&ns1__GetYjzhZskOtherFlowChartListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskOtherFlowChartListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskOtherFlowChartListResponse.soap_get(soap, "ns1:GetYjzhZskOtherFlowChartListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskDevFlowChartList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskDevFlowChartList *ns1__GetYjzhZskDevFlowChartList, _ns1__GetYjzhZskDevFlowChartListResponse &ns1__GetYjzhZskDevFlowChartListResponse)
{	struct __ns1__GetYjzhZskDevFlowChartList_ soap_tmp___ns1__GetYjzhZskDevFlowChartList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskDevFlowChartList";
	soap_tmp___ns1__GetYjzhZskDevFlowChartList_.ns1__GetYjzhZskDevFlowChartList = ns1__GetYjzhZskDevFlowChartList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskDevFlowChartList_(soap, &soap_tmp___ns1__GetYjzhZskDevFlowChartList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskDevFlowChartList_(soap, &soap_tmp___ns1__GetYjzhZskDevFlowChartList_, "-ns1:GetYjzhZskDevFlowChartList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskDevFlowChartList_(soap, &soap_tmp___ns1__GetYjzhZskDevFlowChartList_, "-ns1:GetYjzhZskDevFlowChartList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskDevFlowChartListResponse*>(&ns1__GetYjzhZskDevFlowChartListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskDevFlowChartListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskDevFlowChartListResponse.soap_get(soap, "ns1:GetYjzhZskDevFlowChartListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPropList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPropList *ns1__GetPropList, _ns1__GetPropListResponse &ns1__GetPropListResponse)
{	struct __ns1__GetPropList_ soap_tmp___ns1__GetPropList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetPropList";
	soap_tmp___ns1__GetPropList_.ns1__GetPropList = ns1__GetPropList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPropList_(soap, &soap_tmp___ns1__GetPropList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPropList_(soap, &soap_tmp___ns1__GetPropList_, "-ns1:GetPropList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPropList_(soap, &soap_tmp___ns1__GetPropList_, "-ns1:GetPropList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPropListResponse*>(&ns1__GetPropListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPropListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPropListResponse.soap_get(soap, "ns1:GetPropListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPropName_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPropName *ns1__GetPropName, _ns1__GetPropNameResponse &ns1__GetPropNameResponse)
{	struct __ns1__GetPropName_ soap_tmp___ns1__GetPropName_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetPropName";
	soap_tmp___ns1__GetPropName_.ns1__GetPropName = ns1__GetPropName;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPropName_(soap, &soap_tmp___ns1__GetPropName_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPropName_(soap, &soap_tmp___ns1__GetPropName_, "-ns1:GetPropName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPropName_(soap, &soap_tmp___ns1__GetPropName_, "-ns1:GetPropName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPropNameResponse*>(&ns1__GetPropNameResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPropNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPropNameResponse.soap_get(soap, "ns1:GetPropNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckLoginUser_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckLoginUser *ns1__CheckLoginUser, _ns1__CheckLoginUserResponse &ns1__CheckLoginUserResponse)
{	struct __ns1__CheckLoginUser_ soap_tmp___ns1__CheckLoginUser_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/CheckLoginUser";
	soap_tmp___ns1__CheckLoginUser_.ns1__CheckLoginUser = ns1__CheckLoginUser;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckLoginUser_(soap, &soap_tmp___ns1__CheckLoginUser_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckLoginUser_(soap, &soap_tmp___ns1__CheckLoginUser_, "-ns1:CheckLoginUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckLoginUser_(soap, &soap_tmp___ns1__CheckLoginUser_, "-ns1:CheckLoginUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CheckLoginUserResponse*>(&ns1__CheckLoginUserResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CheckLoginUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckLoginUserResponse.soap_get(soap, "ns1:CheckLoginUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetRyUnit_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetRyUnit *ns1__GetRyUnit, _ns1__GetRyUnitResponse &ns1__GetRyUnitResponse)
{	struct __ns1__GetRyUnit_ soap_tmp___ns1__GetRyUnit_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetRyUnit";
	soap_tmp___ns1__GetRyUnit_.ns1__GetRyUnit = ns1__GetRyUnit;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRyUnit_(soap, &soap_tmp___ns1__GetRyUnit_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRyUnit_(soap, &soap_tmp___ns1__GetRyUnit_, "-ns1:GetRyUnit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRyUnit_(soap, &soap_tmp___ns1__GetRyUnit_, "-ns1:GetRyUnit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetRyUnitResponse*>(&ns1__GetRyUnitResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetRyUnitResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRyUnitResponse.soap_get(soap, "ns1:GetRyUnitResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDevCode_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDevCode *ns1__GetDevCode, _ns1__GetDevCodeResponse &ns1__GetDevCodeResponse)
{	struct __ns1__GetDevCode_ soap_tmp___ns1__GetDevCode_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDevCode";
	soap_tmp___ns1__GetDevCode_.ns1__GetDevCode = ns1__GetDevCode;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDevCode_(soap, &soap_tmp___ns1__GetDevCode_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDevCode_(soap, &soap_tmp___ns1__GetDevCode_, "-ns1:GetDevCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDevCode_(soap, &soap_tmp___ns1__GetDevCode_, "-ns1:GetDevCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDevCodeResponse*>(&ns1__GetDevCodeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDevCodeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDevCodeResponse.soap_get(soap, "ns1:GetDevCodeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckDevCode_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckDevCode *ns1__CheckDevCode, _ns1__CheckDevCodeResponse &ns1__CheckDevCodeResponse)
{	struct __ns1__CheckDevCode_ soap_tmp___ns1__CheckDevCode_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/CheckDevCode";
	soap_tmp___ns1__CheckDevCode_.ns1__CheckDevCode = ns1__CheckDevCode;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckDevCode_(soap, &soap_tmp___ns1__CheckDevCode_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckDevCode_(soap, &soap_tmp___ns1__CheckDevCode_, "-ns1:CheckDevCode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckDevCode_(soap, &soap_tmp___ns1__CheckDevCode_, "-ns1:CheckDevCode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CheckDevCodeResponse*>(&ns1__CheckDevCodeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CheckDevCodeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckDevCodeResponse.soap_get(soap, "ns1:CheckDevCodeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__HelloWorld_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__HelloWorld *ns1__HelloWorld, _ns1__HelloWorldResponse &ns1__HelloWorldResponse)
{	struct __ns1__HelloWorld_ soap_tmp___ns1__HelloWorld_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/HelloWorld";
	soap_tmp___ns1__HelloWorld_.ns1__HelloWorld = ns1__HelloWorld;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_, "-ns1:HelloWorld", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_, "-ns1:HelloWorld", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__HelloWorldResponse*>(&ns1__HelloWorldResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__HelloWorldResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorldResponse.soap_get(soap, "ns1:HelloWorldResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDBString_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDBString *ns1__GetDBString, _ns1__GetDBStringResponse &ns1__GetDBStringResponse)
{	struct __ns1__GetDBString_ soap_tmp___ns1__GetDBString_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDBString";
	soap_tmp___ns1__GetDBString_.ns1__GetDBString = ns1__GetDBString;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDBString_(soap, &soap_tmp___ns1__GetDBString_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDBString_(soap, &soap_tmp___ns1__GetDBString_, "-ns1:GetDBString", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDBString_(soap, &soap_tmp___ns1__GetDBString_, "-ns1:GetDBString", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDBStringResponse*>(&ns1__GetDBStringResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDBStringResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDBStringResponse.soap_get(soap, "ns1:GetDBStringResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QueryData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QueryData *ns1__QueryData, _ns1__QueryDataResponse &ns1__QueryDataResponse)
{	struct __ns1__QueryData_ soap_tmp___ns1__QueryData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/QueryData";
	soap_tmp___ns1__QueryData_.ns1__QueryData = ns1__QueryData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryData_(soap, &soap_tmp___ns1__QueryData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryData_(soap, &soap_tmp___ns1__QueryData_, "-ns1:QueryData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryData_(soap, &soap_tmp___ns1__QueryData_, "-ns1:QueryData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__QueryDataResponse*>(&ns1__QueryDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__QueryDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryDataResponse.soap_get(soap, "ns1:QueryDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QueryDataCount_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QueryDataCount *ns1__QueryDataCount, _ns1__QueryDataCountResponse &ns1__QueryDataCountResponse)
{	struct __ns1__QueryDataCount_ soap_tmp___ns1__QueryDataCount_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/QueryDataCount";
	soap_tmp___ns1__QueryDataCount_.ns1__QueryDataCount = ns1__QueryDataCount;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryDataCount_(soap, &soap_tmp___ns1__QueryDataCount_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryDataCount_(soap, &soap_tmp___ns1__QueryDataCount_, "-ns1:QueryDataCount", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryDataCount_(soap, &soap_tmp___ns1__QueryDataCount_, "-ns1:QueryDataCount", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__QueryDataCountResponse*>(&ns1__QueryDataCountResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__QueryDataCountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryDataCountResponse.soap_get(soap, "ns1:QueryDataCountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExecuteSql *ns1__ExecuteSql, _ns1__ExecuteSqlResponse &ns1__ExecuteSqlResponse)
{	struct __ns1__ExecuteSql_ soap_tmp___ns1__ExecuteSql_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ExecuteSql";
	soap_tmp___ns1__ExecuteSql_.ns1__ExecuteSql = ns1__ExecuteSql;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteSql_(soap, &soap_tmp___ns1__ExecuteSql_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteSql_(soap, &soap_tmp___ns1__ExecuteSql_, "-ns1:ExecuteSql", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteSql_(soap, &soap_tmp___ns1__ExecuteSql_, "-ns1:ExecuteSql", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ExecuteSqlResponse*>(&ns1__ExecuteSqlResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteSqlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteSqlResponse.soap_get(soap, "ns1:ExecuteSqlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SaveData *ns1__SaveData, _ns1__SaveDataResponse &ns1__SaveDataResponse)
{	struct __ns1__SaveData_ soap_tmp___ns1__SaveData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SaveData";
	soap_tmp___ns1__SaveData_.ns1__SaveData = ns1__SaveData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveData_(soap, &soap_tmp___ns1__SaveData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveData_(soap, &soap_tmp___ns1__SaveData_, "-ns1:SaveData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveData_(soap, &soap_tmp___ns1__SaveData_, "-ns1:SaveData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SaveDataResponse*>(&ns1__SaveDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SaveDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveDataResponse.soap_get(soap, "ns1:SaveDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveFileData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SaveFileData *ns1__SaveFileData, _ns1__SaveFileDataResponse &ns1__SaveFileDataResponse)
{	struct __ns1__SaveFileData_ soap_tmp___ns1__SaveFileData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SaveFileData";
	soap_tmp___ns1__SaveFileData_.ns1__SaveFileData = ns1__SaveFileData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveFileData_(soap, &soap_tmp___ns1__SaveFileData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveFileData_(soap, &soap_tmp___ns1__SaveFileData_, "-ns1:SaveFileData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveFileData_(soap, &soap_tmp___ns1__SaveFileData_, "-ns1:SaveFileData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SaveFileDataResponse*>(&ns1__SaveFileDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SaveFileDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveFileDataResponse.soap_get(soap, "ns1:SaveFileDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownPic *ns1__DownPic, _ns1__DownPicResponse &ns1__DownPicResponse)
{	struct __ns1__DownPic_ soap_tmp___ns1__DownPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownPic";
	soap_tmp___ns1__DownPic_.ns1__DownPic = ns1__DownPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownPic_(soap, &soap_tmp___ns1__DownPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownPic_(soap, &soap_tmp___ns1__DownPic_, "-ns1:DownPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownPic_(soap, &soap_tmp___ns1__DownPic_, "-ns1:DownPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownPicResponse*>(&ns1__DownPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownPicResponse.soap_get(soap, "ns1:DownPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownAllPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownAllPic *ns1__DownAllPic, _ns1__DownAllPicResponse &ns1__DownAllPicResponse)
{	struct __ns1__DownAllPic_ soap_tmp___ns1__DownAllPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownAllPic";
	soap_tmp___ns1__DownAllPic_.ns1__DownAllPic = ns1__DownAllPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownAllPic_(soap, &soap_tmp___ns1__DownAllPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownAllPic_(soap, &soap_tmp___ns1__DownAllPic_, "-ns1:DownAllPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownAllPic_(soap, &soap_tmp___ns1__DownAllPic_, "-ns1:DownAllPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownAllPicResponse*>(&ns1__DownAllPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownAllPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownAllPicResponse.soap_get(soap, "ns1:DownAllPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGxdataUpTime_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetGxdataUpTime *ns1__GetGxdataUpTime, _ns1__GetGxdataUpTimeResponse &ns1__GetGxdataUpTimeResponse)
{	struct __ns1__GetGxdataUpTime_ soap_tmp___ns1__GetGxdataUpTime_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetGxdataUpTime";
	soap_tmp___ns1__GetGxdataUpTime_.ns1__GetGxdataUpTime = ns1__GetGxdataUpTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetGxdataUpTime_(soap, &soap_tmp___ns1__GetGxdataUpTime_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetGxdataUpTime_(soap, &soap_tmp___ns1__GetGxdataUpTime_, "-ns1:GetGxdataUpTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetGxdataUpTime_(soap, &soap_tmp___ns1__GetGxdataUpTime_, "-ns1:GetGxdataUpTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetGxdataUpTimeResponse*>(&ns1__GetGxdataUpTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetGxdataUpTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetGxdataUpTimeResponse.soap_get(soap, "ns1:GetGxdataUpTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__signedUserInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__signedUserInfo *ns1__signedUserInfo, _ns1__signedUserInfoResponse &ns1__signedUserInfoResponse)
{	struct __ns1__signedUserInfo_ soap_tmp___ns1__signedUserInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/signedUserInfo";
	soap_tmp___ns1__signedUserInfo_.ns1__signedUserInfo = ns1__signedUserInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__signedUserInfo_(soap, &soap_tmp___ns1__signedUserInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__signedUserInfo_(soap, &soap_tmp___ns1__signedUserInfo_, "-ns1:signedUserInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__signedUserInfo_(soap, &soap_tmp___ns1__signedUserInfo_, "-ns1:signedUserInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__signedUserInfoResponse*>(&ns1__signedUserInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__signedUserInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__signedUserInfoResponse.soap_get(soap, "ns1:signedUserInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetOsDateTime_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetOsDateTime *ns1__GetOsDateTime, _ns1__GetOsDateTimeResponse &ns1__GetOsDateTimeResponse)
{	struct __ns1__GetOsDateTime_ soap_tmp___ns1__GetOsDateTime_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetOsDateTime";
	soap_tmp___ns1__GetOsDateTime_.ns1__GetOsDateTime = ns1__GetOsDateTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOsDateTime_(soap, &soap_tmp___ns1__GetOsDateTime_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOsDateTime_(soap, &soap_tmp___ns1__GetOsDateTime_, "-ns1:GetOsDateTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOsDateTime_(soap, &soap_tmp___ns1__GetOsDateTime_, "-ns1:GetOsDateTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetOsDateTimeResponse*>(&ns1__GetOsDateTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetOsDateTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOsDateTimeResponse.soap_get(soap, "ns1:GetOsDateTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QueryPhotobw_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QueryPhotobw *ns1__QueryPhotobw, _ns1__QueryPhotobwResponse &ns1__QueryPhotobwResponse)
{	struct __ns1__QueryPhotobw_ soap_tmp___ns1__QueryPhotobw_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/QueryPhotobw";
	soap_tmp___ns1__QueryPhotobw_.ns1__QueryPhotobw = ns1__QueryPhotobw;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryPhotobw_(soap, &soap_tmp___ns1__QueryPhotobw_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryPhotobw_(soap, &soap_tmp___ns1__QueryPhotobw_, "-ns1:QueryPhotobw", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryPhotobw_(soap, &soap_tmp___ns1__QueryPhotobw_, "-ns1:QueryPhotobw", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__QueryPhotobwResponse*>(&ns1__QueryPhotobwResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__QueryPhotobwResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryPhotobwResponse.soap_get(soap, "ns1:QueryPhotobwResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TcdQuery_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TcdQuery *ns1__TcdQuery, _ns1__TcdQueryResponse &ns1__TcdQueryResponse)
{	struct __ns1__TcdQuery_ soap_tmp___ns1__TcdQuery_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/TcdQuery";
	soap_tmp___ns1__TcdQuery_.ns1__TcdQuery = ns1__TcdQuery;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TcdQuery_(soap, &soap_tmp___ns1__TcdQuery_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TcdQuery_(soap, &soap_tmp___ns1__TcdQuery_, "-ns1:TcdQuery", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TcdQuery_(soap, &soap_tmp___ns1__TcdQuery_, "-ns1:TcdQuery", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__TcdQueryResponse*>(&ns1__TcdQueryResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__TcdQueryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TcdQueryResponse.soap_get(soap, "ns1:TcdQueryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TcdSendup_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TcdSendup *ns1__TcdSendup, _ns1__TcdSendupResponse &ns1__TcdSendupResponse)
{	struct __ns1__TcdSendup_ soap_tmp___ns1__TcdSendup_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/TcdSendup";
	soap_tmp___ns1__TcdSendup_.ns1__TcdSendup = ns1__TcdSendup;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TcdSendup_(soap, &soap_tmp___ns1__TcdSendup_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TcdSendup_(soap, &soap_tmp___ns1__TcdSendup_, "-ns1:TcdSendup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TcdSendup_(soap, &soap_tmp___ns1__TcdSendup_, "-ns1:TcdSendup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__TcdSendupResponse*>(&ns1__TcdSendupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__TcdSendupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TcdSendupResponse.soap_get(soap, "ns1:TcdSendupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpLoadData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpLoadData *ns1__UpLoadData, _ns1__UpLoadDataResponse &ns1__UpLoadDataResponse)
{	struct __ns1__UpLoadData_ soap_tmp___ns1__UpLoadData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/UpLoadData";
	soap_tmp___ns1__UpLoadData_.ns1__UpLoadData = ns1__UpLoadData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpLoadData_(soap, &soap_tmp___ns1__UpLoadData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpLoadData_(soap, &soap_tmp___ns1__UpLoadData_, "-ns1:UpLoadData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpLoadData_(soap, &soap_tmp___ns1__UpLoadData_, "-ns1:UpLoadData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpLoadDataResponse*>(&ns1__UpLoadDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpLoadDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpLoadDataResponse.soap_get(soap, "ns1:UpLoadDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteSqlForColb_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExecuteSqlForColb *ns1__ExecuteSqlForColb, _ns1__ExecuteSqlForColbResponse &ns1__ExecuteSqlForColbResponse)
{	struct __ns1__ExecuteSqlForColb_ soap_tmp___ns1__ExecuteSqlForColb_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ExecuteSqlForColb";
	soap_tmp___ns1__ExecuteSqlForColb_.ns1__ExecuteSqlForColb = ns1__ExecuteSqlForColb;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteSqlForColb_(soap, &soap_tmp___ns1__ExecuteSqlForColb_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteSqlForColb_(soap, &soap_tmp___ns1__ExecuteSqlForColb_, "-ns1:ExecuteSqlForColb", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteSqlForColb_(soap, &soap_tmp___ns1__ExecuteSqlForColb_, "-ns1:ExecuteSqlForColb", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ExecuteSqlForColbResponse*>(&ns1__ExecuteSqlForColbResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteSqlForColbResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteSqlForColbResponse.soap_get(soap, "ns1:ExecuteSqlForColbResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXHYDGLXTupdater_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXHYDGLXTupdater *ns1__GetXHYDGLXTupdater, _ns1__GetXHYDGLXTupdaterResponse &ns1__GetXHYDGLXTupdaterResponse)
{	struct __ns1__GetXHYDGLXTupdater_ soap_tmp___ns1__GetXHYDGLXTupdater_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetXHYDGLXTupdater";
	soap_tmp___ns1__GetXHYDGLXTupdater_.ns1__GetXHYDGLXTupdater = ns1__GetXHYDGLXTupdater;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXHYDGLXTupdater_(soap, &soap_tmp___ns1__GetXHYDGLXTupdater_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXHYDGLXTupdater_(soap, &soap_tmp___ns1__GetXHYDGLXTupdater_, "-ns1:GetXHYDGLXTupdater", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXHYDGLXTupdater_(soap, &soap_tmp___ns1__GetXHYDGLXTupdater_, "-ns1:GetXHYDGLXTupdater", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetXHYDGLXTupdaterResponse*>(&ns1__GetXHYDGLXTupdaterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetXHYDGLXTupdaterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXHYDGLXTupdaterResponse.soap_get(soap, "ns1:GetXHYDGLXTupdaterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAPVupdater_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAPVupdater *ns1__GetAPVupdater, _ns1__GetAPVupdaterResponse &ns1__GetAPVupdaterResponse)
{	struct __ns1__GetAPVupdater_ soap_tmp___ns1__GetAPVupdater_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetAPVupdater";
	soap_tmp___ns1__GetAPVupdater_.ns1__GetAPVupdater = ns1__GetAPVupdater;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAPVupdater_(soap, &soap_tmp___ns1__GetAPVupdater_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAPVupdater_(soap, &soap_tmp___ns1__GetAPVupdater_, "-ns1:GetAPVupdater", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAPVupdater_(soap, &soap_tmp___ns1__GetAPVupdater_, "-ns1:GetAPVupdater", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetAPVupdaterResponse*>(&ns1__GetAPVupdaterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetAPVupdaterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAPVupdaterResponse.soap_get(soap, "ns1:GetAPVupdaterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpLoadFile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpLoadFile *ns1__UpLoadFile, _ns1__UpLoadFileResponse &ns1__UpLoadFileResponse)
{	struct __ns1__UpLoadFile_ soap_tmp___ns1__UpLoadFile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/UpLoadFile";
	soap_tmp___ns1__UpLoadFile_.ns1__UpLoadFile = ns1__UpLoadFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpLoadFile_(soap, &soap_tmp___ns1__UpLoadFile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpLoadFile_(soap, &soap_tmp___ns1__UpLoadFile_, "-ns1:UpLoadFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpLoadFile_(soap, &soap_tmp___ns1__UpLoadFile_, "-ns1:UpLoadFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpLoadFileResponse*>(&ns1__UpLoadFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpLoadFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpLoadFileResponse.soap_get(soap, "ns1:UpLoadFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__upPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__upPic *ns1__upPic, _ns1__upPicResponse &ns1__upPicResponse)
{	struct __ns1__upPic_ soap_tmp___ns1__upPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/upPic";
	soap_tmp___ns1__upPic_.ns1__upPic = ns1__upPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__upPic_(soap, &soap_tmp___ns1__upPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__upPic_(soap, &soap_tmp___ns1__upPic_, "-ns1:upPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__upPic_(soap, &soap_tmp___ns1__upPic_, "-ns1:upPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__upPicResponse*>(&ns1__upPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__upPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__upPicResponse.soap_get(soap, "ns1:upPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownloadPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownloadPic *ns1__DownloadPic, _ns1__DownloadPicResponse &ns1__DownloadPicResponse)
{	struct __ns1__DownloadPic_ soap_tmp___ns1__DownloadPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownloadPic";
	soap_tmp___ns1__DownloadPic_.ns1__DownloadPic = ns1__DownloadPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadPic_(soap, &soap_tmp___ns1__DownloadPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadPic_(soap, &soap_tmp___ns1__DownloadPic_, "-ns1:DownloadPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadPic_(soap, &soap_tmp___ns1__DownloadPic_, "-ns1:DownloadPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownloadPicResponse*>(&ns1__DownloadPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownloadPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadPicResponse.soap_get(soap, "ns1:DownloadPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetPicNames_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPicNames *ns1__GetPicNames, _ns1__GetPicNamesResponse &ns1__GetPicNamesResponse)
{	struct __ns1__GetPicNames_ soap_tmp___ns1__GetPicNames_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetPicNames";
	soap_tmp___ns1__GetPicNames_.ns1__GetPicNames = ns1__GetPicNames;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPicNames_(soap, &soap_tmp___ns1__GetPicNames_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPicNames_(soap, &soap_tmp___ns1__GetPicNames_, "-ns1:GetPicNames", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPicNames_(soap, &soap_tmp___ns1__GetPicNames_, "-ns1:GetPicNames", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPicNamesResponse*>(&ns1__GetPicNamesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPicNamesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPicNamesResponse.soap_get(soap, "ns1:GetPicNamesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDwInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDwInfo *ns1__GetDwInfo, _ns1__GetDwInfoResponse &ns1__GetDwInfoResponse)
{	struct __ns1__GetDwInfo_ soap_tmp___ns1__GetDwInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDwInfo";
	soap_tmp___ns1__GetDwInfo_.ns1__GetDwInfo = ns1__GetDwInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDwInfo_(soap, &soap_tmp___ns1__GetDwInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDwInfo_(soap, &soap_tmp___ns1__GetDwInfo_, "-ns1:GetDwInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDwInfo_(soap, &soap_tmp___ns1__GetDwInfo_, "-ns1:GetDwInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDwInfoResponse*>(&ns1__GetDwInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDwInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDwInfoResponse.soap_get(soap, "ns1:GetDwInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDwPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDwPic *ns1__GetDwPic, _ns1__GetDwPicResponse &ns1__GetDwPicResponse)
{	struct __ns1__GetDwPic_ soap_tmp___ns1__GetDwPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDwPic";
	soap_tmp___ns1__GetDwPic_.ns1__GetDwPic = ns1__GetDwPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDwPic_(soap, &soap_tmp___ns1__GetDwPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDwPic_(soap, &soap_tmp___ns1__GetDwPic_, "-ns1:GetDwPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDwPic_(soap, &soap_tmp___ns1__GetDwPic_, "-ns1:GetDwPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDwPicResponse*>(&ns1__GetDwPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDwPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDwPicResponse.soap_get(soap, "ns1:GetDwPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDeviceXj_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDeviceXj *ns1__GetDeviceXj, _ns1__GetDeviceXjResponse &ns1__GetDeviceXjResponse)
{	struct __ns1__GetDeviceXj_ soap_tmp___ns1__GetDeviceXj_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDeviceXj";
	soap_tmp___ns1__GetDeviceXj_.ns1__GetDeviceXj = ns1__GetDeviceXj;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDeviceXj_(soap, &soap_tmp___ns1__GetDeviceXj_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDeviceXj_(soap, &soap_tmp___ns1__GetDeviceXj_, "-ns1:GetDeviceXj", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDeviceXj_(soap, &soap_tmp___ns1__GetDeviceXj_, "-ns1:GetDeviceXj", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDeviceXjResponse*>(&ns1__GetDeviceXjResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDeviceXjResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDeviceXjResponse.soap_get(soap, "ns1:GetDeviceXjResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJxData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJxData *ns1__GetJxData, _ns1__GetJxDataResponse &ns1__GetJxDataResponse)
{	struct __ns1__GetJxData_ soap_tmp___ns1__GetJxData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetJxData";
	soap_tmp___ns1__GetJxData_.ns1__GetJxData = ns1__GetJxData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJxData_(soap, &soap_tmp___ns1__GetJxData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJxData_(soap, &soap_tmp___ns1__GetJxData_, "-ns1:GetJxData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJxData_(soap, &soap_tmp___ns1__GetJxData_, "-ns1:GetJxData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetJxDataResponse*>(&ns1__GetJxDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetJxDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJxDataResponse.soap_get(soap, "ns1:GetJxDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetStationJxData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetStationJxData *ns1__GetStationJxData, _ns1__GetStationJxDataResponse &ns1__GetStationJxDataResponse)
{	struct __ns1__GetStationJxData_ soap_tmp___ns1__GetStationJxData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetStationJxData";
	soap_tmp___ns1__GetStationJxData_.ns1__GetStationJxData = ns1__GetStationJxData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStationJxData_(soap, &soap_tmp___ns1__GetStationJxData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStationJxData_(soap, &soap_tmp___ns1__GetStationJxData_, "-ns1:GetStationJxData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStationJxData_(soap, &soap_tmp___ns1__GetStationJxData_, "-ns1:GetStationJxData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetStationJxDataResponse*>(&ns1__GetStationJxDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetStationJxDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStationJxDataResponse.soap_get(soap, "ns1:GetStationJxDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetJxPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetJxPic *ns1__GetJxPic, _ns1__GetJxPicResponse &ns1__GetJxPicResponse)
{	struct __ns1__GetJxPic_ soap_tmp___ns1__GetJxPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetJxPic";
	soap_tmp___ns1__GetJxPic_.ns1__GetJxPic = ns1__GetJxPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetJxPic_(soap, &soap_tmp___ns1__GetJxPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetJxPic_(soap, &soap_tmp___ns1__GetJxPic_, "-ns1:GetJxPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetJxPic_(soap, &soap_tmp___ns1__GetJxPic_, "-ns1:GetJxPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetJxPicResponse*>(&ns1__GetJxPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetJxPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetJxPicResponse.soap_get(soap, "ns1:GetJxPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDevPic_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDevPic *ns1__GetDevPic, _ns1__GetDevPicResponse &ns1__GetDevPicResponse)
{	struct __ns1__GetDevPic_ soap_tmp___ns1__GetDevPic_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDevPic";
	soap_tmp___ns1__GetDevPic_.ns1__GetDevPic = ns1__GetDevPic;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDevPic_(soap, &soap_tmp___ns1__GetDevPic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDevPic_(soap, &soap_tmp___ns1__GetDevPic_, "-ns1:GetDevPic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDevPic_(soap, &soap_tmp___ns1__GetDevPic_, "-ns1:GetDevPic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDevPicResponse*>(&ns1__GetDevPicResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDevPicResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDevPicResponse.soap_get(soap, "ns1:GetDevPicResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetBgImg_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetBgImg *ns1__GetBgImg, _ns1__GetBgImgResponse &ns1__GetBgImgResponse)
{	struct __ns1__GetBgImg_ soap_tmp___ns1__GetBgImg_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetBgImg";
	soap_tmp___ns1__GetBgImg_.ns1__GetBgImg = ns1__GetBgImg;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBgImg_(soap, &soap_tmp___ns1__GetBgImg_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBgImg_(soap, &soap_tmp___ns1__GetBgImg_, "-ns1:GetBgImg", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBgImg_(soap, &soap_tmp___ns1__GetBgImg_, "-ns1:GetBgImg", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetBgImgResponse*>(&ns1__GetBgImgResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetBgImgResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBgImgResponse.soap_get(soap, "ns1:GetBgImgResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDcsData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDcsData *ns1__GetDcsData, _ns1__GetDcsDataResponse &ns1__GetDcsDataResponse)
{	struct __ns1__GetDcsData_ soap_tmp___ns1__GetDcsData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDcsData";
	soap_tmp___ns1__GetDcsData_.ns1__GetDcsData = ns1__GetDcsData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDcsData_(soap, &soap_tmp___ns1__GetDcsData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDcsData_(soap, &soap_tmp___ns1__GetDcsData_, "-ns1:GetDcsData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDcsData_(soap, &soap_tmp___ns1__GetDcsData_, "-ns1:GetDcsData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDcsDataResponse*>(&ns1__GetDcsDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDcsDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDcsDataResponse.soap_get(soap, "ns1:GetDcsDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownLoadMobGPSData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownLoadMobGPSData *ns1__DownLoadMobGPSData, _ns1__DownLoadMobGPSDataResponse &ns1__DownLoadMobGPSDataResponse)
{	struct __ns1__DownLoadMobGPSData_ soap_tmp___ns1__DownLoadMobGPSData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownLoadMobGPSData";
	soap_tmp___ns1__DownLoadMobGPSData_.ns1__DownLoadMobGPSData = ns1__DownLoadMobGPSData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownLoadMobGPSData_(soap, &soap_tmp___ns1__DownLoadMobGPSData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownLoadMobGPSData_(soap, &soap_tmp___ns1__DownLoadMobGPSData_, "-ns1:DownLoadMobGPSData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownLoadMobGPSData_(soap, &soap_tmp___ns1__DownLoadMobGPSData_, "-ns1:DownLoadMobGPSData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownLoadMobGPSDataResponse*>(&ns1__DownLoadMobGPSDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownLoadMobGPSDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownLoadMobGPSDataResponse.soap_get(soap, "ns1:DownLoadMobGPSDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MobDownLoadData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__MobDownLoadData *ns1__MobDownLoadData, _ns1__MobDownLoadDataResponse &ns1__MobDownLoadDataResponse)
{	struct __ns1__MobDownLoadData_ soap_tmp___ns1__MobDownLoadData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/MobDownLoadData";
	soap_tmp___ns1__MobDownLoadData_.ns1__MobDownLoadData = ns1__MobDownLoadData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__MobDownLoadData_(soap, &soap_tmp___ns1__MobDownLoadData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MobDownLoadData_(soap, &soap_tmp___ns1__MobDownLoadData_, "-ns1:MobDownLoadData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MobDownLoadData_(soap, &soap_tmp___ns1__MobDownLoadData_, "-ns1:MobDownLoadData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__MobDownLoadDataResponse*>(&ns1__MobDownLoadDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__MobDownLoadDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MobDownLoadDataResponse.soap_get(soap, "ns1:MobDownLoadDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetOpenFireInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetOpenFireInfo *ns1__GetOpenFireInfo, _ns1__GetOpenFireInfoResponse &ns1__GetOpenFireInfoResponse)
{	struct __ns1__GetOpenFireInfo_ soap_tmp___ns1__GetOpenFireInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetOpenFireInfo";
	soap_tmp___ns1__GetOpenFireInfo_.ns1__GetOpenFireInfo = ns1__GetOpenFireInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOpenFireInfo_(soap, &soap_tmp___ns1__GetOpenFireInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOpenFireInfo_(soap, &soap_tmp___ns1__GetOpenFireInfo_, "-ns1:GetOpenFireInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOpenFireInfo_(soap, &soap_tmp___ns1__GetOpenFireInfo_, "-ns1:GetOpenFireInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetOpenFireInfoResponse*>(&ns1__GetOpenFireInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetOpenFireInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOpenFireInfoResponse.soap_get(soap, "ns1:GetOpenFireInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDwList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDwList *ns1__GetDwList, _ns1__GetDwListResponse &ns1__GetDwListResponse)
{	struct __ns1__GetDwList_ soap_tmp___ns1__GetDwList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDwList";
	soap_tmp___ns1__GetDwList_.ns1__GetDwList = ns1__GetDwList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDwList_(soap, &soap_tmp___ns1__GetDwList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDwList_(soap, &soap_tmp___ns1__GetDwList_, "-ns1:GetDwList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDwList_(soap, &soap_tmp___ns1__GetDwList_, "-ns1:GetDwList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDwListResponse*>(&ns1__GetDwListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDwListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDwListResponse.soap_get(soap, "ns1:GetDwListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitStation_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitStation *ns1__GetUnitStation, _ns1__GetUnitStationResponse &ns1__GetUnitStationResponse)
{	struct __ns1__GetUnitStation_ soap_tmp___ns1__GetUnitStation_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitStation";
	soap_tmp___ns1__GetUnitStation_.ns1__GetUnitStation = ns1__GetUnitStation;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitStation_(soap, &soap_tmp___ns1__GetUnitStation_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitStation_(soap, &soap_tmp___ns1__GetUnitStation_, "-ns1:GetUnitStation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitStation_(soap, &soap_tmp___ns1__GetUnitStation_, "-ns1:GetUnitStation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitStationResponse*>(&ns1__GetUnitStationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitStationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitStationResponse.soap_get(soap, "ns1:GetUnitStationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitStruct_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitStruct *ns1__GetUnitStruct, _ns1__GetUnitStructResponse &ns1__GetUnitStructResponse)
{	struct __ns1__GetUnitStruct_ soap_tmp___ns1__GetUnitStruct_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitStruct";
	soap_tmp___ns1__GetUnitStruct_.ns1__GetUnitStruct = ns1__GetUnitStruct;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitStruct_(soap, &soap_tmp___ns1__GetUnitStruct_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitStruct_(soap, &soap_tmp___ns1__GetUnitStruct_, "-ns1:GetUnitStruct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitStruct_(soap, &soap_tmp___ns1__GetUnitStruct_, "-ns1:GetUnitStruct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitStructResponse*>(&ns1__GetUnitStructResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitStructResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitStructResponse.soap_get(soap, "ns1:GetUnitStructResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitPersonInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitPersonInfo *ns1__GetUnitPersonInfo, _ns1__GetUnitPersonInfoResponse &ns1__GetUnitPersonInfoResponse)
{	struct __ns1__GetUnitPersonInfo_ soap_tmp___ns1__GetUnitPersonInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitPersonInfo";
	soap_tmp___ns1__GetUnitPersonInfo_.ns1__GetUnitPersonInfo = ns1__GetUnitPersonInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitPersonInfo_(soap, &soap_tmp___ns1__GetUnitPersonInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitPersonInfo_(soap, &soap_tmp___ns1__GetUnitPersonInfo_, "-ns1:GetUnitPersonInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitPersonInfo_(soap, &soap_tmp___ns1__GetUnitPersonInfo_, "-ns1:GetUnitPersonInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitPersonInfoResponse*>(&ns1__GetUnitPersonInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitPersonInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitPersonInfoResponse.soap_get(soap, "ns1:GetUnitPersonInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFileSize_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFileSize *ns1__GetFileSize, _ns1__GetFileSizeResponse &ns1__GetFileSizeResponse)
{	struct __ns1__GetFileSize_ soap_tmp___ns1__GetFileSize_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetFileSize";
	soap_tmp___ns1__GetFileSize_.ns1__GetFileSize = ns1__GetFileSize;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFileSize_(soap, &soap_tmp___ns1__GetFileSize_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFileSize_(soap, &soap_tmp___ns1__GetFileSize_, "-ns1:GetFileSize", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFileSize_(soap, &soap_tmp___ns1__GetFileSize_, "-ns1:GetFileSize", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFileSizeResponse*>(&ns1__GetFileSizeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFileSizeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFileSizeResponse.soap_get(soap, "ns1:GetFileSizeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXbList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXbList *ns1__GetXbList, _ns1__GetXbListResponse &ns1__GetXbListResponse)
{	struct __ns1__GetXbList_ soap_tmp___ns1__GetXbList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetXbList";
	soap_tmp___ns1__GetXbList_.ns1__GetXbList = ns1__GetXbList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXbList_(soap, &soap_tmp___ns1__GetXbList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXbList_(soap, &soap_tmp___ns1__GetXbList_, "-ns1:GetXbList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXbList_(soap, &soap_tmp___ns1__GetXbList_, "-ns1:GetXbList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetXbListResponse*>(&ns1__GetXbListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetXbListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXbListResponse.soap_get(soap, "ns1:GetXbListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetXbStationList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetXbStationList *ns1__GetXbStationList, _ns1__GetXbStationListResponse &ns1__GetXbStationListResponse)
{	struct __ns1__GetXbStationList_ soap_tmp___ns1__GetXbStationList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetXbStationList";
	soap_tmp___ns1__GetXbStationList_.ns1__GetXbStationList = ns1__GetXbStationList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetXbStationList_(soap, &soap_tmp___ns1__GetXbStationList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetXbStationList_(soap, &soap_tmp___ns1__GetXbStationList_, "-ns1:GetXbStationList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetXbStationList_(soap, &soap_tmp___ns1__GetXbStationList_, "-ns1:GetXbStationList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetXbStationListResponse*>(&ns1__GetXbStationListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetXbStationListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetXbStationListResponse.soap_get(soap, "ns1:GetXbStationListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapDeviceType_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapDeviceType *ns1__GetMapDeviceType, _ns1__GetMapDeviceTypeResponse &ns1__GetMapDeviceTypeResponse)
{	struct __ns1__GetMapDeviceType_ soap_tmp___ns1__GetMapDeviceType_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapDeviceType";
	soap_tmp___ns1__GetMapDeviceType_.ns1__GetMapDeviceType = ns1__GetMapDeviceType;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapDeviceType_(soap, &soap_tmp___ns1__GetMapDeviceType_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapDeviceType_(soap, &soap_tmp___ns1__GetMapDeviceType_, "-ns1:GetMapDeviceType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapDeviceType_(soap, &soap_tmp___ns1__GetMapDeviceType_, "-ns1:GetMapDeviceType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapDeviceTypeResponse*>(&ns1__GetMapDeviceTypeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapDeviceTypeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapDeviceTypeResponse.soap_get(soap, "ns1:GetMapDeviceTypeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGxDeviceData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetGxDeviceData *ns1__GetGxDeviceData, _ns1__GetGxDeviceDataResponse &ns1__GetGxDeviceDataResponse)
{	struct __ns1__GetGxDeviceData_ soap_tmp___ns1__GetGxDeviceData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetGxDeviceData";
	soap_tmp___ns1__GetGxDeviceData_.ns1__GetGxDeviceData = ns1__GetGxDeviceData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetGxDeviceData_(soap, &soap_tmp___ns1__GetGxDeviceData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetGxDeviceData_(soap, &soap_tmp___ns1__GetGxDeviceData_, "-ns1:GetGxDeviceData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetGxDeviceData_(soap, &soap_tmp___ns1__GetGxDeviceData_, "-ns1:GetGxDeviceData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetGxDeviceDataResponse*>(&ns1__GetGxDeviceDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetGxDeviceDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetGxDeviceDataResponse.soap_get(soap, "ns1:GetGxDeviceDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDownFileInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDownFileInfo *ns1__GetDownFileInfo, _ns1__GetDownFileInfoResponse &ns1__GetDownFileInfoResponse)
{	struct __ns1__GetDownFileInfo_ soap_tmp___ns1__GetDownFileInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetDownFileInfo";
	soap_tmp___ns1__GetDownFileInfo_.ns1__GetDownFileInfo = ns1__GetDownFileInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDownFileInfo_(soap, &soap_tmp___ns1__GetDownFileInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDownFileInfo_(soap, &soap_tmp___ns1__GetDownFileInfo_, "-ns1:GetDownFileInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDownFileInfo_(soap, &soap_tmp___ns1__GetDownFileInfo_, "-ns1:GetDownFileInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDownFileInfoResponse*>(&ns1__GetDownFileInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDownFileInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDownFileInfoResponse.soap_get(soap, "ns1:GetDownFileInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownMapfile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownMapfile *ns1__DownMapfile, _ns1__DownMapfileResponse &ns1__DownMapfileResponse)
{	struct __ns1__DownMapfile_ soap_tmp___ns1__DownMapfile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownMapfile";
	soap_tmp___ns1__DownMapfile_.ns1__DownMapfile = ns1__DownMapfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownMapfile_(soap, &soap_tmp___ns1__DownMapfile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownMapfile_(soap, &soap_tmp___ns1__DownMapfile_, "-ns1:DownMapfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownMapfile_(soap, &soap_tmp___ns1__DownMapfile_, "-ns1:DownMapfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownMapfileResponse*>(&ns1__DownMapfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownMapfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownMapfileResponse.soap_get(soap, "ns1:DownMapfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFileNew_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFileNew *ns1__GetFileNew, _ns1__GetFileNewResponse &ns1__GetFileNewResponse)
{	struct __ns1__GetFileNew_ soap_tmp___ns1__GetFileNew_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetFileNew";
	soap_tmp___ns1__GetFileNew_.ns1__GetFileNew = ns1__GetFileNew;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFileNew_(soap, &soap_tmp___ns1__GetFileNew_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFileNew_(soap, &soap_tmp___ns1__GetFileNew_, "-ns1:GetFileNew", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFileNew_(soap, &soap_tmp___ns1__GetFileNew_, "-ns1:GetFileNew", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFileNewResponse*>(&ns1__GetFileNewResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFileNewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFileNewResponse.soap_get(soap, "ns1:GetFileNewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AlterTable_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AlterTable *ns1__AlterTable, _ns1__AlterTableResponse &ns1__AlterTableResponse)
{	struct __ns1__AlterTable_ soap_tmp___ns1__AlterTable_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/AlterTable";
	soap_tmp___ns1__AlterTable_.ns1__AlterTable = ns1__AlterTable;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__AlterTable_(soap, &soap_tmp___ns1__AlterTable_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AlterTable_(soap, &soap_tmp___ns1__AlterTable_, "-ns1:AlterTable", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AlterTable_(soap, &soap_tmp___ns1__AlterTable_, "-ns1:AlterTable", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__AlterTableResponse*>(&ns1__AlterTableResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__AlterTableResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AlterTableResponse.soap_get(soap, "ns1:AlterTableResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownCQData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownCQData *ns1__DownCQData, _ns1__DownCQDataResponse &ns1__DownCQDataResponse)
{	struct __ns1__DownCQData_ soap_tmp___ns1__DownCQData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownCQData";
	soap_tmp___ns1__DownCQData_.ns1__DownCQData = ns1__DownCQData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownCQData_(soap, &soap_tmp___ns1__DownCQData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownCQData_(soap, &soap_tmp___ns1__DownCQData_, "-ns1:DownCQData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownCQData_(soap, &soap_tmp___ns1__DownCQData_, "-ns1:DownCQData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownCQDataResponse*>(&ns1__DownCQDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownCQDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownCQDataResponse.soap_get(soap, "ns1:DownCQDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTabList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTabList *ns1__GetTabList, _ns1__GetTabListResponse &ns1__GetTabListResponse)
{	struct __ns1__GetTabList_ soap_tmp___ns1__GetTabList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetTabList";
	soap_tmp___ns1__GetTabList_.ns1__GetTabList = ns1__GetTabList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTabList_(soap, &soap_tmp___ns1__GetTabList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTabList_(soap, &soap_tmp___ns1__GetTabList_, "-ns1:GetTabList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTabList_(soap, &soap_tmp___ns1__GetTabList_, "-ns1:GetTabList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetTabListResponse*>(&ns1__GetTabListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTabListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTabListResponse.soap_get(soap, "ns1:GetTabListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IsOracleTable_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IsOracleTable *ns1__IsOracleTable, _ns1__IsOracleTableResponse &ns1__IsOracleTableResponse)
{	struct __ns1__IsOracleTable_ soap_tmp___ns1__IsOracleTable_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/IsOracleTable";
	soap_tmp___ns1__IsOracleTable_.ns1__IsOracleTable = ns1__IsOracleTable;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__IsOracleTable_(soap, &soap_tmp___ns1__IsOracleTable_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IsOracleTable_(soap, &soap_tmp___ns1__IsOracleTable_, "-ns1:IsOracleTable", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IsOracleTable_(soap, &soap_tmp___ns1__IsOracleTable_, "-ns1:IsOracleTable", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__IsOracleTableResponse*>(&ns1__IsOracleTableResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__IsOracleTableResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IsOracleTableResponse.soap_get(soap, "ns1:IsOracleTableResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFieldInfo_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFieldInfo *ns1__GetFieldInfo, _ns1__GetFieldInfoResponse &ns1__GetFieldInfoResponse)
{	struct __ns1__GetFieldInfo_ soap_tmp___ns1__GetFieldInfo_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetFieldInfo";
	soap_tmp___ns1__GetFieldInfo_.ns1__GetFieldInfo = ns1__GetFieldInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFieldInfo_(soap, &soap_tmp___ns1__GetFieldInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFieldInfo_(soap, &soap_tmp___ns1__GetFieldInfo_, "-ns1:GetFieldInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFieldInfo_(soap, &soap_tmp___ns1__GetFieldInfo_, "-ns1:GetFieldInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFieldInfoResponse*>(&ns1__GetFieldInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFieldInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFieldInfoResponse.soap_get(soap, "ns1:GetFieldInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteSqlForFile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExecuteSqlForFile *ns1__ExecuteSqlForFile, _ns1__ExecuteSqlForFileResponse &ns1__ExecuteSqlForFileResponse)
{	struct __ns1__ExecuteSqlForFile_ soap_tmp___ns1__ExecuteSqlForFile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ExecuteSqlForFile";
	soap_tmp___ns1__ExecuteSqlForFile_.ns1__ExecuteSqlForFile = ns1__ExecuteSqlForFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExecuteSqlForFile_(soap, &soap_tmp___ns1__ExecuteSqlForFile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExecuteSqlForFile_(soap, &soap_tmp___ns1__ExecuteSqlForFile_, "-ns1:ExecuteSqlForFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExecuteSqlForFile_(soap, &soap_tmp___ns1__ExecuteSqlForFile_, "-ns1:ExecuteSqlForFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ExecuteSqlForFileResponse*>(&ns1__ExecuteSqlForFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ExecuteSqlForFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExecuteSqlForFileResponse.soap_get(soap, "ns1:ExecuteSqlForFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DownLoadFile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DownLoadFile *ns1__DownLoadFile, _ns1__DownLoadFileResponse &ns1__DownLoadFileResponse)
{	struct __ns1__DownLoadFile_ soap_tmp___ns1__DownLoadFile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/DownLoadFile";
	soap_tmp___ns1__DownLoadFile_.ns1__DownLoadFile = ns1__DownLoadFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownLoadFile_(soap, &soap_tmp___ns1__DownLoadFile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownLoadFile_(soap, &soap_tmp___ns1__DownLoadFile_, "-ns1:DownLoadFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownLoadFile_(soap, &soap_tmp___ns1__DownLoadFile_, "-ns1:DownLoadFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DownLoadFileResponse*>(&ns1__DownLoadFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DownLoadFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownLoadFileResponse.soap_get(soap, "ns1:DownLoadFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__WriteFile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__WriteFile *ns1__WriteFile, _ns1__WriteFileResponse &ns1__WriteFileResponse)
{	struct __ns1__WriteFile_ soap_tmp___ns1__WriteFile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/WriteFile";
	soap_tmp___ns1__WriteFile_.ns1__WriteFile = ns1__WriteFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__WriteFile_(soap, &soap_tmp___ns1__WriteFile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WriteFile_(soap, &soap_tmp___ns1__WriteFile_, "-ns1:WriteFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WriteFile_(soap, &soap_tmp___ns1__WriteFile_, "-ns1:WriteFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__WriteFileResponse*>(&ns1__WriteFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__WriteFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WriteFileResponse.soap_get(soap, "ns1:WriteFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapUpdateTime_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapUpdateTime *ns1__GetMapUpdateTime, _ns1__GetMapUpdateTimeResponse &ns1__GetMapUpdateTimeResponse)
{	struct __ns1__GetMapUpdateTime_ soap_tmp___ns1__GetMapUpdateTime_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapUpdateTime";
	soap_tmp___ns1__GetMapUpdateTime_.ns1__GetMapUpdateTime = ns1__GetMapUpdateTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapUpdateTime_(soap, &soap_tmp___ns1__GetMapUpdateTime_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapUpdateTime_(soap, &soap_tmp___ns1__GetMapUpdateTime_, "-ns1:GetMapUpdateTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapUpdateTime_(soap, &soap_tmp___ns1__GetMapUpdateTime_, "-ns1:GetMapUpdateTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapUpdateTimeResponse*>(&ns1__GetMapUpdateTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapUpdateTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapUpdateTimeResponse.soap_get(soap, "ns1:GetMapUpdateTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapTabName_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapTabName *ns1__GetMapTabName, _ns1__GetMapTabNameResponse &ns1__GetMapTabNameResponse)
{	struct __ns1__GetMapTabName_ soap_tmp___ns1__GetMapTabName_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapTabName";
	soap_tmp___ns1__GetMapTabName_.ns1__GetMapTabName = ns1__GetMapTabName;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapTabName_(soap, &soap_tmp___ns1__GetMapTabName_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapTabName_(soap, &soap_tmp___ns1__GetMapTabName_, "-ns1:GetMapTabName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapTabName_(soap, &soap_tmp___ns1__GetMapTabName_, "-ns1:GetMapTabName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapTabNameResponse*>(&ns1__GetMapTabNameResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapTabNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapTabNameResponse.soap_get(soap, "ns1:GetMapTabNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapDeviceData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapDeviceData *ns1__GetMapDeviceData, _ns1__GetMapDeviceDataResponse &ns1__GetMapDeviceDataResponse)
{	struct __ns1__GetMapDeviceData_ soap_tmp___ns1__GetMapDeviceData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapDeviceData";
	soap_tmp___ns1__GetMapDeviceData_.ns1__GetMapDeviceData = ns1__GetMapDeviceData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapDeviceData_(soap, &soap_tmp___ns1__GetMapDeviceData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapDeviceData_(soap, &soap_tmp___ns1__GetMapDeviceData_, "-ns1:GetMapDeviceData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapDeviceData_(soap, &soap_tmp___ns1__GetMapDeviceData_, "-ns1:GetMapDeviceData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapDeviceDataResponse*>(&ns1__GetMapDeviceDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapDeviceDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapDeviceDataResponse.soap_get(soap, "ns1:GetMapDeviceDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMaList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMaList *ns1__GetMaList, _ns1__GetMaListResponse &ns1__GetMaListResponse)
{	struct __ns1__GetMaList_ soap_tmp___ns1__GetMaList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMaList";
	soap_tmp___ns1__GetMaList_.ns1__GetMaList = ns1__GetMaList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMaList_(soap, &soap_tmp___ns1__GetMaList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMaList_(soap, &soap_tmp___ns1__GetMaList_, "-ns1:GetMaList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMaList_(soap, &soap_tmp___ns1__GetMaList_, "-ns1:GetMaList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMaListResponse*>(&ns1__GetMaListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMaListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMaListResponse.soap_get(soap, "ns1:GetMaListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMangeUnit_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMangeUnit *ns1__GetMangeUnit, _ns1__GetMangeUnitResponse &ns1__GetMangeUnitResponse)
{	struct __ns1__GetMangeUnit_ soap_tmp___ns1__GetMangeUnit_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMangeUnit";
	soap_tmp___ns1__GetMangeUnit_.ns1__GetMangeUnit = ns1__GetMangeUnit;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMangeUnit_(soap, &soap_tmp___ns1__GetMangeUnit_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMangeUnit_(soap, &soap_tmp___ns1__GetMangeUnit_, "-ns1:GetMangeUnit", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMangeUnit_(soap, &soap_tmp___ns1__GetMangeUnit_, "-ns1:GetMangeUnit", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMangeUnitResponse*>(&ns1__GetMangeUnitResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMangeUnitResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMangeUnitResponse.soap_get(soap, "ns1:GetMangeUnitResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMangeXb_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMangeXb *ns1__GetMangeXb, _ns1__GetMangeXbResponse &ns1__GetMangeXbResponse)
{	struct __ns1__GetMangeXb_ soap_tmp___ns1__GetMangeXb_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMangeXb";
	soap_tmp___ns1__GetMangeXb_.ns1__GetMangeXb = ns1__GetMangeXb;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMangeXb_(soap, &soap_tmp___ns1__GetMangeXb_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMangeXb_(soap, &soap_tmp___ns1__GetMangeXb_, "-ns1:GetMangeXb", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMangeXb_(soap, &soap_tmp___ns1__GetMangeXb_, "-ns1:GetMangeXb", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMangeXbResponse*>(&ns1__GetMangeXbResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMangeXbResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMangeXbResponse.soap_get(soap, "ns1:GetMangeXbResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckMapVer_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckMapVer *ns1__CheckMapVer, _ns1__CheckMapVerResponse &ns1__CheckMapVerResponse)
{	struct __ns1__CheckMapVer_ soap_tmp___ns1__CheckMapVer_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/CheckMapVer";
	soap_tmp___ns1__CheckMapVer_.ns1__CheckMapVer = ns1__CheckMapVer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckMapVer_(soap, &soap_tmp___ns1__CheckMapVer_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckMapVer_(soap, &soap_tmp___ns1__CheckMapVer_, "-ns1:CheckMapVer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckMapVer_(soap, &soap_tmp___ns1__CheckMapVer_, "-ns1:CheckMapVer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CheckMapVerResponse*>(&ns1__CheckMapVerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CheckMapVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckMapVerResponse.soap_get(soap, "ns1:CheckMapVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMap_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMap *ns1__GetMap, _ns1__GetMapResponse &ns1__GetMapResponse)
{	struct __ns1__GetMap_ soap_tmp___ns1__GetMap_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMap";
	soap_tmp___ns1__GetMap_.ns1__GetMap = ns1__GetMap;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMap_(soap, &soap_tmp___ns1__GetMap_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMap_(soap, &soap_tmp___ns1__GetMap_, "-ns1:GetMap", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMap_(soap, &soap_tmp___ns1__GetMap_, "-ns1:GetMap", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapResponse*>(&ns1__GetMapResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapResponse.soap_get(soap, "ns1:GetMapResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTableData_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTableData *ns1__GetTableData, _ns1__GetTableDataResponse &ns1__GetTableDataResponse)
{	struct __ns1__GetTableData_ soap_tmp___ns1__GetTableData_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetTableData";
	soap_tmp___ns1__GetTableData_.ns1__GetTableData = ns1__GetTableData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTableData_(soap, &soap_tmp___ns1__GetTableData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTableData_(soap, &soap_tmp___ns1__GetTableData_, "-ns1:GetTableData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTableData_(soap, &soap_tmp___ns1__GetTableData_, "-ns1:GetTableData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetTableDataResponse*>(&ns1__GetTableDataResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTableDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTableDataResponse.soap_get(soap, "ns1:GetTableDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ServerLevel_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ServerLevel *ns1__ServerLevel, _ns1__ServerLevelResponse &ns1__ServerLevelResponse)
{	struct __ns1__ServerLevel_ soap_tmp___ns1__ServerLevel_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ServerLevel";
	soap_tmp___ns1__ServerLevel_.ns1__ServerLevel = ns1__ServerLevel;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ServerLevel_(soap, &soap_tmp___ns1__ServerLevel_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ServerLevel_(soap, &soap_tmp___ns1__ServerLevel_, "-ns1:ServerLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ServerLevel_(soap, &soap_tmp___ns1__ServerLevel_, "-ns1:ServerLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ServerLevelResponse*>(&ns1__ServerLevelResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ServerLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ServerLevelResponse.soap_get(soap, "ns1:ServerLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMapListTime_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMapListTime *ns1__GetMapListTime, _ns1__GetMapListTimeResponse &ns1__GetMapListTimeResponse)
{	struct __ns1__GetMapListTime_ soap_tmp___ns1__GetMapListTime_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMapListTime";
	soap_tmp___ns1__GetMapListTime_.ns1__GetMapListTime = ns1__GetMapListTime;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMapListTime_(soap, &soap_tmp___ns1__GetMapListTime_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMapListTime_(soap, &soap_tmp___ns1__GetMapListTime_, "-ns1:GetMapListTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMapListTime_(soap, &soap_tmp___ns1__GetMapListTime_, "-ns1:GetMapListTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMapListTimeResponse*>(&ns1__GetMapListTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMapListTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMapListTimeResponse.soap_get(soap, "ns1:GetMapListTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateGzclMap_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateGzclMap *ns1__UpdateGzclMap, _ns1__UpdateGzclMapResponse &ns1__UpdateGzclMapResponse)
{	struct __ns1__UpdateGzclMap_ soap_tmp___ns1__UpdateGzclMap_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/UpdateGzclMap";
	soap_tmp___ns1__UpdateGzclMap_.ns1__UpdateGzclMap = ns1__UpdateGzclMap;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateGzclMap_(soap, &soap_tmp___ns1__UpdateGzclMap_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateGzclMap_(soap, &soap_tmp___ns1__UpdateGzclMap_, "-ns1:UpdateGzclMap", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateGzclMap_(soap, &soap_tmp___ns1__UpdateGzclMap_, "-ns1:UpdateGzclMap", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpdateGzclMapResponse*>(&ns1__UpdateGzclMapResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpdateGzclMapResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateGzclMapResponse.soap_get(soap, "ns1:UpdateGzclMapResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUnitMapVer_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUnitMapVer *ns1__GetUnitMapVer, _ns1__GetUnitMapVerResponse &ns1__GetUnitMapVerResponse)
{	struct __ns1__GetUnitMapVer_ soap_tmp___ns1__GetUnitMapVer_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetUnitMapVer";
	soap_tmp___ns1__GetUnitMapVer_.ns1__GetUnitMapVer = ns1__GetUnitMapVer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUnitMapVer_(soap, &soap_tmp___ns1__GetUnitMapVer_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUnitMapVer_(soap, &soap_tmp___ns1__GetUnitMapVer_, "-ns1:GetUnitMapVer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUnitMapVer_(soap, &soap_tmp___ns1__GetUnitMapVer_, "-ns1:GetUnitMapVer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUnitMapVerResponse*>(&ns1__GetUnitMapVerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUnitMapVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUnitMapVerResponse.soap_get(soap, "ns1:GetUnitMapVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetMangeMapUpdate_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMangeMapUpdate *ns1__GetMangeMapUpdate, _ns1__GetMangeMapUpdateResponse &ns1__GetMangeMapUpdateResponse)
{	struct __ns1__GetMangeMapUpdate_ soap_tmp___ns1__GetMangeMapUpdate_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetMangeMapUpdate";
	soap_tmp___ns1__GetMangeMapUpdate_.ns1__GetMangeMapUpdate = ns1__GetMangeMapUpdate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMangeMapUpdate_(soap, &soap_tmp___ns1__GetMangeMapUpdate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMangeMapUpdate_(soap, &soap_tmp___ns1__GetMangeMapUpdate_, "-ns1:GetMangeMapUpdate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMangeMapUpdate_(soap, &soap_tmp___ns1__GetMangeMapUpdate_, "-ns1:GetMangeMapUpdate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetMangeMapUpdateResponse*>(&ns1__GetMangeMapUpdateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetMangeMapUpdateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMangeMapUpdateResponse.soap_get(soap, "ns1:GetMangeMapUpdateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__OpenProcess_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__OpenProcess *ns1__OpenProcess, _ns1__OpenProcessResponse &ns1__OpenProcessResponse)
{	struct __ns1__OpenProcess_ soap_tmp___ns1__OpenProcess_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/OpenProcess";
	soap_tmp___ns1__OpenProcess_.ns1__OpenProcess = ns1__OpenProcess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenProcess_(soap, &soap_tmp___ns1__OpenProcess_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenProcess_(soap, &soap_tmp___ns1__OpenProcess_, "-ns1:OpenProcess", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenProcess_(soap, &soap_tmp___ns1__OpenProcess_, "-ns1:OpenProcess", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__OpenProcessResponse*>(&ns1__OpenProcessResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__OpenProcessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenProcessResponse.soap_get(soap, "ns1:OpenProcessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetEmfPngVer_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetEmfPngVer *ns1__GetEmfPngVer, _ns1__GetEmfPngVerResponse &ns1__GetEmfPngVerResponse)
{	struct __ns1__GetEmfPngVer_ soap_tmp___ns1__GetEmfPngVer_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetEmfPngVer";
	soap_tmp___ns1__GetEmfPngVer_.ns1__GetEmfPngVer = ns1__GetEmfPngVer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEmfPngVer_(soap, &soap_tmp___ns1__GetEmfPngVer_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEmfPngVer_(soap, &soap_tmp___ns1__GetEmfPngVer_, "-ns1:GetEmfPngVer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEmfPngVer_(soap, &soap_tmp___ns1__GetEmfPngVer_, "-ns1:GetEmfPngVer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetEmfPngVerResponse*>(&ns1__GetEmfPngVerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetEmfPngVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetEmfPngVerResponse.soap_get(soap, "ns1:GetEmfPngVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetEmfPngFile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetEmfPngFile *ns1__GetEmfPngFile, _ns1__GetEmfPngFileResponse &ns1__GetEmfPngFileResponse)
{	struct __ns1__GetEmfPngFile_ soap_tmp___ns1__GetEmfPngFile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetEmfPngFile";
	soap_tmp___ns1__GetEmfPngFile_.ns1__GetEmfPngFile = ns1__GetEmfPngFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEmfPngFile_(soap, &soap_tmp___ns1__GetEmfPngFile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEmfPngFile_(soap, &soap_tmp___ns1__GetEmfPngFile_, "-ns1:GetEmfPngFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEmfPngFile_(soap, &soap_tmp___ns1__GetEmfPngFile_, "-ns1:GetEmfPngFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetEmfPngFileResponse*>(&ns1__GetEmfPngFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetEmfPngFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetEmfPngFileResponse.soap_get(soap, "ns1:GetEmfPngFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__OpenMapExe_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__OpenMapExe *ns1__OpenMapExe, _ns1__OpenMapExeResponse &ns1__OpenMapExeResponse)
{	struct __ns1__OpenMapExe_ soap_tmp___ns1__OpenMapExe_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/OpenMapExe";
	soap_tmp___ns1__OpenMapExe_.ns1__OpenMapExe = ns1__OpenMapExe;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenMapExe_(soap, &soap_tmp___ns1__OpenMapExe_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenMapExe_(soap, &soap_tmp___ns1__OpenMapExe_, "-ns1:OpenMapExe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenMapExe_(soap, &soap_tmp___ns1__OpenMapExe_, "-ns1:OpenMapExe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__OpenMapExeResponse*>(&ns1__OpenMapExeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__OpenMapExeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenMapExeResponse.soap_get(soap, "ns1:OpenMapExeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ChaoQi_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ChaoQi *ns1__ChaoQi, _ns1__ChaoQiResponse &ns1__ChaoQiResponse)
{	struct __ns1__ChaoQi_ soap_tmp___ns1__ChaoQi_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/ChaoQi";
	soap_tmp___ns1__ChaoQi_.ns1__ChaoQi = ns1__ChaoQi;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ChaoQi_(soap, &soap_tmp___ns1__ChaoQi_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ChaoQi_(soap, &soap_tmp___ns1__ChaoQi_, "-ns1:ChaoQi", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ChaoQi_(soap, &soap_tmp___ns1__ChaoQi_, "-ns1:ChaoQi", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ChaoQiResponse*>(&ns1__ChaoQiResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ChaoQiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ChaoQiResponse.soap_get(soap, "ns1:ChaoQiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__JiChaoQi_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__JiChaoQi *ns1__JiChaoQi, _ns1__JiChaoQiResponse &ns1__JiChaoQiResponse)
{	struct __ns1__JiChaoQi_ soap_tmp___ns1__JiChaoQi_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/JiChaoQi";
	soap_tmp___ns1__JiChaoQi_.ns1__JiChaoQi = ns1__JiChaoQi;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__JiChaoQi_(soap, &soap_tmp___ns1__JiChaoQi_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__JiChaoQi_(soap, &soap_tmp___ns1__JiChaoQi_, "-ns1:JiChaoQi", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__JiChaoQi_(soap, &soap_tmp___ns1__JiChaoQi_, "-ns1:JiChaoQi", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__JiChaoQiResponse*>(&ns1__JiChaoQiResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__JiChaoQiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__JiChaoQiResponse.soap_get(soap, "ns1:JiChaoQiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetZhouQi_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetZhouQi *ns1__GetZhouQi, _ns1__GetZhouQiResponse &ns1__GetZhouQiResponse)
{	struct __ns1__GetZhouQi_ soap_tmp___ns1__GetZhouQi_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetZhouQi";
	soap_tmp___ns1__GetZhouQi_.ns1__GetZhouQi = ns1__GetZhouQi;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetZhouQi_(soap, &soap_tmp___ns1__GetZhouQi_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetZhouQi_(soap, &soap_tmp___ns1__GetZhouQi_, "-ns1:GetZhouQi", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetZhouQi_(soap, &soap_tmp___ns1__GetZhouQi_, "-ns1:GetZhouQi", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetZhouQiResponse*>(&ns1__GetZhouQiResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetZhouQiResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetZhouQiResponse.soap_get(soap, "ns1:GetZhouQiResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__FlowChartEmf_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__FlowChartEmf *ns1__FlowChartEmf, _ns1__FlowChartEmfResponse &ns1__FlowChartEmfResponse)
{	struct __ns1__FlowChartEmf_ soap_tmp___ns1__FlowChartEmf_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/FlowChartEmf";
	soap_tmp___ns1__FlowChartEmf_.ns1__FlowChartEmf = ns1__FlowChartEmf;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__FlowChartEmf_(soap, &soap_tmp___ns1__FlowChartEmf_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FlowChartEmf_(soap, &soap_tmp___ns1__FlowChartEmf_, "-ns1:FlowChartEmf", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FlowChartEmf_(soap, &soap_tmp___ns1__FlowChartEmf_, "-ns1:FlowChartEmf", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__FlowChartEmfResponse*>(&ns1__FlowChartEmfResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__FlowChartEmfResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FlowChartEmfResponse.soap_get(soap, "ns1:FlowChartEmfResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SGCDrawEmf_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SGCDrawEmf *ns1__SGCDrawEmf, _ns1__SGCDrawEmfResponse &ns1__SGCDrawEmfResponse)
{	struct __ns1__SGCDrawEmf_ soap_tmp___ns1__SGCDrawEmf_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SGCDrawEmf";
	soap_tmp___ns1__SGCDrawEmf_.ns1__SGCDrawEmf = ns1__SGCDrawEmf;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SGCDrawEmf_(soap, &soap_tmp___ns1__SGCDrawEmf_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SGCDrawEmf_(soap, &soap_tmp___ns1__SGCDrawEmf_, "-ns1:SGCDrawEmf", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SGCDrawEmf_(soap, &soap_tmp___ns1__SGCDrawEmf_, "-ns1:SGCDrawEmf", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SGCDrawEmfResponse*>(&ns1__SGCDrawEmfResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SGCDrawEmfResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SGCDrawEmfResponse.soap_get(soap, "ns1:SGCDrawEmfResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GzGetTypeList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GzGetTypeList *ns1__GzGetTypeList, _ns1__GzGetTypeListResponse &ns1__GzGetTypeListResponse)
{	struct __ns1__GzGetTypeList_ soap_tmp___ns1__GzGetTypeList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GzGetTypeList";
	soap_tmp___ns1__GzGetTypeList_.ns1__GzGetTypeList = ns1__GzGetTypeList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GzGetTypeList_(soap, &soap_tmp___ns1__GzGetTypeList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GzGetTypeList_(soap, &soap_tmp___ns1__GzGetTypeList_, "-ns1:GzGetTypeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GzGetTypeList_(soap, &soap_tmp___ns1__GzGetTypeList_, "-ns1:GzGetTypeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GzGetTypeListResponse*>(&ns1__GzGetTypeListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GzGetTypeListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GzGetTypeListResponse.soap_get(soap, "ns1:GzGetTypeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GzGetDeviceStruct_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GzGetDeviceStruct *ns1__GzGetDeviceStruct, _ns1__GzGetDeviceStructResponse &ns1__GzGetDeviceStructResponse)
{	struct __ns1__GzGetDeviceStruct_ soap_tmp___ns1__GzGetDeviceStruct_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GzGetDeviceStruct";
	soap_tmp___ns1__GzGetDeviceStruct_.ns1__GzGetDeviceStruct = ns1__GzGetDeviceStruct;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GzGetDeviceStruct_(soap, &soap_tmp___ns1__GzGetDeviceStruct_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GzGetDeviceStruct_(soap, &soap_tmp___ns1__GzGetDeviceStruct_, "-ns1:GzGetDeviceStruct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GzGetDeviceStruct_(soap, &soap_tmp___ns1__GzGetDeviceStruct_, "-ns1:GzGetDeviceStruct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GzGetDeviceStructResponse*>(&ns1__GzGetDeviceStructResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GzGetDeviceStructResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GzGetDeviceStructResponse.soap_get(soap, "ns1:GzGetDeviceStructResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveMapFile_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SaveMapFile *ns1__SaveMapFile, _ns1__SaveMapFileResponse &ns1__SaveMapFileResponse)
{	struct __ns1__SaveMapFile_ soap_tmp___ns1__SaveMapFile_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SaveMapFile";
	soap_tmp___ns1__SaveMapFile_.ns1__SaveMapFile = ns1__SaveMapFile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveMapFile_(soap, &soap_tmp___ns1__SaveMapFile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveMapFile_(soap, &soap_tmp___ns1__SaveMapFile_, "-ns1:SaveMapFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveMapFile_(soap, &soap_tmp___ns1__SaveMapFile_, "-ns1:SaveMapFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SaveMapFileResponse*>(&ns1__SaveMapFileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SaveMapFileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveMapFileResponse.soap_get(soap, "ns1:SaveMapFileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SelectYjzhStation_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SelectYjzhStation *ns1__SelectYjzhStation, _ns1__SelectYjzhStationResponse &ns1__SelectYjzhStationResponse)
{	struct __ns1__SelectYjzhStation_ soap_tmp___ns1__SelectYjzhStation_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SelectYjzhStation";
	soap_tmp___ns1__SelectYjzhStation_.ns1__SelectYjzhStation = ns1__SelectYjzhStation;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SelectYjzhStation_(soap, &soap_tmp___ns1__SelectYjzhStation_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SelectYjzhStation_(soap, &soap_tmp___ns1__SelectYjzhStation_, "-ns1:SelectYjzhStation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SelectYjzhStation_(soap, &soap_tmp___ns1__SelectYjzhStation_, "-ns1:SelectYjzhStation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SelectYjzhStationResponse*>(&ns1__SelectYjzhStationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SelectYjzhStationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SelectYjzhStationResponse.soap_get(soap, "ns1:SelectYjzhStationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SelectYjzhDevice_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SelectYjzhDevice *ns1__SelectYjzhDevice, _ns1__SelectYjzhDeviceResponse &ns1__SelectYjzhDeviceResponse)
{	struct __ns1__SelectYjzhDevice_ soap_tmp___ns1__SelectYjzhDevice_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/SelectYjzhDevice";
	soap_tmp___ns1__SelectYjzhDevice_.ns1__SelectYjzhDevice = ns1__SelectYjzhDevice;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SelectYjzhDevice_(soap, &soap_tmp___ns1__SelectYjzhDevice_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SelectYjzhDevice_(soap, &soap_tmp___ns1__SelectYjzhDevice_, "-ns1:SelectYjzhDevice", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SelectYjzhDevice_(soap, &soap_tmp___ns1__SelectYjzhDevice_, "-ns1:SelectYjzhDevice", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SelectYjzhDeviceResponse*>(&ns1__SelectYjzhDeviceResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SelectYjzhDeviceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SelectYjzhDeviceResponse.soap_get(soap, "ns1:SelectYjzhDeviceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetYjzhZskAlarmTypes_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetYjzhZskAlarmTypes *ns1__GetYjzhZskAlarmTypes, _ns1__GetYjzhZskAlarmTypesResponse &ns1__GetYjzhZskAlarmTypesResponse)
{	struct __ns1__GetYjzhZskAlarmTypes_ soap_tmp___ns1__GetYjzhZskAlarmTypes_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.0.244:190/updataService.asmx";
	if (soap_action == NULL)
		soap_action = "http://zbxhupdata.com/webservices/GetYjzhZskAlarmTypes";
	soap_tmp___ns1__GetYjzhZskAlarmTypes_.ns1__GetYjzhZskAlarmTypes = ns1__GetYjzhZskAlarmTypes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetYjzhZskAlarmTypes_(soap, &soap_tmp___ns1__GetYjzhZskAlarmTypes_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetYjzhZskAlarmTypes_(soap, &soap_tmp___ns1__GetYjzhZskAlarmTypes_, "-ns1:GetYjzhZskAlarmTypes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetYjzhZskAlarmTypes_(soap, &soap_tmp___ns1__GetYjzhZskAlarmTypes_, "-ns1:GetYjzhZskAlarmTypes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetYjzhZskAlarmTypesResponse*>(&ns1__GetYjzhZskAlarmTypesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetYjzhZskAlarmTypesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetYjzhZskAlarmTypesResponse.soap_get(soap, "ns1:GetYjzhZskAlarmTypesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
